<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>咦？命令行里的点.是什么意思鸭</title>
    <url>/linux/terminal-what-does-dot-mean/</url>
    <content><![CDATA[<p>咦？命令行里的点.是什么意思鸭</p>
<a id="more"></a>
<p>命令行入门基本功<code>ls</code>、<code>cd</code>。相当于在命令行世界里拥有了眼镜和双腿。</p>
<p>可能有好奇宝宝会碰到命令行里的<code>.</code>，有点好奇是啥意思</p>
<h1 id="一个点"><a href="#一个点" class="headerlink" title="一个点."></a>一个点<code>.</code></h1><p>一个点<code>.</code>代表当前路径，来些🌰</p>
<ol>
<li>这叫原地踏步</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd .</span></pre></td></tr></table></figure>
<ol>
<li>打开当前路径下文件 </li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim ./hello.txt</span></pre></td></tr></table></figure>
<ol>
<li>调用当前文件夹下命令</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./pip install numpy</span></pre></td></tr></table></figure>
<h1 id="两个点"><a href="#两个点" class="headerlink" title="两个点.."></a>两个点<code>..</code></h1><p>两个点<code>..</code>代表上级目录，这个学<code>cd</code>的时候应该很熟练了。</p>
<ol>
<li>返回上级目录</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd ..</span></pre></td></tr></table></figure>
<ol>
<li>返回很上面的目录</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd ../../../..</span></pre></td></tr></table></figure>
<ol>
<li>打开文件之类的和上面一个点的方法一样，不赘述了</li>
</ol>
<h1 id="文件夹名前面带个点"><a href="#文件夹名前面带个点" class="headerlink" title="文件夹名前面带个点"></a>文件夹名前面带个点</h1><p>已知<code>ls</code>显示目录下文件，加个<code>-a</code>参数就会显示所有文件，包括隐藏文件，如</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ls -a</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">..    .    .git</span></pre></td></tr></table></figure>
<p>显然，分别是上级目录，当前目录，以及一个隐藏文件夹。</p>
<p>所以前面带个点的文件夹是隐藏文件夹，比如在 finder 默认情况下是看不到的</p>
<h1 id="三个点"><a href="#三个点" class="headerlink" title="三个点..."></a>三个点<code>...</code></h1><p>emmmmm，三个点<code>...</code>代表无语。</p>
]]></content>
      <tags>
        <tag>入门教程</tag>
      </tags>
  </entry>
  <entry>
    <title>pip 命令找不到？</title>
    <url>/python-code/pip-cmd-not-found/</url>
    <content><![CDATA[<p>pip 命令找不到？</p>
<a id="more"></a>
<p>有些人刚开始用 Python 可能会有</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip: command not found</span></pre></td></tr></table></figure>
<p>原因有二：</p>
<ul>
<li>pip 所在路径不在环境变量内</li>
<li>你没装 pip</li>
</ul>
<p>下面分系统说明下</p>
<h1 id="MacOS-Linux"><a href="#MacOS-Linux" class="headerlink" title="MacOS / Linux"></a>MacOS / Linux</h1><h2 id="安装了-conda"><a href="#安装了-conda" class="headerlink" title="安装了 conda"></a>安装了 conda</h2><p>如果你安装了 anaconda 或者 miniconda，它所安装的文件夹下有个<code>bin</code>文件夹，需要把他放到环境变量内。</p>
<p>此处以安装了 anaconda 为例，安装路径在<code>~/anaconda</code>。</p>
<p>一般命令行是 bash 的，zsh 或者其他的也差不多，下面文件名换个名字而已。下面以 bash 为例。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim ~/.bashrc</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 按 i 进入键入模式</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 添加以下一行</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">PATH=$PATH:~/anaconda</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 按 esc，再输入:wq 然后回车保存退出</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">source ~/.bashrc # 或者重新开一个命令行窗口</span></pre></td></tr></table></figure>
<p>然后检验一下<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip --version</span></pre></td></tr></table></figure></p>
<p>应该可以了</p>
<h2 id="用系统自带的-python"><a href="#用系统自带的-python" class="headerlink" title="用系统自带的 python"></a>用系统自带的 python</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo easy_install pip</span></pre></td></tr></table></figure>
<h1 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h1><h2 id="安装了-conda-1"><a href="#安装了-conda-1" class="headerlink" title="安装了 conda"></a>安装了 conda</h2><p>如果你安装了 anaconda 或者 miniconda，同样把它的<code>bin</code>文件夹添加到环境变量。</p>
<p>windows 添加环境变量方法请自行百度。</p>
<h2 id="安装了官方-python"><a href="#安装了官方-python" class="headerlink" title="安装了官方 python"></a>安装了官方 python</h2><p>那你估计真的安装出了问题？</p>
]]></content>
      <tags>
        <tag>入门教程</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL 安装</title>
    <url>/others/mysql8-install/</url>
    <content><![CDATA[<p>MySQL 安装</p>
<a id="more"></a>
<h1 id="MacOS"><a href="#MacOS" class="headerlink" title="MacOS"></a>MacOS</h1><ol>
<li>下载<br>download from <a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="noopener">https://dev.mysql.com/downloads/mysql/</a>, select <code>macOS 10.14 (x86, 64-bit), DMG Archive</code>(.dmg file)</li>
</ol>
<blockquote>
<p>顺路会看到一个叫 workbench 的，可视化工具，就像看 excel 看数据库，which is recommended.</p>
</blockquote>
<ol>
<li>安装<br>clike <code>next</code> all the way.</li>
</ol>
<p>set the PATH</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim ~/.bash_profile</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 增加以下这行</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">PATH=$PATH:/usr/local/mysql/bin</span></pre></td></tr></table></figure>
<h1 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h1><p>同样在<a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="noopener">https://dev.mysql.com/downloads/mysql/</a>下载，略。</p>
<h1 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> download the configuration</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">wget https://dev.mysql.com/get/mysql-apt-config_0.8.14-1_all.deb</span></pre></td></tr><tr><td class="code"><pre><span class="line">sudo dpkg -i mysql-apt-config_0.8.14-1_all.deb</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> default is fine, select OK and <span class="built_in">return</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">sudo apt update</span></pre></td></tr><tr><td class="code"><pre><span class="line">sudo apt-get install mysql-server</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">set</span> password(spa2020)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> use strong password encryption</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">sudo mysql_secure_installation</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> enter password</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> n (不换root密码)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Remove anonymous users? : y（删除匿名用户）</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Disallow root login remotely?: n（是否禁止 root 远程登录）</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Remove <span class="built_in">test</span> database and access to it? : y（删除测试数据库）</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Reload privilege tables now? : y（立即重新加载特权表）</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">mysql -V # check version</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> mysql  Ver 8.0.19 <span class="keyword">for</span> Linux on x86_64 (MySQL Community Server - GPL)</span></span></pre></td></tr></table></figure>
<h1 id="WSL"><a href="#WSL" class="headerlink" title="WSL"></a>WSL</h1><p>参见<a href="https://benature.github.io/linux/wsl-install-mysql8/">此文</a></p>
<blockquote>
<p>macOS 和 Windows 下可以装个数据库 GUI app  </p>
<ul>
<li>MySQL Workbench (free &amp; recommend)<br><del>如同处理 excel，不用学 mysql 命令也能操作数据库啦</del></li>
</ul>
</blockquote>
]]></content>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>MacOS 自动化 tricks</title>
    <url>/devices/mac-auto-tricks/</url>
    <content><![CDATA[<p>MacOS 自动化 tricks</p>
<a id="more"></a>
<h1 id="with-keyboard-maestro"><a href="#with-keyboard-maestro" class="headerlink" title="with keyboard maestro"></a>with keyboard maestro</h1><h2 id="SideCar"><a href="#SideCar" class="headerlink" title="SideCar"></a>SideCar</h2><figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">tell</span> <span class="built_in">application</span> <span class="string">"System Events"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">tell</span> process <span class="string">"SystemUIServer"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">		click (menu bar <span class="built_in">item</span> <span class="number">1</span> <span class="keyword">of</span> menu bar <span class="number">1</span> <span class="keyword">whose</span> description <span class="keyword">contains</span> <span class="string">"Displays"</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">		click menu <span class="built_in">item</span> <span class="string">"[YOUR iPAD HERE]"</span> <span class="keyword">of</span> menu <span class="number">1</span> <span class="keyword">of</span> <span class="literal">result</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">	<span class="keyword">end</span> <span class="keyword">tell</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">end</span> <span class="keyword">tell</span></span></pre></td></tr></table></figure>
<p>from <a href="https://github.com/Jcowwell/Sidecar-Scripts" target="_blank" rel="noopener">https://github.com/Jcowwell/Sidecar-Scripts</a></p>
<h2 id="Multi-displays"><a href="#Multi-displays" class="headerlink" title="Multi-displays"></a>Multi-displays</h2><ul>
<li><a href="https://forum.keyboardmaestro.com/t/move-window-to-next-screen-and-maintain-its-position/11836/2" target="_blank" rel="noopener">https://forum.keyboardmaestro.com/t/move-window-to-next-screen-and-maintain-its-position/11836/2</a></li>
<li><a href="https://forum.keyboardmaestro.com/t/window-management-on-multiple-displays/10975" target="_blank" rel="noopener">https://forum.keyboardmaestro.com/t/window-management-on-multiple-displays/10975</a></li>
</ul>
<h2 id="Chrome-关闭下方-download-栏"><a href="#Chrome-关闭下方-download-栏" class="headerlink" title="Chrome 关闭下方 download 栏"></a>Chrome 关闭下方 download 栏</h2><p><img src="/devices/mac-auto-tricks/Chrome-close-download.jpeg" alt="chrome"></p>
]]></content>
      <tags>
        <tag>Mac</tag>
        <tag>AppleScript</tag>
      </tags>
  </entry>
  <entry>
    <title>原生 Markdown 高仿 Notion 显示效果（甚至更优）</title>
    <url>/others/markdown-multi-col/</url>
    <content><![CDATA[<p>在 VS Code 中给 Markdown 增加排版自由度</p>
<a id="more"></a>
<p>VS Code 插件选择<code>Instant Markdown</code>，在浏览器 preview，因为 vscode 的侧栏显示 style 有限制。</p>
<h1 id="Install-amp-Configuration"><a href="#Install-amp-Configuration" class="headerlink" title="Install &amp; Configuration"></a>Install &amp; Configuration</h1><p><a href="https://github.com/Benature/vscode-instant-markdown" target="_blank" rel="noopener">如果你想偷懒：https://github.com/Benature/vscode-instant-markdown</a></p>
<p>为了加入自己的 css，对插件做点加工<del>（手脚）</del>：</p>
<ol>
<li>前往插件所在文件夹<br>eg: mac 下路径：<code>/Users/benature/.vscode/extensions/dbankier.vscode-instant-markdown-1.4.4</code></li>
</ol>
<p>原本的结构目录是</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span></pre></td></tr><tr><td class="code"><pre><span class="line">├── README.md</span></pre></td></tr><tr><td class="code"><pre><span class="line">├── index.html</span></pre></td></tr><tr><td class="code"><pre><span class="line">├── jsconfig.json</span></pre></td></tr><tr><td class="code"><pre><span class="line">├── node_modules</span></pre></td></tr><tr><td class="code"><pre><span class="line">│   └── ...</span></pre></td></tr><tr><td class="code"><pre><span class="line">├── out</span></pre></td></tr><tr><td class="code"><pre><span class="line">│   └── src</span></pre></td></tr><tr><td class="code"><pre><span class="line">│       ├── extension.js</span></pre></td></tr><tr><td class="code"><pre><span class="line">│       └── server.js</span></pre></td></tr><tr><td class="code"><pre><span class="line">├── package-lock.json</span></pre></td></tr><tr><td class="code"><pre><span class="line">├── package.json</span></pre></td></tr><tr><td class="code"><pre><span class="line">└── vscode-instant-markdown.gif</span></pre></td></tr></table></figure>
<ol>
<li>新建一个<code>public</code>文件夹，把自己的 css 文件放进去</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.</span></pre></td></tr><tr><td class="code"><pre><span class="line">├── public</span></pre></td></tr><tr><td class="code"><pre><span class="line">│   └── bootstrap</span></pre></td></tr><tr><td class="code"><pre><span class="line">│   │   ├── bootstrap.min.css</span></pre></td></tr><tr><td class="code"><pre><span class="line">│   │   └── ...</span></pre></td></tr><tr><td class="code"><pre><span class="line">│   └── muyi.css</span></pre></td></tr><tr><td class="code"><pre><span class="line">├── ...</span></pre></td></tr><tr><td class="code"><pre><span class="line">...</span></pre></td></tr></table></figure>
<ol>
<li>在<code>index.html</code>文件内假如对自定义 css 的引用（或者在 md 文件内引用也可以）</li>
</ol>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"bootstrap.min.css"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"muyi.css"</span>&gt;</span></span></pre></td></tr></table></figure>
<p>到这里还不够，否则在网页打开 console 会看到自定义的 css 是 404 的</p>
<ol>
<li>把文件加到 server 里去</li>
</ol>
<p><code>out/src/server.js</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">app.get(<span class="string">'/muyi.css'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    res.sendfile(path.resolve(__dirname, <span class="string">'..'</span>, <span class="string">'..'</span>, <span class="string">'public'</span>, <span class="string">'muyi.css'</span>));</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr><tr><td class="code"><pre><span class="line">app.get(<span class="string">'/bootstrap.min.css'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    res.sendfile(path.resolve(__dirname, <span class="string">'..'</span>, <span class="string">'..'</span>, <span class="string">'public'</span>, <span class="string">'bootstrap'</span>, <span class="string">'bootstrap.min.css'</span>));</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;);</span></pre></td></tr></table></figure>
<p>混入到其他<code>app.get</code>的代码里去，配置完成。</p>
<h1 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h1><h2 id="多列显示"><a href="#多列显示" class="headerlink" title="多列显示"></a>多列显示</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"d-flex flex-row justify-content-between"</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">第一列</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">第二列</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></pre></td></tr></table></figure>
<p>这里的 class 用的是 bootstrap 的。</p>
<p>Notion 原生对分列显示是比较 limited 的，比如分列后不能再仅针对某一行分列，只能在整一列的基础上右边再加一列。用 html 的不断 div 嵌套可以无限分列分行。</p>
<h2 id="Toggle-List"><a href="#Toggle-List" class="headerlink" title="Toggle List"></a>Toggle List</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;<span class="name">details</span> <span class="attr">open</span>&gt;</span><span class="tag">&lt;<span class="name">summary</span>&gt;</span>显示标题<span class="tag">&lt;/<span class="name">summary</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">隐藏内容</span></pre></td></tr><tr><td class="code"><pre><span class="line">details 节点内的 open 使得 Toggle List 默认打开</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">details</span>&gt;</span></span></pre></td></tr></table></figure>
<h2 id="Callout"><a href="#Callout" class="headerlink" title="Callout"></a>Callout</h2><p>选择了 Hexo 内的 note 类装饰来代替</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note b-green"</span>&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">### notion-like callout</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">- list 1</span></pre></td></tr><tr><td class="code"><pre><span class="line">- list 2</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></pre></td></tr></table></figure>
<p>需要配置相应的 css，或者把插件原生的 css 换了</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.note</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="attribute">border-top-color</span>: <span class="built_in">rgb</span>(238, 227, 207);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="attribute">border-right-color</span>: <span class="built_in">rgb</span>(238, 227, 207);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="attribute">border-bottom-color</span>: <span class="built_in">rgb</span>(238, 227, 207);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="attribute">border-left-color</span>: <span class="built_in">rgb</span>(238, 227, 207);</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="attribute">padding</span>: <span class="number">15px</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="attribute">position</span>: relative;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#eee</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="attribute">border-left-width</span>: <span class="number">5px</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="attribute">border-radius</span>: <span class="number">3px</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="selector-class">.note</span> <span class="selector-tag">p</span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="attribute">margin-bottom</span>:<span class="number">0</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="selector-class">.b-green</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="attribute">border-left-color</span>: <span class="number">#5cb85c</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="selector-class">.b-blue</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="attribute">border-left-color</span>: <span class="number">#428bca</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<hr>
<p>还有一种方法是用 <code>Mardown Preview Enhanced</code> 和 <code>Live Server</code>两个插件组合使用，配置 css 的引用会方便些，但是相对 <code>Instance Markdown</code> 的劣势在于不能实时 preview，需要保存先。因为目前的 MPE 的 <code>open in browser</code> 不是 live 的。</p>
]]></content>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>Git 多人协作 的 merge 顺序</title>
    <url>/git/git-multi-workers-merge-order/</url>
    <content><![CDATA[<p>Git 多人协作</p>
<a id="more"></a>
<p><a href="https://www.jianshu.com/p/603186352605" target="_blank" rel="noopener">不开分支多人协作的后果—— git 自动用旧代码覆盖新的更改</a></p>
<h1 id="主干分支与个人分支的合并"><a href="#主干分支与个人分支的合并" class="headerlink" title="主干分支与个人分支的合并"></a>主干分支与个人分支的合并</h1><p>在个人分支 commit 后</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git checkout dev</span></pre></td></tr><tr><td class="code"><pre><span class="line">git pull</span></pre></td></tr><tr><td class="code"><pre><span class="line">git merge --no-ff personal_branch  # --no-ff: 禁用 fast forward 模式</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> resolve conflict</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">git push</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">git checkout personal_branch</span></pre></td></tr><tr><td class="code"><pre><span class="line">git reset --hard dev</span></pre></td></tr></table></figure>
<h2 id="merge-和-rebase-的区别"><a href="#merge-和-rebase-的区别" class="headerlink" title="merge 和 rebase 的区别"></a>merge 和 rebase 的区别</h2><p>引用<a href="https://zhuanlan.zhihu.com/p/23478654" target="_blank" rel="noopener">知乎</a>的回答：</p>
<blockquote>
<p>可以这么说：merge是显性合并，rebase是隐性合并。<br>同理，当你执行git pull时，是同时执行了git fetch 和 git merge两个操作。如果你不想进行merge操作，即不想留下合并的记录，可以使用 git pull —rebase操作。</p>
</blockquote>
<h2 id="SourceTree-下的-merge"><a href="#SourceTree-下的-merge" class="headerlink" title="SourceTree 下的 merge"></a>SourceTree 下的 merge</h2><ul>
<li>Aim: merge <code>branchA</code> into <code>main</code></li>
</ul>
<ol>
<li>double click <code>branchA</code> on the side bar of branches.</li>
<li>select the commit and right click, select commit.</li>
</ol>
<p><strong>Significant:</strong> checkout to the branch which is to be merged <strong>with</strong>. (<code>branchA</code> in this case)</p>
<h2 id="Github-Desktop-下的-merge"><a href="#Github-Desktop-下的-merge" class="headerlink" title="Github Desktop 下的 merge"></a>Github Desktop 下的 merge</h2><p>参考<a href="https://idratherbewriting.com/learnapidoc/pubapis_github_desktop_client.html" target="_blank" rel="noopener">这个</a>，不再赘述。</p>
<hr>
<blockquote>
<p>Reference:</p>
<ul>
<li><a href="https://www.jianshu.com/p/58a166f24c81" target="_blank" rel="noopener">简书 | git-merge完全解析</a></li>
<li><a href="https://www.jianshu.com/p/603186352605" target="_blank" rel="noopener">https://www.jianshu.com/p/603186352605</a></li>
<li><a href="https://segmentfault.com/q/1010000000181403/a-1020000000181433" target="_blank" rel="noopener">https://segmentfault.com/q/1010000000181403/a-1020000000181433</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/23478654" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/23478654</a></li>
<li><a href="https://judes.me/tech/2017/02/06/overwrite-code.html" target="_blank" rel="noopener">https://judes.me/tech/2017/02/06/overwrite-code.html</a></li>
</ul>
</blockquote>
<!-- Situation: a main branch `main` and two branches for two members `man1`, `man2`.

For every member, their merge should follow (example with `man1`):

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git checkout man1</span></pre></td></tr></table></figure>
<p>👆of course we are in our working branch at first.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git add .</span></pre></td></tr><tr><td class="code"><pre><span class="line">git commit -m "the merge order is important"</span></pre></td></tr></table></figure>
<p>👆don’t rush to push.</p>
<p>👇update the latest version.</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git checkout main</span></pre></td></tr><tr><td class="code"><pre><span class="line">git pull</span></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git checkout man1</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">git merge main</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># or</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">git rebase main</span></pre></td></tr></table></figure>
<p>fix the conflict if it happens</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git checkout main</span></pre></td></tr><tr><td class="code"><pre><span class="line">git merge man1</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">git push</span></pre></td></tr></table></figure>
<p>done</p>
<p>总结：</p>
<ol>
<li>在工作分支 merge 主分支，在自己本地的工作分支处理冲突。<code>git merge main</code></li>
<li>然后再回主干分支把工作分支合并好的 merge 进来。<code>git merge man1</code> —&gt;</li>
</ol>
-->]]></content>
      <tags>
        <tag>GitHub</tag>
      </tags>
  </entry>
  <entry>
    <title>libreoffice 安装（MAC）</title>
    <url>/others/libreoffice-install/</url>
    <content><![CDATA[<p>libreoffice 安装（MAC）</p>
<a id="more"></a>
<p><a href="https://www.libreoffice.org/download/download/" target="_blank" rel="noopener">https://www.libreoffice.org/download/download/</a><br>下载</p>
<p>添加环境变量</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim ~/.zshrc</span></pre></td></tr></table></figure>
<p>add this</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PATH&#x3D;$PATH:&#x2F;Applications&#x2F;LibreOffice.app&#x2F;Contents&#x2F;MacOS</span></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">source ~/.zshrc</span></pre></td></tr></table></figure>
<p>使用</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">soffice --convert-to docx --outdir . *.doc</span></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>Python 操作 Word</title>
    <url>/python-code/python-docx-opt/</url>
    <content><![CDATA[<p>Python 操作 Word</p>
<a id="more"></a>
<ul>
<li>知乎教程<ul>
<li><a href="https://zhuanlan.zhihu.com/p/21643475" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/21643475</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/21716087" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/21716087</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/22614722" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/22614722</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/23708800" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/23708800</a></li>
</ul>
</li>
</ul>
]]></content>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>uswgi安装的辛酸路</title>
    <url>/python-code/python-uwsgi-install/</url>
    <content><![CDATA[<p>uswgi安装的辛酸路</p>
<a id="more"></a>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install uswgi</span></pre></td></tr></table></figure>
<p>死活报错</p>
<p>安装了<code>python3.7-dev</code>也没有用。</p>
<p>用<code>conda</code>更惨，<code>conda install uswgi</code>直接说找不到</p>
<p>那源码安装吧，还是报错。</p>
<p>还好源码安装的报错简单了，找到了这个<a href="https://github.com/unbit/uwsgi/issues/1770" target="_blank" rel="noopener">https://github.com/unbit/uwsgi/issues/1770</a></p>
<blockquote>
<p>If you use conda you should probably install uwsgi from conda itself. Or use the same compiler that your conda python has been built with.</p>
</blockquote>
<p>牛逼，然后发现<code>conda</code>安装没这么简单</p>
<p><a href="https://anaconda.org/conda-forge/uwsgi" target="_blank" rel="noopener">https://anaconda.org/conda-forge/uwsgi</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda install -c conda-forge uwsgi</span></pre></td></tr><tr><td class="code"><pre><span class="line">conda install -c conda-forge libiconv</span></pre></td></tr></table></figure>
<p>注意在 root 权限下</p>
]]></content>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>排序算法</title>
    <url>/algorithm/algorithm-sort/</url>
    <content><![CDATA[<ul>
<li><a href="#%e6%8e%92%e5%ba%8f-sort">排序 Sort</a><ul>
<li><a href="#%e5%86%92%e6%b3%a1%e6%8e%92%e5%ba%8f-bubble">冒泡排序 Bubble</a></li>
<li><a href="#%e9%80%89%e6%8b%a9%e6%8e%92%e5%ba%8f-select">选择排序 Select</a></li>
<li><a href="#%e6%8f%92%e5%85%a5%e6%8e%92%e5%ba%8f-insert">插入排序 Insert</a></li>
<li><a href="#%e5%b8%8c%e5%b0%94%e6%8e%92%e5%ba%8f-shell">希尔排序 Shell</a></li>
<li><a href="#%e5%bd%92%e5%b9%b6%e6%8e%92%e5%ba%8f-merge">归并排序 Merge</a></li>
<li><a href="#%e5%bf%ab%e9%80%9f%e6%8e%92%e5%ba%8f-quick">快速排序 Quick</a></li>
<li><a href="#%e5%a0%86%e6%8e%92%e5%ba%8f-heap">堆排序 Heap</a></li>
<li><a href="#%e5%9f%ba%e6%95%b0%e6%8e%92%e5%ba%8f">基数排序</a></li>
<li><a href="#%e8%ae%a1%e6%95%b0%e6%8e%92%e5%ba%8f">计数排序</a></li>
<li><a href="#%e6%a1%b6%e6%8e%92%e5%ba%8f">桶排序</a></li>
<li><a href="#%e9%9a%8f%e6%9c%ba%e5%bf%ab%e9%80%9f%e6%8e%92%e5%ba%8f">随机快速排序</a></li>
</ul>
</li>
</ul>
<a id="more"></a>
<h1 id="排序-Sort"><a href="#排序-Sort" class="headerlink" title="排序 Sort"></a>排序 Sort</h1><p><a href="https://visualgo.net/zh/sorting" target="_blank" rel="noopener">动画</a></p>
<ul>
<li>算法复杂度<br><img src="/algorithm/algorithm-sort/sort.png" alt="算法复杂度"><h2 id="冒泡排序-Bubble"><a href="#冒泡排序-Bubble" class="headerlink" title="冒泡排序 Bubble"></a>冒泡排序 Bubble</h2>相邻比较+换位<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BubbleSort</span><span class="params">(<span class="keyword">int</span> *arr, <span class="keyword">int</span> len)</span>  </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>&#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">int</span> i, j, tmp;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>; i++) &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; len - i - <span class="number">1</span>; j++) &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (arr[j] &gt; arr[j+<span class="number">1</span>]) &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">                tmp = arr[j];  </span></pre></td></tr><tr><td class="code"><pre><span class="line">                arr[j] = arr[j+<span class="number">1</span>];  </span></pre></td></tr><tr><td class="code"><pre><span class="line">                arr[j+<span class="number">1</span>] = tmp;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">``` </span></pre></td></tr><tr><td class="code"><pre><span class="line">![冒泡](algorithm-sort/BubbleSort.gif)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">## 选择排序 Select</span></pre></td></tr><tr><td class="code"><pre><span class="line">向后查找最小元, 与每一轮首位换位</span></pre></td></tr><tr><td class="code"><pre><span class="line">```c </span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SelectionSort</span><span class="params">(<span class="keyword">int</span> *arr, <span class="keyword">int</span> len)</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">int</span> i, j, <span class="built_in">min</span>, tmp;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len - <span class="number">1</span>; i++) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="built_in">min</span> = i;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">for</span> (j = i + <span class="number">1</span>; j &lt; len; j++) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (arr[j] &lt; arr[<span class="built_in">min</span>]) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                <span class="built_in">min</span> = j;<span class="comment">// 修改最小元</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        tmp = arr[<span class="built_in">min</span>];</span></pre></td></tr><tr><td class="code"><pre><span class="line">        arr[<span class="built_in">min</span>] = arr[i];</span></pre></td></tr><tr><td class="code"><pre><span class="line">        arr[i] = tmp;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<img src="/algorithm/algorithm-sort/SelectionSort.gif" alt="选择"></li>
</ul>
<h2 id="插入排序-Insert"><a href="#插入排序-Insert" class="headerlink" title="插入排序 Insert"></a>插入排序 Insert</h2><p>从第二个开始抽出来, 和前面的比较并排位<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InsertionSort</span><span class="params">(<span class="keyword">int</span> *arr, <span class="keyword">int</span> len)</span>    </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>&#123;    </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">int</span> i, j, tmp;    </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; len; i++) &#123; </span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">//从第二个开始   </span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (arr[i] &lt; arr[i<span class="number">-1</span>]) &#123;   <span class="comment">// 如果小于前一个 </span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            tmp = arr[i];          <span class="comment">// 要移动的元放到temp中</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">for</span> (j = i - <span class="number">1</span>; j &gt;= <span class="number">0</span> &amp;&amp; arr[j] &gt; tmp; j--) &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">                <span class="comment">//向前顺位</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">                arr[j+<span class="number">1</span>] = arr[j];    </span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">            arr[j+<span class="number">1</span>] = tmp;    </span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;          </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;    </span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><br><img src="/algorithm/algorithm-sort/InsertionSort.gif" alt="插入"></p>
<h2 id="希尔排序-Shell"><a href="#希尔排序-Shell" class="headerlink" title="希尔排序 Shell"></a>希尔排序 Shell</h2><p>按增量分批做插入排序<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 希尔排序</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ShellSort</span><span class="params">(<span class="keyword">int</span> *arr, <span class="keyword">int</span> <span class="built_in">size</span>)</span>  </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>&#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">int</span> i, j, tmp, increment;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">for</span> (increment = <span class="built_in">size</span>/ <span class="number">2</span>; increment &gt; <span class="number">0</span>; increment /= <span class="number">2</span>) &#123;    </span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">for</span> (i = increment; i &lt; <span class="built_in">size</span>; i++) &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="comment">// 做插入排序</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            tmp = arr[i];  </span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">for</span> (j = i - increment; j &gt;= <span class="number">0</span> &amp;&amp; tmp &lt; arr[j]; j -= increment) &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">                arr[j + increment] = arr[j];  </span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">            arr[j + increment] = tmp;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure><br><img src="/algorithm/algorithm-sort/ShellSort.gif" alt="希尔"></p>
<h2 id="归并排序-Merge"><a href="#归并排序-Merge" class="headerlink" title="归并排序 Merge"></a>归并排序 Merge</h2><p>分治法<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> low, <span class="keyword">int</span> mid, <span class="keyword">int</span> high)</span></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">int</span> i, k;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">int</span> *tmp = (<span class="keyword">int</span> *)<span class="built_in">malloc</span>((high-low+<span class="number">1</span>)*<span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="comment">//申请空间，使其大小为两个</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">int</span> left_low = low;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">int</span> left_high = mid;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">int</span> right_low = mid + <span class="number">1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">int</span> right_high = high;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">for</span>(k=<span class="number">0</span>; left_low&lt;=left_high &amp;&amp; right_low&lt;=right_high; k++)&#123;  <span class="comment">// 比较两个指针所指向的元素</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span>(arr[left_low]&lt;=arr[right_low])&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            tmp[k] = arr[left_low++];</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;<span class="keyword">else</span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            tmp[k] = arr[right_low++];</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">if</span>(left_low &lt;= left_high)&#123;  <span class="comment">//若第一个序列有剩余，直接复制出来粘到合并序列尾</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">//memcpy(tmp+k, arr+left_low, (left_high-left_low+l)*sizeof(int));</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">for</span>(i=left_low;i&lt;=left_high;i++)</span></pre></td></tr><tr><td class="code"><pre><span class="line">            tmp[k++] = arr[i];</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">if</span>(right_low &lt;= right_high)&#123; <span class="comment">//若第二个序列有剩余，直接复制出来粘到合并序列尾</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">//memcpy(tmp+k, arr+right_low, (right_high-right_low+1)*sizeof(int));</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">for</span>(i=right_low; i&lt;=right_high; i++)</span></pre></td></tr><tr><td class="code"><pre><span class="line">            tmp[k++] = arr[i];</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="comment">// 从tmp复制回arr内</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;high-low+<span class="number">1</span>; i++)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        arr[low+i] = tmp[i];</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="built_in">free</span>(tmp);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">return</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MergeSort</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">unsigned</span> <span class="keyword">int</span> first, <span class="keyword">unsigned</span> <span class="keyword">int</span> last)</span></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">int</span> mid = <span class="number">0</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">if</span>(first&lt;last)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        mid = (first+last)/<span class="number">2</span>; <span class="comment">/* 注意防止溢出 */</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">/*mid = first/2 + last/2;*/</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">//mid = (first &amp; last) + ((first ^ last) &gt;&gt; 1);</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        MergeSort(arr, first, mid);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        MergeSort(arr, mid+<span class="number">1</span>,last);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        merge(arr,first,mid,last);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">return</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></p>
<h2 id="快速排序-Quick"><a href="#快速排序-Quick" class="headerlink" title="快速排序 Quick"></a>快速排序 Quick</h2><p>分块排序, 且左块皆小于右块</p>
<ul>
<li>形式 1 （对应动图）</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span> *a, <span class="keyword">int</span> *b)</span></span>&#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">int</span> temp;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    temp = *a;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    *a = *b;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    *b = temp;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">QuickSort</span><span class="params">(<span class="keyword">int</span> *arr, <span class="keyword">int</span> maxlen, <span class="keyword">int</span> <span class="built_in">begin</span>, <span class="keyword">int</span> <span class="built_in">end</span>)</span></span>&#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">QuickSort</span><span class="params">(<span class="keyword">int</span> *arr, <span class="keyword">int</span> maxlen, <span class="keyword">int</span> <span class="built_in">begin</span>, <span class="keyword">int</span> <span class="built_in">end</span>)</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="built_in">printf</span>(<span class="string">"\nQuickSort(%d-&gt;%d)\n"</span>, <span class="built_in">begin</span>, <span class="built_in">end</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">int</span> i, store;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">if</span> (<span class="built_in">begin</span> - <span class="built_in">end</span> &gt;= <span class="number">-1</span>)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="comment">// arr[begin]为轴心点（与他比较）（亮黄色）</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    i = <span class="built_in">begin</span> + <span class="number">1</span>;     <span class="comment">// 试探（红色）</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    store = <span class="built_in">begin</span> + <span class="number">1</span>; <span class="comment">// 存储指数（紫色最左）</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">while</span> (i &lt; <span class="built_in">end</span>)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (arr[i] &lt; arr[<span class="built_in">begin</span>])&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            swap(&amp;arr[i], &amp;arr[store]); <span class="comment">// 移动过去的都是比轴心点小的</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            store++; <span class="comment">// 指向的是不满足判断条件的那个点（比轴心点大）</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        i++;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    swap(&amp;arr[store - <span class="number">1</span>], &amp;arr[<span class="built_in">begin</span>]); <span class="comment">// 轴心点数值跳到那些都比他小的最右</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    QuickSort(arr, maxlen, <span class="built_in">begin</span>, store - <span class="number">1</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    QuickSort(arr, maxlen, store, <span class="built_in">end</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<p><img src="/algorithm/algorithm-sort/Quicksort.gif" alt="快速"></p>
<ul>
<li>形式 2</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">QuickSort</span><span class="params">(<span class="keyword">int</span> *arr, <span class="keyword">int</span> maxlen, <span class="keyword">int</span> <span class="built_in">begin</span>, <span class="keyword">int</span> <span class="built_in">end</span>)</span></span>&#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">int</span> i, j;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">if</span> (<span class="built_in">begin</span> &lt; <span class="built_in">end</span>) &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">// arr[begin]为轴心点（与他比较）</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        i = <span class="built_in">begin</span> + <span class="number">1</span>;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">        j = <span class="built_in">end</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">while</span> (i &lt; j) &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span>(arr[i] &gt; arr[<span class="built_in">begin</span>]) &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">                swap(&amp;arr[i], &amp;arr[j]);</span></pre></td></tr><tr><td class="code"><pre><span class="line">                j--;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125; <span class="keyword">else</span> &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">                i++;        <span class="comment">// 否则继续往后看</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;                   <span class="comment">// 循环跳出后i,j一样</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (arr[i] &gt;= arr[<span class="built_in">begin</span>]) &#123;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">            i--;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">        swap(&amp;arr[<span class="built_in">begin</span>], &amp;arr[i]);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        QuickSort(arr, maxlen, <span class="built_in">begin</span>, i);  </span></pre></td></tr><tr><td class="code"><pre><span class="line">        QuickSort(arr, maxlen, j, <span class="built_in">end</span>);  </span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;  </span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<h2 id="堆排序-Heap"><a href="#堆排序-Heap" class="headerlink" title="堆排序 Heap"></a>堆排序 Heap</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LeftChild(i) (2*(i)+1)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PercDown</span><span class="params">(<span class="keyword">int</span> A[],<span class="keyword">int</span> i, <span class="keyword">int</span> N)</span></span>&#123;                  <span class="comment">// 下滤</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">int</span> Child;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">int</span> Tmp;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">for</span> (Tmp=A[i];LeftChild(i)&lt;N;i=Child)&#123;            <span class="comment">// Tmp为第一个本体的值 , 每次更新i为指向的子节点(较大者)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        Child = LeftChild(i);                         <span class="comment">// 指向左子节点</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span>(Child != N<span class="number">-1</span> &amp;&amp; A[Child + <span class="number">1</span>] &gt; A[Child])&#123;  <span class="comment">// 子节点不在最末(不然会爆) 且 右子节点&gt;左子节点</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            Child++;                                  <span class="comment">// 从左子节点指向右子节点</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span>(Tmp &lt; A[Child])&#123;                           <span class="comment">// 如果本体小于子节点最大的那个,</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            A[i] = A[Child];                          <span class="comment">// 把子节点覆盖到本体.</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;<span class="keyword">else</span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">break</span>;                                    <span class="comment">// 一旦本体已经最大则跳出</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    A[i] = Tmp;                                       <span class="comment">// 把元初本体的值放到最后指向的子节点</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HeapSort</span><span class="params">(<span class="keyword">int</span> A[],<span class="keyword">int</span> N)</span></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">int</span> i;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">for</span> (i=N/<span class="number">2</span>;i&gt;=<span class="number">0</span>;i--)&#123;                             <span class="comment">// 从倒数第二层向上过滤排序</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        PercDown(A,i,N);                              <span class="comment">// 构造大顶堆</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">for</span> (i = N<span class="number">-1</span>;i&gt;<span class="number">0</span>;i--)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        swap(&amp;A[<span class="number">0</span>],&amp;A[i]);                            <span class="comment">// 每换一次位(提取最大值到最后),</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        PercDown(A,<span class="number">0</span>,i);                              <span class="comment">// 又要再做一次下滤.</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<p><img src="/algorithm/algorithm-sort/HeapSort.gif" alt="堆"></p>
<h2 id="基数排序"><a href="#基数排序" class="headerlink" title="基数排序"></a>基数排序</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// <span class="doctag">TODO:</span> 略</span></span></pre></td></tr></table></figure>
<p><img src="/algorithm/algorithm-sort/基数排序.gif" alt="基数"></p>
<h2 id="计数排序"><a href="#计数排序" class="headerlink" title="计数排序"></a>计数排序</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// <span class="doctag">TODO:</span> 略</span></span></pre></td></tr></table></figure>
<p><img src="/algorithm/algorithm-sort/计数排序.gif" alt="计数"></p>
<h2 id="桶排序"><a href="#桶排序" class="headerlink" title="桶排序"></a>桶排序</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// <span class="doctag">TODO:</span> 略</span></span></pre></td></tr></table></figure>
<p><img src="/algorithm/algorithm-sort/桶排序.png" alt="桶"></p>
<h2 id="随机快速排序"><a href="#随机快速排序" class="headerlink" title="随机快速排序"></a>随机快速排序</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// <span class="doctag">TODO:</span> 略</span></span></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Algorithm</tag>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>Github 命令行 clone 加速</title>
    <url>/git/github-clone-speedup/</url>
    <content><![CDATA[<p>Github 命令行 clone 加速</p>
<a id="more"></a>
<p>分别获得 ip 地址：</p>
<ul>
<li><a href="https://fastly.net.ipaddress.com/github.global.ssl.fastly.net#ipinfo" target="_blank" rel="noopener">https://fastly.net.ipaddress.com/github.global.ssl.fastly.net#ipinfo</a></li>
<li><a href="https://github.com.ipaddress.com/#ipinfo" target="_blank" rel="noopener">https://github.com.ipaddress.com/#ipinfo</a></li>
</ul>
<p>追加到 host 文件中</p>
<hr>
<p>fork 到 gitee 再 clone</p>
]]></content>
      <tags>
        <tag>Git</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>pip 换源</title>
    <url>/python-code/pip-change-source/</url>
    <content><![CDATA[<p>pip 换源阿里云</p>
<a id="more"></a>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim ~/.pip/pip.conf</span></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[global]</span></pre></td></tr><tr><td class="code"><pre><span class="line">trusted-host &#x3D;  mirrors.aliyun.com</span></pre></td></tr><tr><td class="code"><pre><span class="line">index-url &#x3D; https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;pypi&#x2F;simple</span></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux笔记</title>
    <url>/linux/Linux-note/</url>
    <content><![CDATA[<p>TOC</p>
<ul>
<li><a href="#%e5%85%8d%e5%af%86%e7%99%bb%e5%bd%95">免密登录</a></li>
<li><a href="#%e4%bf%ae%e6%94%b9%e7%94%a8%e6%88%b7%e5%90%8d%e5%af%86%e7%a0%81">修改用户名密码</a></li>
<li><a href="#%e5%88%9b%e5%bb%ba%e7%94%a8%e6%88%b7%e7%ae%a1%e7%90%86%e5%91%98%e6%9d%83%e9%99%90">创建用户（管理员权限）</a><ul>
<li><a href="#%e5%88%9b%e5%bb%ba%e7%94%a8%e6%88%b7">创建用户</a></li>
<li><a href="#root-%e6%9d%83%e9%99%90">root 权限</a></li>
</ul>
</li>
<li><a href="#%e5%85%a8%e5%b1%80%e5%ae%89%e8%a3%85-miniconda3">全局安装 miniconda3</a></li>
<li><a href="#%e4%bf%ae%e6%94%b9%e4%b8%bb%e6%9c%ba%e5%90%8d">修改主机名</a></li>
<li><a href="#apt%e5%8d%b8%e8%bd%bd">apt卸载</a></li>
<li><a href="#%e7%bb%88%e7%ab%af%e6%b5%8f%e8%a7%88%e5%99%a8">终端浏览器</a></li>
<li><a href="#nohup-%e5%90%8e%e5%8f%b0%e8%bf%9b%e7%a8%8b">nohup 后台进程</a><ul>
<li><a href="#nohup-%e5%91%bd%e4%bb%a4">nohup 命令</a></li>
<li><a href="#%e6%9f%a5%e7%9c%8b%e5%bd%93%e5%89%8d%e8%bf%9b%e7%a8%8b">查看当前进程</a></li>
<li><a href="#%e6%9d%80%e6%ad%bb%e8%bf%9b%e7%a8%8b">杀死进程</a></li>
</ul>
</li>
</ul>
<a id="more"></a>
<h1 id="免密登录"><a href="#免密登录" class="headerlink" title="免密登录"></a>免密登录</h1><ol>
<li><code>~/.ssh/authorized_keys</code>追加本地鸡公钥</li>
<li><code>sudo vim /etc/ssh/sshd_config</code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PubkeyAuthentication yes</span></pre></td></tr><tr><td class="code"><pre><span class="line">AuthorizedKeysFile  .ssh&#x2F;authorized_keys</span></pre></td></tr></table></figure>
这两项取消注释</li>
</ol>
<h1 id="修改用户名密码"><a href="#修改用户名密码" class="headerlink" title="修改用户名密码"></a>修改用户名密码</h1><ul>
<li>root: <code>passwd</code></li>
<li>else: <code>passwd username</code></li>
</ul>
<h1 id="创建用户（管理员权限）"><a href="#创建用户（管理员权限）" class="headerlink" title="创建用户（管理员权限）"></a>创建用户（管理员权限）</h1><h2 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo adduser username</span></pre></td></tr></table></figure>
<p>sample:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Adding user &#96;ben&#39; ...</span></pre></td></tr><tr><td class="code"><pre><span class="line">Adding new group &#96;ben&#39; (1000) ...</span></pre></td></tr><tr><td class="code"><pre><span class="line">Adding new user &#96;ben&#39; (1000) with group &#96;ben&#39; ...</span></pre></td></tr><tr><td class="code"><pre><span class="line">Creating home directory &#96;&#x2F;home&#x2F;ben&#39; ...</span></pre></td></tr><tr><td class="code"><pre><span class="line">Copying files from &#96;&#x2F;etc&#x2F;skel&#39; ...</span></pre></td></tr><tr><td class="code"><pre><span class="line">Enter new UNIX password:</span></pre></td></tr><tr><td class="code"><pre><span class="line">Retype new UNIX password:</span></pre></td></tr><tr><td class="code"><pre><span class="line">passwd: password updated successfully</span></pre></td></tr><tr><td class="code"><pre><span class="line">Changing the user information for ben</span></pre></td></tr><tr><td class="code"><pre><span class="line">Enter the new value, or press ENTER for the default</span></pre></td></tr><tr><td class="code"><pre><span class="line">	Full Name []: Benature</span></pre></td></tr><tr><td class="code"><pre><span class="line">	Room Number []: </span></pre></td></tr><tr><td class="code"><pre><span class="line">	Work Phone []:</span></pre></td></tr><tr><td class="code"><pre><span class="line">	Home Phone []:</span></pre></td></tr><tr><td class="code"><pre><span class="line">	Other []:</span></pre></td></tr><tr><td class="code"><pre><span class="line">Is the information correct? [Y&#x2F;n] y</span></pre></td></tr></table></figure>
<h2 id="root-权限"><a href="#root-权限" class="headerlink" title="root 权限"></a>root 权限</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/sudoers</span></pre></td></tr></table></figure>
<p>修改<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># User privilege specification</span></pre></td></tr><tr><td class="code"><pre><span class="line">root    ALL&#x3D;(ALL:ALL) ALL</span></pre></td></tr><tr><td class="code"><pre><span class="line">ben     ALL&#x3D;(ALL:ALL) ALL</span></pre></td></tr></table></figure></p>
<p><code>:wq!</code>强行保存退出。</p>
<p>Reference: <a href="https://www.jianshu.com/p/aaf38026e00e" target="_blank" rel="noopener">https://www.jianshu.com/p/aaf38026e00e</a></p>
<h1 id="全局安装-miniconda3"><a href="#全局安装-miniconda3" class="headerlink" title="全局安装 miniconda3"></a>全局安装 miniconda3</h1><ol>
<li><code>bash</code>安装</li>
<li>安装位置不要在用户名下，改为<code>/opt/miniconda3/</code></li>
<li>修改安装目录权限为所有用户都可以写入<code>sudo chmod ugo+w -R /opt/miniconda3/</code></li>
<li><code>conda</code>加入<code>PATH</code>变量：<code>sudo vim /etc/profile/</code>，加入<code>PATH=/opt/miniconda3/bin:$PATH</code></li>
<li>重开终端窗口 / 重连服务器</li>
<li><code>conda -v</code> / <code>echo $PATH</code> 检查确认</li>
</ol>
<h1 id="修改主机名"><a href="#修改主机名" class="headerlink" title="修改主机名"></a>修改主机名</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/hostname</span></pre></td></tr></table></figure>
<h1 id="apt卸载"><a href="#apt卸载" class="headerlink" title="apt卸载"></a>apt卸载</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get --purge remove mysql-common</span></pre></td></tr></table></figure>
<h1 id="终端浏览器"><a href="#终端浏览器" class="headerlink" title="终端浏览器"></a>终端浏览器</h1><ul>
<li><a href="https://blog.csdn.net/sinat_31804365/article/details/52614093" target="_blank" rel="noopener">w3m终端浏览器</a></li>
</ul>
<h1 id="nohup-后台进程"><a href="#nohup-后台进程" class="headerlink" title="nohup 后台进程"></a>nohup 后台进程</h1><h2 id="nohup-命令"><a href="#nohup-命令" class="headerlink" title="nohup 命令"></a>nohup 命令</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nohup python3 -u demo.py &gt; mmp_hour.log 2&gt;&amp;1 &amp;</span></pre></td></tr></table></figure>
<p><code>python3</code>的<code>-u</code>参数是取消Python的缓冲, 使得log文件尽可能与脚本输出同步, 但感觉仍有些延迟, 所以建议再程序中加入类似</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> open(<span class="string">"temp.temp"</span>, <span class="string">"w"</span>) <span class="keyword">as</span> f:</span></pre></td></tr><tr><td class="code"><pre><span class="line">    f.write(<span class="string">"run nohup"</span>)</span></pre></td></tr></table></figure>
<p>的代码来及时确认程序是否运行</p>
<h2 id="查看当前进程"><a href="#查看当前进程" class="headerlink" title="查看当前进程"></a>查看当前进程</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ps -ef | grep</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 或者</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">jobs -l</span></pre></td></tr></table></figure>
<h2 id="杀死进程"><a href="#杀死进程" class="headerlink" title="杀死进程"></a>杀死进程</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kill &lt;num&gt;</span></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>01子串计数</title>
    <url>/algorithm/c-count-01-substring/</url>
    <content><![CDATA[<p>01子串计数</p>
<a id="more"></a>
<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>一个字符串的子串表示原字符串中一段连续的部分。例如，字符串”121”的子串总共有六个，它们分别是”1”(前一个),”2”,”1”(后一个),”12”,”21”和”121”。但”11”不是”121”的子串，因为两个’1’在原串中不连续。我们认为空串也不是子串。</p>
<p>现给你一个只含有’0’和’1’两种字符的字符串，问它含有相同’0’和’1’的字串有几个。</p>
<p>例如，字符串”0101”中符合条件的子串有4个。它们分别是”01”(前一个),”10”,”01”(后一个),”0101”；字符串”00110011”中符合条件的子串分别为”01”(前一个),”10”,”01”(后一个),”0011”(前一个),”0110”,”1100”,”1001”,”0011”(后一个),”011001”,”00110011”，共10个。</p>
<h1 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h1><h2 id="二重循环"><a href="#二重循环" class="headerlink" title="二重循环"></a>二重循环</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">char</span> str[<span class="number">1000000</span>];</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>, str);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">int</span> count=<span class="number">0</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">int</span> zero, one;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="built_in">strlen</span>(str); i++)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        zero = <span class="number">0</span>, one = <span class="number">0</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=i; j&lt;L; j++)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> (str[j] == <span class="string">'0'</span>)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                zero++;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(str[j] == <span class="string">'1'</span>)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                one++;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">if</span> ((j-i)%<span class="number">2</span>==<span class="number">1</span>)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                <span class="comment">// judge</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">                <span class="keyword">if</span> (one == zero)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                    count++;</span></pre></td></tr><tr><td class="code"><pre><span class="line">                &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, count);</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<h2 id="一重循环"><a href="#一重循环" class="headerlink" title="一重循环"></a>一重循环</h2><p>c++ 版本</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> score(ch) (ch == <span class="meta-string">'1'</span> ? 1 : -1)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">int</span> <span class="title">count_substring_fast</span><span class="params">(<span class="keyword">char</span> *str)</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> n = <span class="built_in">strlen</span>(str);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">long</span> <span class="keyword">int</span> ans = <span class="number">0</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">long</span> <span class="keyword">int</span> *counter = <span class="keyword">new</span> <span class="keyword">long</span> <span class="keyword">int</span>[<span class="number">2</span> * n + <span class="number">1</span>](); <span class="comment">// initialize</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">long</span> <span class="keyword">int</span> tmp_sum = <span class="number">0</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        tmp_sum += score(str[i]);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (tmp_sum == <span class="number">0</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            ans++;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="built_in">printf</span>(<span class="string">"%ld, "</span>, tmp_sum);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        counter[n + tmp_sum]++; <span class="comment">// 哈希</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span> * n + <span class="number">1</span>; ++i)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (counter[i])</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123; <span class="comment">// 不考虑计数为 0 的</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="built_in">printf</span>(<span class="string">"%d: %ld, %ld\n"</span>, i - n, counter[i], ans);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            ans += ((counter[i]) * (counter[i] - <span class="number">1</span>) / <span class="number">2</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">delete</span>[] counter;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">return</span> ans;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<p>C 版本</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">int</span> <span class="title">count_substring_fast</span><span class="params">(<span class="keyword">char</span> *str)</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">int</span> n = <span class="built_in">strlen</span>(str);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">long</span> <span class="keyword">int</span> ans = <span class="number">0</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">long</span> <span class="keyword">int</span> *counter;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">long</span> <span class="keyword">int</span> tmp_sum = <span class="number">0</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    counter = (<span class="keyword">long</span> <span class="keyword">int</span> *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">long</span> <span class="keyword">int</span>) * (<span class="number">2</span> * n + <span class="number">1</span>));</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span> * n + <span class="number">1</span>; i++)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        counter[i] = <span class="number">0</span>; <span class="comment">// 初始化</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (str[i] == <span class="string">'\0'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="keyword">break</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (str[i] == <span class="string">'1'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            tmp_sum++;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (str[i] == <span class="string">'0'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            tmp_sum--;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">// tmp_sum += score(str[i]);</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (tmp_sum == <span class="number">0</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            ans++;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        counter[n + tmp_sum]++; <span class="comment">// 哈希</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span> * n + <span class="number">1</span>; ++i)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (counter[i])</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#123; <span class="comment">// 不考虑计数为 0 的</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            ans += ((counter[i]) * (counter[i] - <span class="number">1</span>) / <span class="number">2</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="built_in">free</span>(counter);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    counter = <span class="literal">NULL</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">return</span> ans;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<hr>
<p>reference:<br><a href="https://howardlau.me/programming/zero-one-substring.html" target="_blank" rel="noopener">https://howardlau.me/programming/zero-one-substring.html</a></p>
]]></content>
      <tags>
        <tag>Algorithm</tag>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac MenuBar 基础控制</title>
    <url>/devices/mac-menubar-basic/</url>
    <content><![CDATA[<p>Mac MenuBar 基础控制</p>
<a id="more"></a>
<h1 id="Mac-MenuBar-基础控制"><a href="#Mac-MenuBar-基础控制" class="headerlink" title="Mac MenuBar 基础控制"></a>Mac MenuBar 基础控制</h1><p>因为用了 iStat Menu, 所以关掉一些系统自带的 menubar</p>
<h2 id="电池"><a href="#电池" class="headerlink" title="电池"></a>电池</h2><p><code>系统偏好设置</code>-&gt;<code>节能</code>(最下): ☑︎ 在菜单栏中显示电池状态</p>
<h2 id="时间"><a href="#时间" class="headerlink" title="时间"></a>时间</h2><p><code>系统偏好设置</code>-&gt;<code>日期与时间</code>-&gt;<code>时钟</code>: ☑︎ 在菜单栏中显示日期和时间</p>
]]></content>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac装机必备</title>
    <url>/devices/mac-app-must/</url>
    <content><![CDATA[<p>装机必备</p>
<a id="more"></a>
<h1 id="Mac-装机清单"><a href="#Mac-装机清单" class="headerlink" title="Mac 装机清单"></a>Mac 装机清单</h1><ul>
<li>Alfred: 键盘流利剑</li>
<li>Sortcat: 键盘流<ul>
<li>Workflow</li>
</ul>
</li>
<li>切换软件类<ul>
<li>Contexts: (一言难尽)</li>
<li>CmdTap: 双击<code>option</code>切换软件, 自动分配 keyword</li>
<li>Thor: 匹配软件快捷键</li>
<li>Manico: (一个顶不过上面两个)</li>
</ul>
</li>
<li><a href="https://mediaatelier.com/CheatSheet/" target="_blank" rel="noopener">CheatSheet</a> <del>/ KeyCue(付费)</del>: 长按⌘看快捷键 manual</li>
<li>Karabiner-Elements: 改键神器</li>
<li>Snipaste: 截图+贴屏</li>
<li>Workspaces: 一键开启工作区(所有所需软件 or 文件夹)</li>
<li>搜狗输入法:<ol>
<li>按软件改默认中英符号</li>
<li>自定词库(支持基本变量如时间)</li>
<li>多种候选翻页键</li>
<li>自动中英文检空格</li>
<li>候选词 2,3 位快捷键</li>
</ol>
</li>
<li>Mission Control Plus: 便捷直接关闭窗口</li>
<li>Paste: 剪贴板管理</li>
<li>NightOwl: 随意切换暗夜模式</li>
<li>iStat Menu:<ul>
<li>增强电池信息</li>
<li>增强时间显示配置</li>
<li>CPU, 内存, 磁盘, 传感器</li>
</ul>
</li>
<li>Itsyal: 日历📆</li>
<li>IINA: 变速视频播放器</li>
<li>iTerm2: 命令行</li>
<li>Magent: 像 Windows 一样对窗口进行分区</li>
<li>1KeyBoard: 电脑作为 ipad, 手机的蓝牙键盘</li>
<li><p>Vanilla: 隐藏 menubar 的一些 icon</p>
</li>
<li><p>CCleaner / Dr. Cleaner / CleanMyMac: 卸载软件的软件</p>
</li>
<li><p>Negative: 暗夜模式 pdf 阅读器</p>
</li>
<li><p>Better and Better</p>
</li>
<li>Slidepad</li>
</ul>
]]></content>
      <tags>
        <tag>Mac</tag>
        <tag>效率</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 插件记录</title>
    <url>/web/hexo-plugin/</url>
    <content><![CDATA[<p>plugins</p>
<a id="more"></a>
<ul>
<li>deploy</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cnpm install hexo-deployer-git --save</span></pre></td></tr></table></figure>
<ul>
<li>image</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cnpm install https://github.com/CodeFalling/hexo-asset-image --save</span></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> link = data.permalink;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> beginPos = getPosition(link, <span class="string">'/'</span>, <span class="number">3</span>) + <span class="number">1</span>; <span class="comment">// 可能需要修改这里</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> appendLink = <span class="string">''</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="regexp">/.*\/index\.html$/</span>.test(link)) &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  appendLink = <span class="string">'index/'</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="keyword">var</span> endPos = link.lastIndexOf(<span class="string">'/'</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">else</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="keyword">var</span> endPos = link.length<span class="number">-1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<ul>
<li>mathjax</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cnpm install hexo-math --save</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm uninstall hexo-renderer-marked --save</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm install hexo-renderer-kramed --save</span></pre></td></tr></table></figure>
<p>然后删改👇</p>
<ul>
<li><a href="https://www.sail.name/2018/05/31/use-mathjax-in-hexo/" target="_blank" rel="noopener">https://www.sail.name/2018/05/31/use-mathjax-in-hexo/</a></li>
<li><a href="https://abelsu7.top/2018/10/29/hexo-mathjax/" target="_blank" rel="noopener">https://abelsu7.top/2018/10/29/hexo-mathjax/</a><!-- 支持还比较菜, 放弃. -->
</li>
</ul>
]]></content>
      <tags>
        <tag>配置</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>微信文本记录破解数据库导出</title>
    <url>/others/wechat-data-export/</url>
    <content><![CDATA[<p>一切看运气哇咔咔</p>
<a id="more"></a>
<h1 id="从手机提取记录文件"><a href="#从手机提取记录文件" class="headerlink" title="从手机提取记录文件"></a>从手机提取记录文件</h1><p>从手机免root导出数据的方法可以参考<a href="https://godweiyang.com/2019/08/09/wechat-explore/#toc-heading-4" target="_blank" rel="noopener">韦阳的博客</a>和<a href="https://www.louyue.com/weixin.htm" target="_blank" rel="noopener">楼月软件(这个收费的别折腾了)</a></p>
<h1 id="获取手机IMEI码和微信iduserinformation"><a href="#获取手机IMEI码和微信iduserinformation" class="headerlink" title="获取手机IMEI码和微信iduserinformation"></a>获取手机<code>IMEI</code>码和微信id<code>userinformation</code></h1><h2 id="IMEI"><a href="#IMEI" class="headerlink" title="IMEI"></a><code>IMEI</code></h2><ol>
<li><p>比较直接的方式是打开手机的<code>电话</code>, 输入</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*#06#</span></pre></td></tr></table></figure>
<p> 就会自动弹出的了. 现在手机一般有两个卡槽, 对应会有两个<code>IMEI</code></p>
</li>
<li><p>另一种方法就是读取<code>CompatibleInfo.cfg</code>文件.<br> 不过我导出的文件会读取失败, 报错</p>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">java.io.StreamCorruptedException: invalid stream header: 01027400</span></pre></td></tr><tr><td class="code"><pre><span class="line">    at java.io.ObjectInputStream.readStreamHeader(ObjectInputStream.java:866)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    at java.io.ObjectInputStream.&lt;init&gt;(ObjectInputStream.java:358)</span></pre></td></tr><tr><td class="code"><pre><span class="line">    at IMEI.main(IMEI.java:14)</span></pre></td></tr></table></figure>
<p> 所以只好用第一种方法了, 也就麻烦了一丢丢.</p>
</li>
</ol>
<h2 id="微信iduin"><a href="#微信iduin" class="headerlink" title="微信iduin"></a>微信id<code>uin</code></h2><p>读取<code>systemInfo.cfg</code>.</p>
<h1 id="破解聊天记录数据库密码"><a href="#破解聊天记录数据库密码" class="headerlink" title="破解聊天记录数据库密码"></a>破解聊天记录数据库密码</h1><p>拼接字符串<code>IMEI</code>和<code>uin</code>, 即上面得到的两串码.</p>
<p><a href="http://tool.chinaz.com/tools/md5.aspx" target="_blank" rel="noopener">MD5加密</a>取前七位, 注意英文小写.</p>
<blockquote>
<p>因为一般手机<code>IMEI</code>有两个, 分别试试就好了</p>
</blockquote>
<h1 id="破解数据库"><a href="#破解数据库" class="headerlink" title="破解数据库"></a>破解数据库</h1><p>打开<code>sqlcipher.exe</code>软件，<code>ctrl+O</code>打开<code>EnMicroMsg.db</code>数据库, 输入密码</p>
<p>点击菜单栏的<code>File</code>-<code>Export</code>-<code>Table as CSV file</code>，选择<code>message</code>.</p>
<p>然后数据就完美导出啦~<br>慢慢分析玩耍吧</p>
<hr>
<p>reference:</p>
<ul>
<li><a href="https://github.com/Heyxk/notes/issues/1" target="_blank" rel="noopener">https://github.com/Heyxk/notes/issues/1</a></li>
<li><a href="https://godweiyang.com/2019/08/09/wechat-explore/#toc-heading-4" target="_blank" rel="noopener">https://godweiyang.com/2019/08/09/wechat-explore/#toc-heading-4</a></li>
<li><a href="https://zh.wikihow.com/%E6%9F%A5%E6%89%BE%E6%89%8B%E6%9C%BA%E7%9A%84IMEI%E6%88%96MEID%E5%8F%B7" target="_blank" rel="noopener">https://zh.wikihow.com/%E6%9F%A5%E6%89%BE%E6%89%8B%E6%9C%BA%E7%9A%84IMEI%E6%88%96MEID%E5%8F%B7</a></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>Mac V.S. Windows 个人感受对比</title>
    <url>/devices/mac-vs-windows/</url>
    <content><![CDATA[<p>Mac V.S. Windows</p>
<a id="more"></a>
<h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th style="text-align:center">Mac</th>
<th style="text-align:center">Windows</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">副屏显示</td>
<td style="text-align:center">拔插后有记忆, 可恢复</td>
<td style="text-align:center">拔插后只聚集在主屏（无记忆）</td>
</tr>
<tr>
<td style="text-align:center">命令行</td>
<td style="text-align:center">√</td>
<td style="text-align:center">需要wsl, 环境不好同步(git branch, venv)</td>
</tr>
<tr>
<td style="text-align:center">应用快捷切换</td>
<td style="text-align:center">Thor / Manoco / Contexts</td>
<td style="text-align:center"><code>Win+num</code> / Capslock+</td>
</tr>
<tr>
<td style="text-align:center">连贯性</td>
<td style="text-align:center">接力 / Airdrop</td>
<td style="text-align:center"><a href="https://mp.weixin.qq.com/s/ygc2Hrm-Bi4JBHqskjcOwQ" target="_blank" rel="noopener">快贴等</a></td>
</tr>
<tr>
<td style="text-align:center">剪贴板</td>
<td style="text-align:center">paste</td>
<td style="text-align:center">Ditto</td>
</tr>
<tr>
<td style="text-align:center">鼠标侧键</td>
<td style="text-align:center">(手势够用了)</td>
<td style="text-align:center">√</td>
</tr>
<tr>
<td style="text-align:center">退出程序快捷键</td>
<td style="text-align:center"><code>⌘+Q</code></td>
<td style="text-align:center">憨憨状态栏右键退出法</td>
</tr>
<tr>
<td style="text-align:center">文件管理器窗口跳转</td>
<td style="text-align:center">TODO: ? :(</td>
<td style="text-align:center">Listery</td>
</tr>
<tr>
<td style="text-align:center">文件管理器快速开启某任务</td>
<td style="text-align:center">系统设置<code>快捷键</code></td>
<td style="text-align:center">右键处设置</td>
</tr>
<tr>
<td style="text-align:center">Caps加成</td>
<td style="text-align:center">Karabiner-Element</td>
<td style="text-align:center">Capslock+</td>
</tr>
<tr>
<td style="text-align:center">微信加成</td>
<td style="text-align:center"><a href="https://github.com/Sunnyyoung/WeChatTweak-macOS" target="_blank" rel="noopener">√</a></td>
<td style="text-align:center"><a href="https://github.com/anhkgg/SuperWeChatPC" target="_blank" rel="noopener">√</a></td>
</tr>
<tr>
<td style="text-align:center">充当蓝牙键盘</td>
<td style="text-align:center">1KeyBoard / <a href="http://mp.weixin.qq.com/s?__biz=MjM5MjAyNDUyMA==&amp;mid=2650532150&amp;idx=1&amp;sn=a8c955ec5294866ad89a3f81735d3114" target="_blank" rel="noopener">RemoBoard</a></td>
<td style="text-align:center"><a href="http://mp.weixin.qq.com/s?__biz=MjM5MjAyNDUyMA==&amp;mid=2650532150&amp;idx=1&amp;sn=a8c955ec5294866ad89a3f81735d3114" target="_blank" rel="noopener">RemoBoard</a></td>
</tr>
<tr>
<td style="text-align:center">触屏</td>
<td style="text-align:center">TouchBar</td>
<td style="text-align:center">触屏显示器 (partly)</td>
</tr>
<tr>
<td style="text-align:center">找鼠标</td>
<td style="text-align:center">快速滑动鼠标放大</td>
<td style="text-align:center">按<code>ctrl</code>蹦出圈圈</td>
</tr>
<tr>
<td style="text-align:center">网易云音乐云盘</td>
<td style="text-align:center">不支持上传</td>
<td style="text-align:center">冇问题</td>
</tr>
</tbody>
</table>
</div>
<h1 id="Bug"><a href="#Bug" class="headerlink" title="Bug"></a>Bug</h1><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th style="text-align:center">Mac</th>
<th style="text-align:center">Windows</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">复制黏贴失效</td>
<td style="text-align:center">受字典的划词功能影响</td>
<td style="text-align:center"><em>很少失效（但也有）</em></td>
</tr>
<tr>
<td style="text-align:center">微信卡顿</td>
<td style="text-align:center">发送信息显示延迟、切换聊天窗口卡顿</td>
<td style="text-align:center">没有的事</td>
</tr>
<tr>
<td style="text-align:center">微信自动退出</td>
<td style="text-align:center">没试过</td>
<td style="text-align:center"><em>不确定是不是通病</em></td>
</tr>
<tr>
<td style="text-align:center">notion 崩溃</td>
<td style="text-align:center">没有的事</td>
<td style="text-align:center"><em>desktop 开启就崩</em></td>
</tr>
</tbody>
</table>
</div>
<blockquote>
<p>非斜体标记的问题都是在网上找到大量人吐槽的 bug ，可以认为是通病。<br>斜体标记的要么是网上没找到大量吐槽，要么是懒得找，直接换方法。</p>
</blockquote>
]]></content>
      <tags>
        <tag>Mac</tag>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>termux之ngrok内网穿透</title>
    <url>/linux/termux-ngrok/</url>
    <content><![CDATA[<p>ngrok内网穿透</p>
<a id="more"></a>
<h1 id="termux-ngrok"><a href="#termux-ngrok" class="headerlink" title="termux-ngrok"></a>termux-ngrok</h1><p><a href="https://github.com/tchelospy/termux-ngrok" target="_blank" rel="noopener">https://github.com/tchelospy/termux-ngrok</a></p>
<h2 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">apt update &amp;&amp; apt upgrade</span></pre></td></tr><tr><td class="code"><pre><span class="line">apt install git</span></pre></td></tr><tr><td class="code"><pre><span class="line">git clone https://github.com/tchelospy/termux-ngrok.git</span></pre></td></tr><tr><td class="code"><pre><span class="line">cd termux-ngrok</span></pre></td></tr><tr><td class="code"><pre><span class="line">chmod +x termux-ngrok.sh</span></pre></td></tr><tr><td class="code"><pre><span class="line">./termux-ngrok.sh</span></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Termux</tag>
      </tags>
  </entry>
  <entry>
    <title>pdf-helper | 拒绝散装pdf</title>
    <url>/wechat-push/pdf-remove-repeat-page/</url>
    <content><![CDATA[<p>pdf-helper | 拒绝散装pdf</p>
<a id="more"></a>
<h1 id="决绝散装pdf"><a href="#决绝散装pdf" class="headerlink" title="决绝散装pdf"></a>决绝散装pdf</h1><h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>上课时候或者下课后想拿课件来做笔记的时候, 遇到过一些尴尬.</p>
<p>如果说直接看老师发的pdf, 就会发现滚好多页才会看完一个<strong>有效一页</strong>.这种pdf我喜欢叫做<strong>散装pdf</strong>, 这种情况在用beamer做课件的老师更为常见.</p>
<p><img src="/wechat-push/pdf-remove-repeat-page/pdf.png" alt="pdf"></p>
<p>当然, 好在老师提供了ppt, 我们可以从ppt打印为pdf.</p>
<p>问题的确算是解决了, 直到…</p>
<p><img src="/wechat-push/pdf-remove-repeat-page/ppt.png" alt="ppt"></p>
<p>大概由于电脑的某些设置不同, 导致了一些内容尴尬地跑出了页面范围… 而且某些文本因为文本框过窄而自动换行(可能因为我的电脑屏幕比老师的小), etc.</p>
<p>种种问题, 导致了ppt导出的pdf没有老师的原始pdf美观, 甚至还会缺失一些信息内容.</p>
<h2 id="动手"><a href="#动手" class="headerlink" title="动手"></a>动手</h2><p>毕竟众口难调嘛, 也不好再麻烦老师来迁就我这种口味刁钻的学生, 于是我想到了一个看起来有点无聊的想法: <em>给老师发的pdf做减法</em>.</p>
<p>用到的库有</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pdf2image <span class="keyword">import</span> convert_from_path</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PyPDF2 <span class="keyword">import</span> PdfFileWriter, PdfFileReader</span></pre></td></tr></table></figure>
<p>然后稍微聊下主要思路:</p>
<ol>
<li><p>将每一页pdf转为图片, 转灰度值后每一页pdf对我们而言就只是一个又一个的二维数组而已了, 其中二维数组里面的每一个元素对应着一个像素点的灰度值.</p>
</li>
<li><p>然后对比一下前后两页的数组, 两个数组做差后为0的元素即两页相同的部分, 不为0的部分对应的就是两页不同的像素点. 对不同像素点做一定的判断, 就可以分析这两页是不是都是同一页<strong>有效页</strong>, 目前代码有两种判断思路:</p>
<ol>
<li>变化像素点数目占总像素数目的比例是否超出阈值(阈值是超参数)</li>
<li>发生变化像素点对应的位置(index), 在前一页中的value是否与背景色想对应. 如果觉得这样判断太严格可以加一个容差范围.</li>
</ol>
</li>
<li><p>走过一次<code>for</code>循环之后, 我们就得到了每一个<strong>有效页</strong>第一页的页码, 对原pdf文件提取出对应页码, 重新保存到新的pdf中, 就成功地提取出文档的全部”精华”了.</p>
</li>
</ol>
<h2 id="尾声"><a href="#尾声" class="headerlink" title="尾声"></a>尾声</h2><p>以后我只用跑一下程序就好了, 再也不用打开ppt, 等待我缓慢的电脑加载完office, 然后再去找打印的button, 或者<code>ctrl+P</code>打印, 再选一下保存路径等等一系列麻烦无聊恼人的操作了.🥴</p>
<p>回过头来说一下, 代码还没有十分完善, 目前第二种方法只能处理纯色的背景, 对于特殊背景的pdf, 还要多加几行代码, 也不是很麻烦, 有兴趣的可以帮我加上呗(懒). </p>
<h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><blockquote>
<p>打开网页<a href="https://github.com/Benature/pdf-helper" target="_blank" rel="noopener">https://github.com/Benature/pdf-helper</a>, 点击右侧的<code>clone or download</code>. clone到本地后打开<code>pdf_filter</code>文件夹📂</p>
</blockquote>
<p>将<code>filter2.py</code>中的</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ========== Config ==================</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">path = <span class="string">"path/to/lec/pdf"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">ignore_files = [</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="string">"pdf_that_u_don't_want_to_filtrate1.pdf"</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="string">"pdf_that_u_don't_want_to_filtrate2.pdf"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">]</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># ====================================</span></span></pre></td></tr></table></figure>
<p>配置一下: <code>path</code>变量修改为你需要处理的那个文件夹路径, <code>ignore_files</code>为当前文件夹下一些你不想处理的文件名, 然后在<code>filter2.py</code>所在文件夹下打开命令行运行程序即可</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python3 filter2.py</span></pre></td></tr></table></figure>
<p>具体代码已经上传GitHub仓库👇<br>欢迎大噶clone来用用, 如果发现有什么要补充的话也欢迎PR.</p>
<p><a href="https://github.com/Benature/pdf-helper/tree/master/pdf_filter" target="_blank" rel="noopener">https://github.com/Benature/pdf-helper/tree/master/pdf_filter</a></p>
]]></content>
      <tags>
        <tag>公众号推文</tag>
      </tags>
  </entry>
  <entry>
    <title>Lazy Kit | 课件序号必须在文件名开头</title>
    <url>/wechat-push/lazykit-file-rename/</url>
    <content><![CDATA[<p>偷懒工具包: 序号重命名</p>
<a id="more"></a>
<h1 id="修改文件名中的序号位置"><a href="#修改文件名中的序号位置" class="headerlink" title="修改文件名中的序号位置"></a>修改文件名中的序号位置</h1><h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p>其实就是老师给的课件的命名规则是<code>章节名+章节序号</code>, 造成在文件夹显示的时候, 文件顺序会有点混乱. 因为文件夹排序一般是按文件名的, 然而<code>章节名</code>往往不太一样, 造成了在想找某一章的文件时有种混乱的痛苦.</p>
<p><img src="/wechat-push/lazykit-file-rename/raw.png" alt="after rename"></p>
<p>当然有人会觉得按<code>修改时间</code>排序就没问题了, 但是如果有时候对pdf或者ppt做了标注或者改动的话, 又要乱套了.</p>
<h2 id="动手"><a href="#动手" class="headerlink" title="动手"></a>动手</h2><p>代码主要思路是应用<strong>正则表达式</strong>提取出章节序号, 并移动到文件名的最前面.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span></pre></td></tr></table></figure>
<p>其中<code>os</code>包是为了读取指定文件夹下的所有文件, 这样我们就可以一次性批量修改文件名了. 这两个包都是python标配了, 不劳<code>pip</code>或<code>conda</code>.</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ind = re.findall(<span class="string">r"\d"</span>, fn)</span></pre></td></tr></table></figure>
<p><code>findall</code>是<code>re</code>的一个函数, 第一个参数是正则表达式的匹配格式, 第二个参数是需要搜索的字符串对象. </p>
<p>这里的匹配格式比较简单, <code>\d</code>代表的是数字, 包括浮点型, 引号前面加个<code>r</code>表示这是一个正则表达式的字符串, 可以取消掉一些反斜杠的转义作用.</p>
<p>章节序号提取出来之后, 在通过字符串拼接放到文件名前面, 最后重命名文件, 完成. </p>
<p>重命名后的文件效果图可以看下图, 文件按序号顺序整齐排列, 总算圆了我这个强迫症的心愿, 查找文件也方便了很多.</p>
<p><img src="/wechat-push/lazykit-file-rename/rename.png" alt="after rename"></p>
<p>一般来说, 每次老师发了新课件之后都要重新运行一次程序(除非自己手改), 为了避免程序重复操作已经重命名过的旧文件, 就需要在对每个文件名操作前做些判断筛选. </p>
<h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><blockquote>
<p>打开网页<a href="https://github.com/Benature/lazy-kit" target="_blank" rel="noopener">https://github.com/Benature/lazy-kit</a>, 点击右侧的<code>clone or download</code>.</p>
</blockquote>
<p>将<code>lec_rename.py</code>中的</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">root_path = <span class="string">"path/to/the/lecture/folder"</span></span></pre></td></tr></table></figure>
<p>修改为你需要处理的那个文件夹路径, 然后在py文件所在文件夹下打开命令行运行程序即可</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">python3 lec_rename.py</span></pre></td></tr></table></figure>
<hr>
<p>具体代码已经上传GitHub仓库👇 欢迎大噶clone来用用, 如果发现有什么要补充的话也欢迎PR.</p>
<p><a href="https://github.com/Benature/lazy-kit/blob/master/lecture_rename/" target="_blank" rel="noopener">https://github.com/Benature/lazy-kit/blob/master/lecture_rename/</a></p>
]]></content>
      <tags>
        <tag>公众号推文</tag>
      </tags>
  </entry>
  <entry>
    <title>LaTeX标注删改、评注</title>
    <url>/latex/latex-diff/</url>
    <content><![CDATA[<p>LaTeX 更开心了</p>
<a id="more"></a>
<p>参考<a href="https://www.zhihu.com/question/22316670" target="_blank" rel="noopener">知乎问答</a>, 找到两个比较好的回答:</p>
<ul>
<li><code>latexdiff</code> 命令</li>
<li><code>changes</code> 宏包</li>
</ul>
<p><code>changes</code><a href="https://tex.stackexchange.com/questions/65453/track-changes-in-latex" target="_blank" rel="noopener">看起来</a>有点麻烦, 所以主要查了下<code>latexdiff</code>, 基本操作就是在命令行输入</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">latexdiff origin.tex modify.tex &gt;diff.tex</span></pre></td></tr></table></figure>
<hr>
<p>参考资料:</p>
<ul>
<li><a href="https://www.zhihu.com/question/22316670" target="_blank" rel="noopener">https://www.zhihu.com/question/22316670</a></li>
<li><a href="http://blog.sina.com.cn/s/blog_3ecd13560102vh95.html" target="_blank" rel="noopener">http://blog.sina.com.cn/s/blog_3ecd13560102vh95.html</a></li>
<li><a href="https://tex.stackexchange.com/questions/65453/track-changes-in-latex" target="_blank" rel="noopener">https://tex.stackexchange.com/questions/65453/track-changes-in-latex</a></li>
</ul>
]]></content>
      <tags>
        <tag>LaTeX</tag>
      </tags>
  </entry>
  <entry>
    <title>Win10卡顿</title>
    <url>/devices/win10-slow/</url>
    <content><![CDATA[<p>卡卡卡</p>
<a id="more"></a>
<ul>
<li>关闭service<ul>
<li>sysmain</li>
<li>Windows Search</li>
<li>Connected User Experiences and Telemetry</li>
</ul>
</li>
</ul>
<hr>
<p>参考资料</p>
<ul>
<li><a href="https://news.mydrivers.com/1/598/598683.htm" target="_blank" rel="noopener">https://news.mydrivers.com/1/598/598683.htm</a></li>
</ul>
]]></content>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>python安装qutip</title>
    <url>/python-code/python-qutip-note/</url>
    <content><![CDATA[<p>QuTip</p>
<a id="more"></a>
<p>依赖蛮多, 不装会输</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip3 install --upgrade pip</span></pre></td></tr><tr><td class="code"><pre><span class="line">pip3 install numpy, scipy, Cython, qutip</span></pre></td></tr></table></figure>
<p>pdf文档信息比网页版的多</p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Termux 安装 python 第三方库</title>
    <url>/linux/termux-install-python-sitepackages/</url>
    <content><![CDATA[<p>折腾</p>
<a id="more"></a>
<h1 id="scipy"><a href="#scipy" class="headerlink" title="scipy"></a>scipy</h1><p><a href="https://wiki.termux.com/wiki/Installing_Scipy_The_Easy_Way" target="_blank" rel="noopener">官网说的真轻松, 然并</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pkg install wget</span></pre></td></tr><tr><td class="code"><pre><span class="line">wget https://its-pointless.github.io/setup-pointless-repo.sh</span></pre></td></tr><tr><td class="code"><pre><span class="line">bash setup-pointless-repo.sh</span></pre></td></tr><tr><td class="code"><pre><span class="line">pkg install scipy</span></pre></td></tr></table></figure>
<hr>
<p>参考</p>
<ul>
<li><a href="https://blog.csdn.net/hwx865/article/details/83012838" target="_blank" rel="noopener">https://blog.csdn.net/hwx865/article/details/83012838</a></li>
</ul>
<h1 id="matplotlib"><a href="#matplotlib" class="headerlink" title="matplotlib"></a>matplotlib</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pkg install pkg-config, freetype</span></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Python</tag>
        <tag>Termux</tag>
      </tags>
  </entry>
  <entry>
    <title>word转tex文件</title>
    <url>/latex/word-to-latex/</url>
    <content><![CDATA[<p>我懒</p>
<a id="more"></a>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pandoc '.\word.docx' -o</span></pre></td></tr><tr><td class="code"><pre><span class="line">test.tex --extract-media="./"</span></pre></td></tr></table></figure>
<p><code>--extract-media</code>参数设置导出媒体文件(如图片)夹的路径, 不设置不导出</p>
]]></content>
      <tags>
        <tag>效率</tag>
        <tag>LaTeX</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言整型转字符串</title>
    <url>/others/c-int-to-string/</url>
    <content><![CDATA[<p>int 2 string</p>
<a id="more"></a>
<h1 id="弯路"><a href="#弯路" class="headerlink" title="弯路"></a>弯路</h1><p>网上一般查到会说用<code>itoa</code>函数, </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">int</span> number1 = <span class="number">123456</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">int</span> number2 = <span class="number">-123456</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">char</span> <span class="built_in">string</span>[<span class="number">16</span>] = &#123;<span class="number">0</span>&#125;;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    itoa(number1,<span class="built_in">string</span>,<span class="number">10</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="built_in">printf</span>(<span class="string">"数字：%d 转换后的字符串为：%s\n"</span>,number1,<span class="built_in">string</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    itoa(number2,<span class="built_in">string</span>,<span class="number">10</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="built_in">printf</span>(<span class="string">"数字：%d 转换后的字符串为：%s\n"</span>,number2,<span class="built_in">string</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<p>像菜鸟教程都这样教, 不过<code>itoa</code>不是基础库函数而且不符合C99标准, 编译时候直接报警</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">main.c:13:13: warning: implicit declaration of function &#39;itoa&#39; is invalid in C99 [-Wimplicit-function-declaration]</span></pre></td></tr><tr><td class="code"><pre><span class="line">            itoa(n, pr, 10);</span></pre></td></tr><tr><td class="code"><pre><span class="line">            ^</span></pre></td></tr><tr><td class="code"><pre><span class="line">1 warning generated.</span></pre></td></tr><tr><td class="code"><pre><span class="line">Undefined symbols for architecture x86_64:</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &quot;_itoa&quot;, referenced from:</span></pre></td></tr><tr><td class="code"><pre><span class="line">      _main in main-2e9155.o</span></pre></td></tr><tr><td class="code"><pre><span class="line">ld: symbol(s) not found for architecture x86_64</span></pre></td></tr><tr><td class="code"><pre><span class="line">clang: error: linker command failed with exit code 1 (use -v to see invocation)</span></pre></td></tr></table></figure>
<h1 id="正道"><a href="#正道" class="headerlink" title="正道"></a>正道</h1><p>后面找到用<code>sprintf</code></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;  </span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span> <span class="params">(<span class="keyword">void</span>)</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">int</span> num = <span class="number">100</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">char</span> str[<span class="number">25</span>];</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="built_in">sprintf</span>(str, <span class="string">" %d"</span> , num);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="built_in">printf</span> (<span class="string">"The number 'num' is %d and the string 'str' is %s. \n"</span> ,num, str);</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<h1 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h1><p>不过遇到比较长的整型时候, 发现疑似溢出的情况(像这个负号)</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="number">3362695274</span>           <span class="comment">// 输入</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">- <span class="number">9</span> <span class="number">3</span> <span class="number">2</span> <span class="number">2</span> <span class="number">7</span> <span class="number">2</span> <span class="number">0</span> <span class="number">2</span> <span class="number">2</span>  <span class="comment">// 输出(每个数字中间加了空格))</span></span></pre></td></tr></table></figure>
<p>其实是整型应该从<code>int</code>换成<code>long</code>, 然后就正常了</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="function"></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">char</span> str[<span class="number">10</span>];</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">long</span> x = <span class="number">1234567890L</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="built_in">sprintf</span>(str,<span class="string">"%ld"</span>,x);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s"</span>,str);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<hr>
<p><strong>参考</strong>:</p>
<ul>
<li><a href="https://www.runoob.com/w3cnote/c-int2str.html" target="_blank" rel="noopener">https://www.runoob.com/w3cnote/c-int2str.html</a></li>
<li><a href="http://c.biancheng.net/cpp/html/1573.html" target="_blank" rel="noopener">http://c.biancheng.net/cpp/html/1573.html</a></li>
<li><a href="https://bbs.csdn.net/topics/380202724" target="_blank" rel="noopener">https://bbs.csdn.net/topics/380202724</a></li>
</ul>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>Git 生成 SSH Key</title>
    <url>/git/git-generate-ssh-key/</url>
    <content><![CDATA[<p>以后都用ssh来<code>git</code></p>
<a id="more"></a>
<h1 id="生成-SSH-Key"><a href="#生成-SSH-Key" class="headerlink" title="生成 SSH Key"></a>生成 SSH Key</h1><ol>
<li><p>设置git的用户名和邮箱</p>
<p> 一般考虑用来管理github的仓库, 所以这里的用户名和邮件都建议设置成github账号对应的</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git config --global user.name "username"</span></pre></td></tr><tr><td class="code"><pre><span class="line">git config --global user.email "example@gmail.com"</span></pre></td></tr></table></figure>
</li>
<li><p>有则备份, 无则跳过</p>
<p> 先到<code>.ssh</code>文件夹下面看看有没有已经生成的ssh key, 有的话要么直接拿来用, 要么以防万一备个份再重新生成ssh key(覆盖旧文件)</p>
<ul>
<li>mac/linux 路径: <code>~/.ssh</code></li>
<li>windows 路径: <code>C:/User/username/.ssh</code></li>
</ul>
</li>
<li><p>生成 SSH Key<br> 没错你又要再打一次邮箱地址</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -C "example@gmail.com"</span></pre></td></tr></table></figure>
<p> 然后连按三次回车, 密码为空就好了, 没事的. 看到一个奇怪的图形后说明OK了</p>
</li>
<li><p>测试github</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh git@github.com</span></pre></td></tr></table></figure>
<p> 输入<code>yes</code>, 你的电脑就认识<code>github.com</code>了, 也应该说明ssh没问题了</p>
</li>
</ol>
<h1 id="连接github"><a href="#连接github" class="headerlink" title="连接github"></a>连接github</h1><p>到<a href="https://github.com/settings/keys" target="_blank" rel="noopener">https://github.com/settings/keys</a>点<code>new SSH Key</code>, 复制<code>.ssh/rsa_id.pub</code>下的全文黏贴进去, 起个好点的名字, 保存.</p>
]]></content>
      <tags>
        <tag>配置</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>WSL安装MySql</title>
    <url>/linux/wsl-install-mysql8/</url>
    <content><![CDATA[<p>have to admit that WSL is not befect.</p>
<a id="more"></a>
<p>General tutorial always bring up ERROR:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> service mysql start</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">mysql: unrecognized service</span></pre></td></tr></table></figure>
<p>Luckily, I found an <a href="https://github.com/Microsoft/WSL/issues/3631" target="_blank" rel="noopener">issue</a> in WSL Github:(a bit modified)</p>
<p>1.Remove MySQL 8.x:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get purge mysql-server mysql-client</span></pre></td></tr><tr><td class="code"><pre><span class="line">sudo apt-get -y autoremove</span></pre></td></tr></table></figure>
<p>2.Change to MySQL 5.x candidate:</p>
<p>get download url from <a href="https://dev.mysql.com/downloads/file/?id=487007" target="_blank" rel="noopener">https://dev.mysql.com/downloads/file/?id=487007</a> or download the <code>.deb</code> directly</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://dev.mysql.com/get/mysql-apt-config_0.8.13-1_all.deb</span></pre></td></tr><tr><td class="code"><pre><span class="line">sudo dpkg -i mysql-apt-config_0.8.13-1_all.deb</span></pre></td></tr></table></figure>
<p>3.Double check current apt policy of MySQL is 5.x:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt policy mysql-server (it will show 5.x is the default candidate)</span></pre></td></tr><tr><td class="code"><pre><span class="line">sudo apt-get update</span></pre></td></tr></table></figure>
<p>4.Install MySQL 5.x</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get -y install mysql-server</span></pre></td></tr><tr><td class="code"><pre><span class="line">sudo service mysql start #(this should work without error)</span></pre></td></tr></table></figure>
<p>5.Change to MySQL 8.x candidate</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo dpkg -i mysql-apt-config_0.8.13-1_all.deb (select 8.x)</span></pre></td></tr><tr><td class="code"><pre><span class="line">sudo apt policy mysql-server (it will show 8.x is the default candidate)</span></pre></td></tr><tr><td class="code"><pre><span class="line">sudo apt-get update</span></pre></td></tr></table></figure>
<p>however, I still find that the candidate is 5.x. </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo apt policy mysql-server</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">mysql-server:</span></pre></td></tr><tr><td class="code"><pre><span class="line">  Installed: (none)</span></pre></td></tr><tr><td class="code"><pre><span class="line">  Candidate: 5.7.27-0ubuntu0.18.04.1</span></pre></td></tr><tr><td class="code"><pre><span class="line">  Version table:</span></pre></td></tr><tr><td class="code"><pre><span class="line">     5.7.27-0ubuntu0.18.04.1 500</span></pre></td></tr><tr><td class="code"><pre><span class="line">        500 https://mirrors.tuna.tsinghua.edu.cn/ubuntu bionic-updates/main amd64 Packages</span></pre></td></tr><tr><td class="code"><pre><span class="line">        500 https://mirrors.tuna.tsinghua.edu.cn/ubuntu bionic-security/main amd64 Packages</span></pre></td></tr><tr><td class="code"><pre><span class="line">     5.7.21-1ubuntu1 500</span></pre></td></tr><tr><td class="code"><pre><span class="line">        500 https://mirrors.tuna.tsinghua.edu.cn/ubuntu bionic/main amd64 Packages</span></pre></td></tr></table></figure>
<p>Continue the tutorial and I found out that it will download 8.x after all, so just go ahead!</p>
<p>6.Install MySQL 8.x</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get -y install mysql-server</span></pre></td></tr><tr><td class="code"><pre><span class="line">Modify a script as there is a bug</span></pre></td></tr><tr><td class="code"><pre><span class="line">sudo vim /etc/init.d/mysql</span></pre></td></tr></table></figure>
<p>search for a line “. /usr/share/mysql/mysql-helpers” and change it to<br>“. /usr/share/mysql-8.0/mysql-helpers”</p>
<p>7.Upgrade system tables to MySQL 8.x</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo service mysql start #(this should start without error)</span></pre></td></tr><tr><td class="code"><pre><span class="line">sudo mysql_upgrade -u root -p</span></pre></td></tr></table></figure>
<p>then enjoy your MySQL.</p>
]]></content>
      <tags>
        <tag>WSL</tag>
      </tags>
  </entry>
  <entry>
    <title>python正则表达式</title>
    <url>/python-code/python-regex/</url>
    <content><![CDATA[<p>regex</p>
<a id="more"></a>
<p>多行匹配用单行模式</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">longtables = re.findall(<span class="string">r"\\begin&#123;longtable&#125;.*?\\end&#123;longtable&#125;"</span>, tex_raw, flags=re.DOTALL) <span class="comment"># 单行模式</span></span></pre></td></tr></table></figure>
<p><a href="https://www.lfhacks.com/tech/python-re-single-multiline" target="_blank" rel="noopener">https://www.lfhacks.com/tech/python-re-single-multiline</a></p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>python读Excel</title>
    <url>/python-code/python-read-excel/</url>
    <content><![CDATA[<p><code>xlrd</code> and <code>xlutils</code></p>
<a id="more"></a>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> xlrd</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> xlutils.copy <span class="keyword">import</span> copy</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">######################</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># 文件读取</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">######################</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#读取的文件路径</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">file_path = <span class="string">r'./path/to/excel.xlsx'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># 此代码可以不用</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#文件中的中文转码</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">file_path = file_path.decode(<span class="string">'utf-8'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#获取数据</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">data = xlrd.open_workbook(file_path)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#获取sheet</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">table = data.sheet_by_index(<span class="number">0</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">######################</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># 读取表内信息</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">######################</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#获取总行数</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">nrows = table.nrows</span></pre></td></tr><tr><td class="code"><pre><span class="line">print(<span class="string">"row num: "</span>, nrows)</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#获取总列数</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">ncols = table.ncols</span></pre></td></tr><tr><td class="code"><pre><span class="line">print(<span class="string">"col num: "</span>,ncols)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#获取一行的数值</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">print(table.row_values(<span class="number">1</span>))</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># 获取一列的数值</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">print(table.col_values(<span class="number">1</span>))</span></pre></td></tr><tr><td class="code"><pre><span class="line">print(table.col_values(<span class="number">0</span>))</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#获取一个单元格的数值</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">cell_value = table.cell(<span class="number">1</span>,<span class="number">1</span>).value</span></pre></td></tr><tr><td class="code"><pre><span class="line">print(cell_value)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">######################</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># Excel表格的写操作</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">######################</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">book = xlrd.open_workbook(file_path)</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#复制一个excel</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">new_book = copy(book)<span class="comment">#复制了一份原来的excel</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#通过获取到新的excel里面的sheet页</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">sheet = new_book.get_sheet(<span class="number">0</span>)<span class="comment">#获取到第一个sheet页</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#写入excel，第一个值是行，第二个值是列</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">sheet.write(<span class="number">6</span>, <span class="number">0</span>, <span class="string">'Dandan Sun'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#保存新的excel，保存excel必须使用后缀名是.xls的，不是能是.xlsx的</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">new_book.save(<span class="string">'stu_new.xls'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">#删除旧文件并重命名以做到修改文件的效果</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">os.remove(<span class="string">'stu.xls'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line">os.rename(<span class="string">'stu_new.xls'</span>,<span class="string">'stu.xls'</span>)</span></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>万物都要可latex</title>
    <url>/latex/everything-to-latex/</url>
    <content><![CDATA[<p>LaTeX走天涯</p>
<a id="more"></a>
<h1 id="doc2tex"><a href="#doc2tex" class="headerlink" title="doc2tex"></a>doc2tex</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pandoc 'a.docx' -o b.tex --extract-media="./"</span></pre></td></tr></table></figure>
<p><code>--extract-media</code>指定导出word中的媒体附件的路径, 不设置则不导出媒体文件.</p>
<h1 id="pdf2tex"><a href="#pdf2tex" class="headerlink" title="pdf2tex"></a>pdf2tex</h1><p>官网明确说了不在支持windows了(因为人太少), windows用户可以装<a href="https://benature.github.io/linux/Linux-in-Windows/">子系统wsl</a></p>
<p>abiword is only support on Linux.</p>
<blockquote>
<p>well, the package is a bit huge.</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install abiword</span></pre></td></tr></table></figure>
<p>ref:</p>
<ul>
<li><a href="https://help.ubuntu.com/community/AbiWord" target="_blank" rel="noopener">https://help.ubuntu.com/community/AbiWord</a></li>
<li><a href="https://www.abisource.com/" target="_blank" rel="noopener">https://www.abisource.com/</a></li>
</ul>
]]></content>
      <tags>
        <tag>LaTeX</tag>
      </tags>
  </entry>
  <entry>
    <title>快捷键狂魔</title>
    <url>/devices/shorcut-relier/</url>
    <content><![CDATA[<p>一生快捷键, 拒绝鼠标手.</p>
<a id="more"></a>
<blockquote>
<p>仅以此页记录我觉得我容易忘的或者冷门但值得推荐的快捷键</p>
</blockquote>
<h1 id="Word-of-MS"><a href="#Word-of-MS" class="headerlink" title="Word of MS"></a>Word of MS</h1><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">功能</th>
<th style="text-align:center">快捷键</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">审阅模式(开/关)</td>
<td style="text-align:center"><code>ctrl+shift+E</code></td>
</tr>
</tbody>
</table>
</div>
<h1 id="Visual-Studio-Code"><a href="#Visual-Studio-Code" class="headerlink" title="Visual Studio Code"></a>Visual Studio Code</h1><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">功能</th>
<th style="text-align:center">快捷键</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">收起代码到最高级</td>
<td style="text-align:center"><code>ctrl+K ctrl+0</code></td>
</tr>
<tr>
<td style="text-align:center">格式化代码</td>
<td style="text-align:center"><code>shift+alt+F</code></td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <tags>
        <tag>效率</tag>
      </tags>
  </entry>
  <entry>
    <title>用命令行查看文件夹大小</title>
    <url>/others/check-storage-in-folders/</url>
    <content><![CDATA[<p>懒得一个个点属性</p>
<a id="more"></a>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">du -h --max-depth=1</span></pre></td></tr><tr><td class="code"><pre><span class="line">du -d 1 -h</span></pre></td></tr></table></figure>
<p>主要是在清理电脑的时候在<code>资源管理器</code>上不能显示文件夹的大小, 一个个右键点<code>属性</code>会很累, 所以就找了一个命令来查看当前目录下文件夹的占用大小.</p>
<blockquote>
<p>注意在<code>D:/</code>等根目录下会有权限问题, 到某个文件夹下面还溢出了…</p>
</blockquote>
<p>参考:  </p>
<ul>
<li><a href="https://blog.csdn.net/ouyang_peng/article/details/10414499" target="_blank" rel="noopener">https://blog.csdn.net/ouyang_peng/article/details/10414499</a></li>
</ul>
]]></content>
      <tags>
        <tag>效率</tag>
      </tags>
  </entry>
  <entry>
    <title>从本地已有项目同步到git仓库</title>
    <url>/git/git-from-local/</url>
    <content><![CDATA[<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git init</span></pre></td></tr><tr><td class="code"><pre><span class="line">git add .</span></pre></td></tr><tr><td class="code"><pre><span class="line">git commit -m "first commit"</span></pre></td></tr><tr><td class="code"><pre><span class="line">git remote add origin &lt;url&gt;</span></pre></td></tr><tr><td class="code"><pre><span class="line">git push -u origin master</span></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Git</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>git添加子模块</title>
    <url>/git/git-submodule-add/</url>
    <content><![CDATA[<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git submodule add &lt;url&gt;</span></pre></td></tr></table></figure>
<a id="more"></a>
<p>可以直接对已经存在的子库用上述命令添加到子模块文件中</p>
<p><strong>ref:</strong></p>
<ul>
<li><a href="https://segmentfault.com/a/1190000003076028" target="_blank" rel="noopener">https://segmentfault.com/a/1190000003076028</a></li>
</ul>
]]></content>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>Github入门4 | 在 Github 如何 Pull Requests</title>
    <url>/git/git-github-pr/</url>
    <content><![CDATA[<p>Pull Request简称PR。</p>
<a id="more"></a>
<p>有时候我们在github上面会看到一些有趣/有用的repo，有可能会有这样的想法：</p>
<ul>
<li>这个repo很有意思，我也想参与进去</li>
<li>我发现了repo里面有个bug或者typo，我想帮忙修改。</li>
<li>这个repo框架不错，我想在他的基础上实现我想要的功能</li>
<li>etc…</li>
</ul>
<p>但仓库是别人的，自己也不是collaborater，是没有权限对仓库做修改的（当然clone到本地自己随便乱改没问题，但是不能上传到远端）。<br>对此，我们可以点击原repo的fork，这样自己名下也有一个一模一样的repo了，而且我们有权限提交自己的commit，不过当然是推到自己名下的那个fork仓库而不是原仓库。</p>
<p>对于前两种想法，我们的期望是修改原仓库，对原仓库有贡献。在自己名下的仓库修改好后，可以pr到原仓库。</p>
<p>Pr被原仓库管理员接受后，也有机会成为仓库的collaborater，拥有直接提交代码到原仓库的权限，不需要再到网页端点pr啦。如果能成为一个开源大项目的collaborater，那也是一种荣幸。在面试上也可以成为一个加分点。</p>
]]></content>
      <categories>
        <category>Git教程系列</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>WSL之SSH服务端</title>
    <url>/linux/wsl-ssh-server/</url>
    <content><![CDATA[<p>如何用wsl搭建ssh服务</p>
<a id="more"></a>
<p>其实主要就是记得开防火墙</p>
<ul>
<li><a href="https://hbaaron.github.io/blog_2017/%E5%9C%A8wsl%E4%B8%8B%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8sshd%E5%85%A8%E6%94%BB%E7%95%A5/" target="_blank" rel="noopener">https://hbaaron.github.io/blog_2017/%E5%9C%A8wsl%E4%B8%8B%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8sshd%E5%85%A8%E6%94%BB%E7%95%A5/</a></li>
<li><a href="https://blog.csdn.net/lcuwb/article/details/82885920" target="_blank" rel="noopener">https://blog.csdn.net/lcuwb/article/details/82885920</a></li>
<li><a href="https://www.jianshu.com/p/cd4d604e0b44" target="_blank" rel="noopener">https://www.jianshu.com/p/cd4d604e0b44</a></li>
</ul>
<p>但是在一台老电脑(win10)中尝试开防火墙端口但还是访问time out, 可是又成功过一次?</p>
<p>不晓得是操作问题还是校园网的内网问题(比如变动ip地址, 可是访问的ip是没有变动的)?</p>
]]></content>
      <tags>
        <tag>配置</tag>
        <tag>WSL</tag>
      </tags>
  </entry>
  <entry>
    <title>Github入门3 | Github Desktop基本操作</title>
    <url>/git/git-github-basic-operation/</url>
    <content><![CDATA[<p>本文介绍用Github Desktop管理版本.</p>
<a id="more"></a>
<h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><p>找到想要clone的repo</p>
<h2 id="已有的repo"><a href="#已有的repo" class="headerlink" title="已有的repo"></a>已有的repo</h2><p>打开repo的页面</p>
<p><img src="/git/git-github-basic-operation/repo.png" alt="repo"></p>
<p>点击右边的这个绿色button <code>Clone or download</code>. 既然是用Github Desktop的话就无所谓HTTPS链接还是SSH链接了, 直接点<code>Open in desktop</code>然后跳转就好了.</p>
<p><img src="/git/git-github-basic-operation/clone_page.png" alt="repo"></p>
<p>跳转到Desktop后clone的url已经帮忙填好了, 自己选好要克隆到的本地路径就好了.</p>
<blockquote>
<p><strong>强烈建议创建专门文件夹放代码</strong>, 已有此习惯的请忽略这行.</p>
</blockquote>
<p><img src="/git/git-github-basic-operation/clone.png" alt="repo"></p>
<p>点击<code>Clone</code>后会进入加载页面, 仓库正在下载.</p>
<h2 id="自己新建一个repo"><a href="#自己新建一个repo" class="headerlink" title="自己新建一个repo"></a>自己新建一个repo</h2><p>点击右上角profile，在上方菜单栏选择repo，点击右边new的绿色button。<br>输入仓库名。可以选择是公共仓库还是私密仓库，以前私仓是要收费的，现在任意账号都可免费创建了，私仓只有受邀请人可以查看。不过既然我们是在一个开源平台上，还是先设置public吧。<br>建议自动初始化readme.md文档，其实也就帮你写了个标题而已，自己新建文件也一样。readme充当仓库的一个说明文档的角色。<br>剩下两个licence和gitignore随意即可，后面有需要再创建。</p>
<p>仓库创建成功后，clone到本地的操作步骤和上面就一模一样了。</p>
<h1 id="本地local与远端remote同步"><a href="#本地local与远端remote同步" class="headerlink" title="本地local与远端remote同步"></a>本地local与远端remote同步</h1><h2 id="1-atatus"><a href="#1-atatus" class="headerlink" title="1. atatus"></a>1. atatus</h2><p>在本地对文件修改过后，可以通过<br>git staus<br>查看仓库内changed文件</p>
<h2 id="2-add"><a href="#2-add" class="headerlink" title="2. add"></a>2. add</h2><p>修改好代码之后，需要add变更文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git add .</span></pre></td></tr><tr><td class="code"><pre><span class="line">git add -A</span></pre></td></tr><tr><td class="code"><pre><span class="line">git add "file name"</span></pre></td></tr></table></figure>
<p>这里可以理解为把变更的文件信息都打包装到一个快递盒里面。</p>
<h2 id="3-commit"><a href="#3-commit" class="headerlink" title="3. commit"></a>3. commit</h2><p>快递盒打包好后，我们需要贴标签。</p>
<p>commit message是对打包的变更文件的一个简单说明，表明所做修改的意义之类。一个言简意赅的commit nessage有助于版本回溯的查找，也有助于仓库其他协作者在查看commit history的时候了解你做的修改。（互相了解动态在teamwork很重要）</p>
<p>注意，commit会把介于两次commit内add的所有变更文件都打包在一起（就理解成把快递盒打包在集装箱里吧），commit成功local就更新了一个version。</p>
<h2 id="4-push"><a href="#4-push" class="headerlink" title="4. push"></a>4. push</h2><p>本地有了新的version，但此时remote并不知情。换句话说，local领先于remote一个version。</p>
<p>在desktop可以看到有个上箭头，旁边的数字表示local领先remote多少个version。<br>通过push，我们把local的信息推送到remote，这样就使得local和remote同步了。在desktop上面的上箭头就会消失了。</p>
<h2 id="5-fetch"><a href="#5-fetch" class="headerlink" title="5. fetch"></a>5. fetch</h2><p>fetch相当于是和remote打个招呼，看看两边的版本是否一致。fetch只是获取信息，在命令行查看local和remote是否同步需要用status查看。</p>
<p>如果不一致，在desktop会看到上下箭头，上箭头表示local有而remote没有的version，需要推上去，下剪头反之，需要拉下来。旁边的数字表示相差多少个version。</p>
<h2 id="6-pull"><a href="#6-pull" class="headerlink" title="6. pull"></a>6. pull</h2><p>如果remote领先于local，也就是说你的协作者上传了新的代码，通过pull可以从remote获取最新的版本。</p>
]]></content>
      <categories>
        <category>Git教程系列</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>Github入门2 | 接触Github</title>
    <url>/git/github-sign-up/</url>
    <content><![CDATA[<p>Github 注册 &amp; 认识基本的页面信息</p>
<a id="more"></a>
<h1 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h1><p>打开<a href="https://github.com" target="_blank" rel="noopener">Github网址https://github.com</a></p>
<p><img src="/git/github-sign-up/sign_up_page.png" alt="sign up"></p>
<p>在右边输入注册信息.</p>
<p>Username最好认真起下, 后期改是可以改, 但是会有些<a href="https://help.github.com/en/articles/changing-your-github-username" target="_blank" rel="noopener">副作用</a></p>
<blockquote>
<p>邮箱建议用学校邮箱, 有兴趣的可以用来申请Github的教育优惠. 如果已经拿了别的邮箱注册也没关系, 后面可以再setting里面改.</p>
</blockquote>
<p>Step1: 先玩一个”益智小游戏”来确认你是个自然人不是机器人(爬虫)</p>
<p>Step2: 选择免费版还是氪金, 俺普通人就免费版就够啦. 后面两个勾选一般不用考虑去点.</p>
<p>Step3: 填个问卷介绍下你自己, 可以跳过.</p>
<p>后面再点两点就注册成功啦.</p>
<blockquote>
<p>留意下邮箱, 会收到确认邮件.</p>
</blockquote>
<h1 id="页面信息"><a href="#页面信息" class="headerlink" title="页面信息"></a>页面信息</h1><h2 id="个人页面"><a href="#个人页面" class="headerlink" title="个人页面"></a>个人页面</h2><p>登录后点击右上的头像, 点击profile就可以看下如下的个人页面</p>
<p><img src="/git/github-sign-up/profile_info.png" alt="profile"></p>
<ol>
<li>右上角可以跳转到一些常用页面(profile, setting, star, repo)等</li>
<li>左上方的搜索栏可以全网搜索用户, 仓库名等信息, 也可以针对某用户或某仓库来搜索.</li>
<li>左侧栏就是基本的个人信息, 如果有假如组织在下面的额organization也会有显示. 这里有个<code>pro</code>是因为我申请了教育优惠.</li>
<li>右侧上方也是一个小菜单栏, 右边两个分别是<code>关注</code>和<code>被关注</code><del>(嗯, 没错, Github是个社交平台)</del></li>
<li>右侧中间是自己选择pin出来的仓库, 可以自己调整顺序, 最多展示六个, 要看全部仓库可以点上面的<code>Repositories</code>.</li>
<li>最后右侧下方是在Github仓库上的contribution记录, 颜色越深说明那天的贡献越多. Github有一套contribution的<a href="https://help.github.com/en/articles/why-are-my-contributions-not-showing-up-on-my-profile" target="_blank" rel="noopener">打分规则</a>. 大致可以分为commits, code review, issues和pull request (PR)</li>
</ol>
<h2 id="仓库页面"><a href="#仓库页面" class="headerlink" title="仓库页面"></a>仓库页面</h2><p>选中某一个仓库就能看到仓库的详情.</p>
<p><img src="/git/github-sign-up/repo.png" alt="repo"></p>
<p>可能有些人不清楚仓库(repo)是什么意思, 其实就是表示要管理的一个项目(或者说作业)的一种说法. (Github就这么叫了那就这么叫呗) 其实就是一个放实现某一类目的代码的仓库, 理解成存储仓也好像还行.</p>
<p>简单提几个常用的东西:</p>
<ul>
<li>Issues: 对仓库有什么疑问, 意见吐槽之类的都可以再里面说, 和论坛差不多, 每个repo都独立拥有.</li>
<li>README.md: Github会在下方渲染readme.md出来, 里面一般是仓库的介绍以及一些使用的说明.</li>
<li><strong>Clone or download</strong>: 如果你想要这个仓库的代码, 点击右边的这个绿色button, 有如下的选项. <ul>
<li>Download ZIP: 直接下载压缩包. 一般不建议, 后期仓库有更新的话, 想本地也同步更新会很麻烦. 推荐clone.</li>
<li>Clone: 刚入门的就选默认的HTTPS链接就好了, 如果习惯命令行操作的建议SSH链接, 其实后期都是可以改的. clone的话有两种方法.<ul>
<li>Open in desktop: 用Github Desktop软件来clone, 安装了软件的话会自动打开软件, 没安装的话会跳转到Github Desktop的下载页面.</li>
<li>其他方式: 在命令行<code>git clone &lt;url&gt;</code>或者用其他软件来clone(如sourcetree). (其实用软件相当于软件帮你敲命令行而已)</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><img src="/git/github-sign-up/clone_page.png" alt="repo"></p>
]]></content>
      <categories>
        <category>Git教程系列</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序 | 寻找中珠男洗手间</title>
    <url>/wechat-push/wechat-program-restroom/</url>
    <content><![CDATA[<p>一个鸡肋</p>
<a id="more"></a>
<h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><p>如果你是中珠老油条，可以先扫下这个二维码感受一下，大概就知道后面一堆文字要说啥<del>（废话）</del>了。</p>
<p><center><img src="/wechat-push/wechat-program-restroom/restroom.png" width="40%" alt align="center"></center><br><!-- ![](wechat-program-restroom/restroom.png) --></p>
<p>在教学楼上课，课间时刻往往会出现一种尴尬的时刻。不过这种尴尬的情况仅仅发生在男生身上，女生一般毫不知情。好一个女懵男泪。</p>
<p>按理说每个饮水机旁边都会有洗手间洗手间，不过并非每个洗手间都有男洗手间。换句话说，不是每个女洗手间旁边都有男洗手间。</p>
<p>因此所谓的尴尬情况就是，从课室走向一边的洗手间，发现只有女洗手间。哦豁，完蛋。</p>
<p>其实只要走过几次，就会发现男洗手间是相隔布阵的。如果看教学楼的竖直切面，男洗手间的分布如同国际象棋棋盘。</p>
<p>有一天我一拍桌子，不能再这么老是走错方向了！（其实就是几步路都懒得走）</p>
<p>因此我写了这样一个小程序</p>
<p><center><img src="/wechat-push/wechat-program-restroom/restroom.gif" width="40%" alt align="center"></center><br><!-- ![](wechat-program-restroom/restroom.gif) --></p>
<p>最初的想法就是，当我还没出课室的时候，先点下自己的位置，就知道出门后该左转↩还是右转↪了</p>
<h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>不过真实情况肯定不是这样嘛，谁上个厕所还要拿手机差的，出门左右观察一下大概就能做判断了…而且后期课室熟悉之后大概也清楚这门课要去洗手间的话应该走哪个方向了…</p>
<p>总而言之，这玩意有点鸡肋。</p>
<p>权当做帮助中珠新朋友熟悉“地形”吧，也让女同学同情一下俺们…</p>
]]></content>
      <tags>
        <tag>微信小程序</tag>
        <tag>公众号推文</tag>
      </tags>
  </entry>
  <entry>
    <title>Github入门1 | 什么是Github</title>
    <url>/git/git-github-intro/</url>
    <content><![CDATA[<p>Github是什么呀</p>
<a id="more"></a>
<h1 id="什么时候会用到Github"><a href="#什么时候会用到Github" class="headerlink" title="什么时候会用到Github"></a>什么时候会用到Github</h1><ul>
<li>和他人协作写代码</li>
<li>想把自己的代码分享给其他人</li>
<li>找各种资源, 不想自己造轮子</li>
<li>自己有一个有趣的项目想法, 并且想吸引一些大佬过来一起开发</li>
<li>发布课件</li>
</ul>
<h1 id="Github有什么好处"><a href="#Github有什么好处" class="headerlink" title="Github有什么好处"></a>Github有什么好处</h1><p>一般在团队协作的时候, 我们需要共同处理相同的文件. 如果说用微信之类传文件, 我改一版发群里, 别人又改一版发群里. 这样可能会出现冲突的情况, 即群里最新的文档是版本2.2, Alice拿来改成版本2.3的时候, 同时Bob也在改文件, 那他改出来的也是版本2.3, 两个人把新改好的文件发进群里后, 群里就相当于有两份版本2.3, 就需要有人花额外的精力去处理这部分的冲突, 合并成一份既有Alice修改内容也有Bob修改内容的版本2.3. 而Git就可以自动化的去处理大部分的冲突, 减少不必要的人工精力.</p>
<p>基于Git的版本控制平台有很多, 除了Github还有Gitlab, 码云等等. 而Github是国际上相当主流的平台, 所以主要介绍GItHub.</p>
]]></content>
      <categories>
        <category>Git教程系列</category>
      </categories>
      <tags>
        <tag>Git</tag>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>lovephysics又偷偷更新了</title>
    <url>/wechat-push/lovephysics-spider/</url>
    <content><![CDATA[<p>推销一个小服务.</p>
<a id="more"></a>
<p>不知道有多少人发现周一的时候lovephysics又偷偷更新了, D1锁相放大器下面突然多了5个仪器说明书.</p>
<p>不过我主要不是想告诉你lovephysics又更新了, 而是想说除了以下方式你可以得知讲义更新</p>
<ul>
<li>不厌其烦地每天登上lovephysic看下下周要做的实验的讲义是不是更新</li>
<li>等某个好心人告诉你讲义更新了</li>
</ul>
<p>其实还有一种比较懒的方式</p>
<ul>
<li><strong>坐等</strong>更新通知邮件.</li>
</ul>
<p><img src="/wechat-push/lovephysics-spider/lovephysics-spider.jpeg" alt="自动邮件通知"></p>
<blockquote>
<p>实现这个功能的起因是做实验当天才发现两三天前讲义更新了, 连思考题都有改动, 而我已经在旧讲义上做了一些笔记了, 当时头上有点冒烟…</p>
</blockquote>
<p>简单描述下features:</p>
<ul>
<li>大约每天监测一次lovephysics网站(目前设置间隔25h)</li>
<li>遍历每项实验, 当实验附件数目变化, 发邮件通知, 并附件增加的文件</li>
<li>遍历所有文件, 若文件内容变化, 发邮件通知, 内容包括新旧文件名, 文件下载链接, 同时也会将新版文件放在附件中.</li>
<li>邮件通过个人邮箱群发订阅用户</li>
</ul>
<p>如果你对这个功能感兴趣, 欢迎订阅:) 只需要告知我邮箱地址即可. 建议用学校邮箱作为收件地址, 微信会有<code>腾讯企业邮箱</code>通知, 能比较及时看到信息.</p>
<blockquote>
<p>该功能仅供参考, 不能依赖, 程序出起bug来我自己也会被坑的不要不要的.</p>
</blockquote>
<p>如果对功能有什么想法或者建议, 欢迎评论区提issue.</p>
]]></content>
      <tags>
        <tag>公众号推文</tag>
      </tags>
  </entry>
  <entry>
    <title>VS Code 插件</title>
    <url>/others/vscode-plungin/</url>
    <content><![CDATA[<ul>
<li>Code Runner</li>
<li>TODO Highlight / Todo Tree</li>
<li>Git 类<ul>
<li>Gitlens - Git supercharged</li>
<li>Git History</li>
</ul>
</li>
<li>Markdown 类<ul>
<li>Markdown All in One：源码操作纵享丝滑</li>
<li><a href="https://shd101wyy.github.io/markdown-preview-enhanced/#/zh-cn/" target="_blank" rel="noopener">Markdown Preview Enhanced</a>：预览加成<ul>
<li>Tips: <ul>
<li>右上会看到两个预览 icon，注意区分 vsc 原生的和 MPE 的（MPE 快捷键<code>cmd+opt+V</code>）</li>
</ul>
</li>
</ul>
</li>
<li>关于Markdown 的一顿骚操作可以看下<a href="https://benature.github.io/others/markdown-multi-col/">这里</a></li>
</ul>
</li>
</ul>
]]></content>
      <tags>
        <tag>资源</tag>
        <tag>Mathematica</tag>
      </tags>
  </entry>
  <entry>
    <title>微信小程序</title>
    <url>/wechat-push/wechat-mini-program/</url>
    <content><![CDATA[<p>评论区</p>
<a id="more"></a>
<p>如果你有什么建议或者有什么好玩的想法想合作实现都可以随意评论, 闲聊也可:)</p>
<blockquote>
<p>留下邮箱可以方便后续交流哦</p>
</blockquote>
]]></content>
      <tags>
        <tag>微信小程序</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown美化技巧</title>
    <url>/others/markdown-trick/</url>
    <content><![CDATA[<p>Markdown美化技巧</p>
<a id="more"></a>
<h1 id="默认隐藏的list-Hexo无效-Github有效"><a href="#默认隐藏的list-Hexo无效-Github有效" class="headerlink" title="默认隐藏的list(Hexo无效, Github有效)"></a>默认隐藏的list(Hexo无效, Github有效)</h1><!-- <b><details><summary>Title</summary></b>
here are hiden things
</details> -->
<details><summary>Title</summary>
here are hiden things
</details>

<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">details</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">summary</span>&gt;</span></span>Title<span class="xml"><span class="tag">&lt;/<span class="name">summary</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line">here are hiden things</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">details</span>&gt;</span></span></span></pre></td></tr></table></figure>
<h1 id="提示框"><a href="#提示框" class="headerlink" title="提示框"></a>提示框</h1><div class="note default"><p>default</p></div>
<div class="note primary"><p>primary</p></div>
<div class="note success"><p>success</p></div>
<div class="note info"><p>info</p></div>
<div class="note warning"><p>warning</p></div>
<div class="note danger"><p>danger</p></div>
<div class="note danger no-icon"><p>danger no-icon</p></div>

<div class="note [class]">
            <p>Any content (support inline tags too).</p>
          </div>
<p>[class] : default | primary | success | info | warning | danger.<br>          May be not defined.</p>
<p>icon在主题配置中找<code>note</code></p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note default"</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span>default<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note primary"</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span>primary<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note success"</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span>success<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note info"</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span>info<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note warning"</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span>warning<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note danger"</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span>danger<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"note danger no-icon"</span>&gt;</span></span><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span>danger no-icon<span class="xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></pre></td></tr></table></figure>
<h1 id="tab选项卡"><a href="#tab选项卡" class="headerlink" title="tab选项卡"></a>tab选项卡</h1><div class="tabs" id="选项卡"><ul class="nav-tabs"><li class="tab"><a href="#选项卡-1">选项卡 1</a></li><li class="tab"><a href="#选项卡-2">选项卡 2</a></li><li class="tab active"><a href="#选项卡-3">选项卡 3</a></li></ul><div class="tab-content"><div class="tab-pane" id="选项卡-1"><p><strong>这是选项卡 1</strong> 呵呵哈哈哈哈哈哈</p></div><div class="tab-pane" id="选项卡-2"><p><strong>这是选项卡 2</strong> 额。。。</p></div><div class="tab-pane active" id="选项卡-3"><p><strong>这是选项卡 3</strong> 哇，你找到我了！</p></div></div></div>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% tabs 选项卡, 2 %&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="xml"><span class="comment">&lt;!-- tab --&gt;</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="strong">**这是选项卡 1**</span> 呵呵哈哈哈哈哈哈</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="xml"><span class="comment">&lt;!-- tab --&gt;</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="strong">**这是选项卡 2**</span> 额。。。</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="xml"><span class="comment">&lt;!-- tab --&gt;</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="strong">**这是选项卡 3**</span> 哇，你找到我了！</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="xml"><span class="comment">&lt;!-- endtab --&gt;</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#123;% endtabs %&#125;</span></pre></td></tr></table></figure>
<hr>
<p>reference:</p>
<ul>
<li><a href="https://walesexcitedmei.github.io/2018/08/30/HEXO-NexT-%E4%B8%BB%E9%A2%98%E6%8F%90%E9%AB%98%E5%8D%9A%E5%AE%A2%E9%A2%9C%E5%80%BC/" target="_blank" rel="noopener">https://walesexcitedmei.github.io/2018/08/30/HEXO-NexT-%E4%B8%BB%E9%A2%98%E6%8F%90%E9%AB%98%E5%8D%9A%E5%AE%A2%E9%A2%9C%E5%80%BC/</a></li>
</ul>
]]></content>
      <tags>
        <tag>入门教程</tag>
        <tag>资源</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 重生记</title>
    <url>/web/hexo-log/</url>
    <content><![CDATA[<p>鉴于在Hexo玩崩过几次, 也就重装过几次, 这次重装终于决定把所有操作都记录一次了.</p>
<a id="more"></a>
<h1 id="Update-Hexo-at-first"><a href="#Update-Hexo-at-first" class="headerlink" title="Update Hexo at first"></a>Update Hexo at first</h1><h2 id="Update-npm-cnpm"><a href="#Update-npm-cnpm" class="headerlink" title="Update npm, cnpm"></a>Update npm, cnpm</h2><p>Firstly, let us check the version.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">node -v</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> v8.9.3</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">npm -v</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 6.4.1</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">cnpm -v</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> cnpm@5.2.0 (D:\MUYI Program Files\Nodejs\node_global\node_modules\cnpm\lib\parse_argv.js)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> npm@5.8.0 (D:\MUYI Program Files\Nodejs\node_global\node_modules\cnpm\node_modules\npm\lib\npm.js)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> node@8.9.3 (D:\MUYI Program Files\Nodejs\node.exe)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> npminstall@3.3.0 (D:\MUYI Program Files\Nodejs\node_global\node_modules\cnpm\node_modules\npminstall\lib\index.js)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> prefix=D:\MUYI Program Files\Nodejs\node_global</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> win32 x64 10.0.18362</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> registry=https://registry.npm.taobao.org</span></span></pre></td></tr></table></figure>
<p>update</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g npm</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm -v</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 6.10.3</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span></pre></td></tr><tr><td class="code"><pre><span class="line">cnpm -v</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> cnpm@6.1.0 (D:\MUYI Program Files\Nodejs\node_global\node_modules\cnpm\lib\parse_argv.js)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> npm@6.10.3 (D:\MUYI Program Files\Nodejs\node_global\node_modules\cnpm\node_modules\_npm@6.10.3@npm\lib\npm.js)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> node@8.9.3 (D:\MUYI Program Files\Nodejs\node.exe)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> npminstall@3.23.0 (D:\MUYI Program Files\Nodejs\node_global\node_modules\cnpm\node_modules\_npminstall@3.23.0@npminstall\lib\index.js)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> prefix=D:\MUYI Program Files\Nodejs\node_global</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> win32 x64 10.0.18362</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> registry=https://r.npm.taobao.org</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">npm cache clean -f</span></pre></td></tr><tr><td class="code"><pre><span class="line">cnpm install -g n</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> update all global packages</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">cnpm install -g</span></pre></td></tr></table></figure>
<h2 id="Unable-to-update-node"><a href="#Unable-to-update-node" class="headerlink" title="Unable to update node"></a>Unable to update node</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cnpm install -g n</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Downloading n to D:\MUYI Program Files\Nodejs\node_global\node_modules\n_tmp</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Copying D:\MUYI Program Files\Nodejs\node_global\node_modules\n_tmp\_n@5.0.2@n to D:\MUYI Program Files\Nodejs\node_global\node_modules\n</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Installing n<span class="string">'s dependencies to D:\MUYI Program Files\Nodejs\node_global\node_modules\n/node_modules</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> All packages installed (used 8ms(network 4ms), speed 0B/s, json 0(0B), tarball 0B)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> [n@5.0.2] link D:\MUYI Program Files\Nodejs\node_global\n@ -&gt; D:\MUYI Program Files\Nodejs\node_global\node_modules\n\bin\n</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">n stable</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> /bin/bash: D:\MUYI Program Files\Nodejs\node_global\node_modules\n\bin\n: 没有那个文件或目录</span></span></pre></td></tr></table></figure>
<p>strange, but I decide to leave it alone.= =</p>
<h2 id="Update-hexo"><a href="#Update-hexo" class="headerlink" title="Update hexo"></a>Update hexo</h2><p>As I decide to reinstall Hexo, why note update it to the latest version</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm i hexo-cli -g</span></pre></td></tr></table></figure>
<p>this may take a really long time.</p>
<p>As what I am scared about, it goes wrong</p>
<p><b><details><summary>Error Info</summary></details></b></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm WARN checkPermissions Missing write access to D:\MUYI Program Files\Nodejs\node_global\node_modules\hexo-cli\node_modules\is-number\node_modules\kind-of</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm WARN checkPermissions Missing write access to D:\MUYI Program Files\Nodejs\node_global\node_modules\hexo-cli\node_modules\is-number\node_modules</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR! path D:\MUYI Program Files\Nodejs\node_global\node_modules\hexo-cli\node_modules\is-number\node_modules\kind-of</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR! code ENOENT</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR! errno -4058</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR! syscall access</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR! enoent ENOENT: no such file or directory, access 'D:\MUYI Program Files\Nodejs\node_global\node_modules\hexo-cli\node_modules\is-number\node_modules\kind-of'</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR! enoent This is related to npm not being able to find a file.</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR! enoent</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR! A complete log of this run can be found in:</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR!     D:\MUYI Program Files\Nodejs\node_cache\_logs\2019-08-12T08_42_25_532Z-debug.log</span></pre></td></tr></table></figure>
<p>&lt;/details&gt;</p>
<p>After Googleing <a href="https://blog.csdn.net/qq_39629050/article/details/80863319" target="_blank" rel="noopener">some blogs</a>, I decide to reinstall the Hexo totally.</p>
<h1 id="Reinstall-Hexo"><a href="#Reinstall-Hexo" class="headerlink" title="Reinstall Hexo"></a>Reinstall Hexo</h1><h2 id="uninstall"><a href="#uninstall" class="headerlink" title="uninstall"></a>uninstall</h2><p>Firstly I need to uninstall hexo.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cnpm uninstall hexo-cli</span></pre></td></tr></table></figure>
<p><b><details><summary>Something wrong</summary></details></b></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.9 (node_modules\fsevents):</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.9: wanted &#123;"os":"darwin","arch":"any"&#125; (current: &#123;"os":"win32","arch":"x64"&#125;)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">added 55 packages from 56 contributors, removed 157 packages, updated 50 packages and audited 1290 packages in 149.763s</span></pre></td></tr><tr><td class="code"><pre><span class="line">found 30 vulnerabilities (10 low, 4 moderate, 15 high, 1 critical)</span></pre></td></tr><tr><td class="code"><pre><span class="line">  run `npm audit fix` to fix them, or `npm audit` for details</span></pre></td></tr></table></figure>
<p>&lt;/details&gt;</p>
<p>So I  </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm audit fix</span></pre></td></tr></table></figure>
<p><b><details><summary>However, error again</summary></details></b></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm WARN tarball tarball data for swig-templates@^2.0.3 (sha1-a0xDtGIXXfKo2oV6IEM3nsbqb9A=) seems to be corrupted. Trying one more time.</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR! code EPERM</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR! syscall unlink</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR! path D:\PROGRAMME PROJECT\Blog\node_modules\.staging\swig-templates-c7f20818\package.json</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR! errno -4048</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR! Error: EPERM: operation not permitted, unlink 'D:\PROGRAMME PROJECT\Blog\node_modules\.staging\swig-templates-c7f20818\package.json'</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR!  &#123; Error: EPERM: operation not permitted, unlink 'D:\PROGRAMME PROJECT\Blog\node_modules\.staging\swig-templates-c7f20818\package.json'</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR!   cause:</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR!    &#123; Error: EPERM: operation not permitted, unlink 'D:\PROGRAMME PROJECT\Blog\node_modules\.staging\swig-templates-c7f20818\package.json'</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR!      errno: -4048,</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR!      code: 'EPERM',</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR!      syscall: 'unlink',</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR!      path: 'D:\\PROGRAMME PROJECT\\Blog\\node_modules\\.staging\\swig-templates-c7f20818\\package.json' &#125;,</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR!   stack: 'Error: EPERM: operation not permitted, unlink \'D:\\PROGRAMME PROJECT\\Blog\\node_modules\\.staging\\swig-templates-c7f20818\\package.json\'',</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR!   errno: -4048,</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR!   code: 'EPERM',</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR!   syscall: 'unlink',</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR!   path: 'D:\\PROGRAMME PROJECT\\Blog\\node_modules\\.staging\\swig-templates-c7f20818\\package.json',</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR!   parent: 'hexo' &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR!</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR! The operation was rejected by your operating system.</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR! It's possible that the file was already in use (by a text editor or antivirus),</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR! or that you lack permissions to access it.</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR!</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR! If you believe this might be a permissions issue, please double-check the</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR! permissions of the file and its containing directories, or try running</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR! the command again as root/Administrator.</span></pre></td></tr></table></figure>
<p>&lt;/details&gt;</p>
<!-- well, let me delete the folder directily. -->
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-cli -g</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm uninstall hexo -g</span></pre></td></tr></table></figure>
<h1 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h1><p>Once a again, I open the <a href="https://blog.csdn.net/gdutxiaoxu/article/details/53576018" target="_blank" rel="noopener">tutorial blog</a>.</p>
<p>this time I open pewershell in admin.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cnpm install hexo-cli -g</span></pre></td></tr><tr><td class="code"><pre><span class="line">hexo -v</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> hexo-cli: 1.1.0</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> os: Windows_NT 10.0.18362 win32 x64</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> http_parser: 2.7.0</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> node: 8.9.3</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> v8: 6.1.534.48</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> uv: 1.15.0</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> zlib: 1.2.11</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> ares: 1.10.1-DEV</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> modules: 57</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> nghttp2: 1.25.0</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> openssl: 1.0.2n</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> icu: 59.1</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> unicode: 9.0</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> cldr: 31.0.1</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> tz: 2017b</span></span></pre></td></tr></table></figure>
<p>But I feel like that I just failed to uninstall hexo.</p>
<h1 id="Initialize-folder-of-blog"><a href="#Initialize-folder-of-blog" class="headerlink" title="Initialize folder of blog"></a>Initialize folder of blog</h1><p>make a folder for blog files.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir BenatureBlog</span></pre></td></tr><tr><td class="code"><pre><span class="line">cd BenatureBlog</span></pre></td></tr></table></figure>
<p>initialize hexo (this may take a bit long time  )</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo init</span></pre></td></tr><tr><td class="code"><pre><span class="line">cnpm install</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo g</span></pre></td></tr><tr><td class="code"><pre><span class="line">hexo s</span></pre></td></tr><tr><td class="code"><pre><span class="line">hexo d</span></pre></td></tr></table></figure>
<h1 id="Configure"><a href="#Configure" class="headerlink" title="Configure"></a>Configure</h1><p>then modify the <code>_config.yml</code> to configure.</p>
<h2 id="Mathjax"><a href="#Mathjax" class="headerlink" title="Mathjax"></a>Mathjax</h2><p>find mathjax config in <code>blog\themes\next\_config.yml</code> and modify</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cnpm uninstall hexo-renderer-marked --save</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> npm ERR! code EINVALIDTAGNAME</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> npm ERR! Invalid tag name <span class="string">"^undefined"</span>: Tags may not have any characters that encodeURIComponent encodes.</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> npm ERR! A complete <span class="built_in">log</span> of this run can be found <span class="keyword">in</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> npm ERR!     C:\Users\ben04\AppData\Roaming\npm-cache\_logs\2019-08-13T02_04_50_890Z-debug.log</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">cnpm i hexo-renderer-pandoc --save</span></pre></td></tr><tr><td class="code"><pre><span class="line">hexo clean</span></pre></td></tr></table></figure>
<p>As I fialed to uninstall some packages, so I go to <code>/node_modules/</code> and found the coresspond folder and deleted it directily.</p>
<p>then go to <code>node_modules\kramed\lib\rules\inline.js</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//escape: /^\\([\\`*&#123;&#125;\[\]()#$+\-.!_&gt;])/,</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="built_in">escape</span>: <span class="regexp">/^\\([`*\[\]()#$+\-.!_&gt;])/</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">//em: /^\b_((?:__|[\s\S])+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">em: <span class="regexp">/^\*((?:\*\*|[\s\S])+?)\*(?!\*)/</span>,</span></pre></td></tr></table></figure>
<h1 id="img"><a href="#img" class="headerlink" title="img"></a>img</h1><p><a href="https://benature.github.io/2018/03/26/Hexo-Configuration/">https://benature.github.io/2018/03/26/Hexo-Configuration/</a></p>
<h1 id="RSS"><a href="#RSS" class="headerlink" title="RSS"></a>RSS</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cnpm install hexo-generator-feed --save</span></pre></td></tr></table></figure>
<h1 id="Search"><a href="#Search" class="headerlink" title="Search"></a>Search</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cnpm install hexo-generator-searchdb --save</span></pre></td></tr></table></figure>
<hr>
<p><strong>Reference</strong>:</p>
<ul>
<li><a href="https://blog.csdn.net/whjkm/article/details/81088518" target="_blank" rel="noopener">update hexo</a></li>
<li><a href="https://blog.csdn.net/qq_39629050/article/details/80863319" target="_blank" rel="noopener">permission missing in windows</a></li>
<li><a href="https://blog.csdn.net/gdutxiaoxu/article/details/53576018" target="_blank" rel="noopener">build a hexo blog hand by hand</a></li>
<li><a href="https://hexo-guide.readthedocs.io/zh_CN/latest/theme/[NexT]%E9%85%8D%E7%BD%AEMathJax.html" target="_blank" rel="noopener">mathjax</a></li>
<li><a href="https://walesexcitedmei.github.io/2018/08/30/HEXO-NexT-%E4%B8%BB%E9%A2%98%E6%8F%90%E9%AB%98%E5%8D%9A%E5%AE%A2%E9%A2%9C%E5%80%BC/" target="_blank" rel="noopener">RSS</a></li>
<li><a href="https://www.npmjs.cn/getting-started/updating-global-packages/" target="_blank" rel="noopener">npm</a></li>
</ul>
]]></content>
      <tags>
        <tag>配置</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 重生记</title>
    <url>/web/hexo-reborn/</url>
    <content><![CDATA[<p>鉴于在Hexo玩崩过几次, 也就重装过几次, 这次重装终于决定把所有操作都记录一次了.</p>
<a id="more"></a>
<h1 id="Update-Hexo-at-first"><a href="#Update-Hexo-at-first" class="headerlink" title="Update Hexo at first"></a>Update Hexo at first</h1><h2 id="Update-npm-cnpm"><a href="#Update-npm-cnpm" class="headerlink" title="Update npm, cnpm"></a>Update npm, cnpm</h2><p>Firstly, let us check the version.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">node -v</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> v8.9.3</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">npm -v</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 6.4.1</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">cnpm -v</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> cnpm@5.2.0 (D:\MUYI Program Files\Nodejs\node_global\node_modules\cnpm\lib\parse_argv.js)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> npm@5.8.0 (D:\MUYI Program Files\Nodejs\node_global\node_modules\cnpm\node_modules\npm\lib\npm.js)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> node@8.9.3 (D:\MUYI Program Files\Nodejs\node.exe)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> npminstall@3.3.0 (D:\MUYI Program Files\Nodejs\node_global\node_modules\cnpm\node_modules\npminstall\lib\index.js)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> prefix=D:\MUYI Program Files\Nodejs\node_global</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> win32 x64 10.0.18362</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> registry=https://registry.npm.taobao.org</span></span></pre></td></tr></table></figure>
<p>update</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g npm</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm -v</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 6.10.3</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span></pre></td></tr><tr><td class="code"><pre><span class="line">cnpm -v</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> cnpm@6.1.0 (D:\MUYI Program Files\Nodejs\node_global\node_modules\cnpm\lib\parse_argv.js)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> npm@6.10.3 (D:\MUYI Program Files\Nodejs\node_global\node_modules\cnpm\node_modules\_npm@6.10.3@npm\lib\npm.js)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> node@8.9.3 (D:\MUYI Program Files\Nodejs\node.exe)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> npminstall@3.23.0 (D:\MUYI Program Files\Nodejs\node_global\node_modules\cnpm\node_modules\_npminstall@3.23.0@npminstall\lib\index.js)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> prefix=D:\MUYI Program Files\Nodejs\node_global</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> win32 x64 10.0.18362</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> registry=https://r.npm.taobao.org</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">npm cache clean -f</span></pre></td></tr><tr><td class="code"><pre><span class="line">cnpm install -g n</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> update all global packages</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">cnpm install -g</span></pre></td></tr></table></figure>
<p>maybe you can try to run the install code again </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span></pre></td></tr></table></figure>
<h2 id="Unable-to-update-node"><a href="#Unable-to-update-node" class="headerlink" title="Unable to update node"></a>Unable to update node</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cnpm install -g n</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Downloading n to D:\MUYI Program Files\Nodejs\node_global\node_modules\n_tmp</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Copying D:\MUYI Program Files\Nodejs\node_global\node_modules\n_tmp\_n@5.0.2@n to D:\MUYI Program Files\Nodejs\node_global\node_modules\n</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Installing n<span class="string">'s dependencies to D:\MUYI Program Files\Nodejs\node_global\node_modules\n/node_modules</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> All packages installed (used 8ms(network 4ms), speed 0B/s, json 0(0B), tarball 0B)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> [n@5.0.2] link D:\MUYI Program Files\Nodejs\node_global\n@ -&gt; D:\MUYI Program Files\Nodejs\node_global\node_modules\n\bin\n</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">n stable</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> /bin/bash: D:\MUYI Program Files\Nodejs\node_global\node_modules\n\bin\n: 没有那个文件或目录</span></span></pre></td></tr></table></figure>
<p>strange, but I decide to leave it alone.= =</p>
<h2 id="Update-hexo"><a href="#Update-hexo" class="headerlink" title="Update hexo"></a>Update hexo</h2><p>As I decide to reinstall Hexo, why note update it to the latest version</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm i hexo-cli -g</span></pre></td></tr></table></figure>
<p>this may take a really long time.</p>
<p>As what I am scared about, it goes wrong</p>
<p><b><details><summary>Error Info</summary></details></b></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm WARN checkPermissions Missing write access to D:\MUYI Program Files\Nodejs\node_global\node_modules\hexo-cli\node_modules\is-number\node_modules\kind-of</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm WARN checkPermissions Missing write access to D:\MUYI Program Files\Nodejs\node_global\node_modules\hexo-cli\node_modules\is-number\node_modules</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR! path D:\MUYI Program Files\Nodejs\node_global\node_modules\hexo-cli\node_modules\is-number\node_modules\kind-of</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR! code ENOENT</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR! errno -4058</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR! syscall access</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR! enoent ENOENT: no such file or directory, access 'D:\MUYI Program Files\Nodejs\node_global\node_modules\hexo-cli\node_modules\is-number\node_modules\kind-of'</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR! enoent This is related to npm not being able to find a file.</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR! enoent</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR! A complete log of this run can be found in:</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR!     D:\MUYI Program Files\Nodejs\node_cache\_logs\2019-08-12T08_42_25_532Z-debug.log</span></pre></td></tr></table></figure>
<p>&lt;/details&gt;</p>
<p>After Googleing <a href="https://blog.csdn.net/qq_39629050/article/details/80863319" target="_blank" rel="noopener">some blogs</a>, I decide to reinstall the Hexo totally.</p>
<h1 id="Reinstall-Hexo"><a href="#Reinstall-Hexo" class="headerlink" title="Reinstall Hexo"></a>Reinstall Hexo</h1><h2 id="uninstall"><a href="#uninstall" class="headerlink" title="uninstall"></a>uninstall</h2><p>Firstly I need to uninstall hexo.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cnpm uninstall hexo-cli</span></pre></td></tr></table></figure>
<p><b><details><summary>Something wrong</summary></details></b></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.9 (node_modules\fsevents):</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.9: wanted &#123;"os":"darwin","arch":"any"&#125; (current: &#123;"os":"win32","arch":"x64"&#125;)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">added 55 packages from 56 contributors, removed 157 packages, updated 50 packages and audited 1290 packages in 149.763s</span></pre></td></tr><tr><td class="code"><pre><span class="line">found 30 vulnerabilities (10 low, 4 moderate, 15 high, 1 critical)</span></pre></td></tr><tr><td class="code"><pre><span class="line">  run `npm audit fix` to fix them, or `npm audit` for details</span></pre></td></tr></table></figure>
<p>&lt;/details&gt;</p>
<p>So I  </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm audit fix</span></pre></td></tr></table></figure>
<p><b><details><summary>However, error again</summary></details></b></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm WARN tarball tarball data for swig-templates@^2.0.3 (sha1-a0xDtGIXXfKo2oV6IEM3nsbqb9A=) seems to be corrupted. Trying one more time.</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR! code EPERM</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR! syscall unlink</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR! path D:\PROGRAMME PROJECT\Blog\node_modules\.staging\swig-templates-c7f20818\package.json</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR! errno -4048</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR! Error: EPERM: operation not permitted, unlink 'D:\PROGRAMME PROJECT\Blog\node_modules\.staging\swig-templates-c7f20818\package.json'</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR!  &#123; Error: EPERM: operation not permitted, unlink 'D:\PROGRAMME PROJECT\Blog\node_modules\.staging\swig-templates-c7f20818\package.json'</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR!   cause:</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR!    &#123; Error: EPERM: operation not permitted, unlink 'D:\PROGRAMME PROJECT\Blog\node_modules\.staging\swig-templates-c7f20818\package.json'</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR!      errno: -4048,</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR!      code: 'EPERM',</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR!      syscall: 'unlink',</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR!      path: 'D:\\PROGRAMME PROJECT\\Blog\\node_modules\\.staging\\swig-templates-c7f20818\\package.json' &#125;,</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR!   stack: 'Error: EPERM: operation not permitted, unlink \'D:\\PROGRAMME PROJECT\\Blog\\node_modules\\.staging\\swig-templates-c7f20818\\package.json\'',</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR!   errno: -4048,</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR!   code: 'EPERM',</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR!   syscall: 'unlink',</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR!   path: 'D:\\PROGRAMME PROJECT\\Blog\\node_modules\\.staging\\swig-templates-c7f20818\\package.json',</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR!   parent: 'hexo' &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR!</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR! The operation was rejected by your operating system.</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR! It's possible that the file was already in use (by a text editor or antivirus),</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR! or that you lack permissions to access it.</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR!</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR! If you believe this might be a permissions issue, please double-check the</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR! permissions of the file and its containing directories, or try running</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm ERR! the command again as root/Administrator.</span></pre></td></tr></table></figure>
<p>&lt;/details&gt;</p>
<!-- well, let me delete the folder directily. -->
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm uninstall hexo-cli -g</span></pre></td></tr><tr><td class="code"><pre><span class="line">npm uninstall hexo -g</span></pre></td></tr></table></figure>
<h1 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h1><p>Once a again, I open the <a href="https://blog.csdn.net/gdutxiaoxu/article/details/53576018" target="_blank" rel="noopener">tutorial blog</a>.</p>
<p>this time I open pewershell in admin.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cnpm install hexo-cli -g</span></pre></td></tr><tr><td class="code"><pre><span class="line">hexo -v</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> hexo-cli: 1.1.0</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> os: Windows_NT 10.0.18362 win32 x64</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> http_parser: 2.7.0</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> node: 8.9.3</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> v8: 6.1.534.48</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> uv: 1.15.0</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> zlib: 1.2.11</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> ares: 1.10.1-DEV</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> modules: 57</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> nghttp2: 1.25.0</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> openssl: 1.0.2n</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> icu: 59.1</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> unicode: 9.0</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> cldr: 31.0.1</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> tz: 2017b</span></span></pre></td></tr></table></figure>
<p>But I feel like that I just failed to uninstall hexo.</p>
<h1 id="Initialize-folder-of-blog"><a href="#Initialize-folder-of-blog" class="headerlink" title="Initialize folder of blog"></a>Initialize folder of blog</h1><p>make a folder for blog files.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir BenatureBlog</span></pre></td></tr><tr><td class="code"><pre><span class="line">cd BenatureBlog</span></pre></td></tr></table></figure>
<p>initialize hexo (this may take a bit long time  )</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo init</span></pre></td></tr><tr><td class="code"><pre><span class="line">cnpm install</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo g</span></pre></td></tr><tr><td class="code"><pre><span class="line">hexo s</span></pre></td></tr><tr><td class="code"><pre><span class="line">hexo d</span></pre></td></tr></table></figure>
<h1 id="Configure"><a href="#Configure" class="headerlink" title="Configure"></a>Configure</h1><p>then modify the <code>_config.yml</code> to configure.</p>
<h2 id="Mathjax"><a href="#Mathjax" class="headerlink" title="Mathjax"></a>Mathjax</h2><p>find mathjax config in <code>blog\themes\next\_config.yml</code> and modify</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cnpm uninstall hexo-renderer-marked --save</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> npm ERR! code EINVALIDTAGNAME</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> npm ERR! Invalid tag name <span class="string">"^undefined"</span>: Tags may not have any characters that encodeURIComponent encodes.</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> npm ERR! A complete <span class="built_in">log</span> of this run can be found <span class="keyword">in</span>:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> npm ERR!     C:\Users\ben04\AppData\Roaming\npm-cache\_logs\2019-08-13T02_04_50_890Z-debug.log</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">cnpm i hexo-renderer-pandoc --save</span></pre></td></tr><tr><td class="code"><pre><span class="line">hexo clean</span></pre></td></tr></table></figure>
<p>As I fialed to uninstall some packages, so I go to <code>/node_modules/</code> and found the coresspond folder and deleted it directily.</p>
<p>then go to <code>node_modules\kramed\lib\rules\inline.js</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//escape: /^\\([\\`*&#123;&#125;\[\]()#$+\-.!_&gt;])/,</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="built_in">escape</span>: <span class="regexp">/^\\([`*\[\]()#$+\-.!_&gt;])/</span>,</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">//em: /^\b_((?:__|[\s\S])+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">em: <span class="regexp">/^\*((?:\*\*|[\s\S])+?)\*(?!\*)/</span>,</span></pre></td></tr></table></figure>
<h1 id="img"><a href="#img" class="headerlink" title="img"></a>img</h1><p><a href="https://benature.github.io/2018/03/26/Hexo-Configuration/">https://benature.github.io/2018/03/26/Hexo-Configuration/</a></p>
<h1 id="RSS"><a href="#RSS" class="headerlink" title="RSS"></a>RSS</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cnpm install hexo-generator-feed --save</span></pre></td></tr></table></figure>
<h1 id="Search"><a href="#Search" class="headerlink" title="Search"></a>Search</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cnpm install hexo-generator-searchdb --save</span></pre></td></tr></table></figure>
<hr>
<p><strong>Reference</strong>:</p>
<ul>
<li><a href="https://blog.csdn.net/whjkm/article/details/81088518" target="_blank" rel="noopener">update hexo</a></li>
<li><a href="https://blog.csdn.net/qq_39629050/article/details/80863319" target="_blank" rel="noopener">permission missing in windows</a></li>
<li><a href="https://blog.csdn.net/gdutxiaoxu/article/details/53576018" target="_blank" rel="noopener">build a hexo blog hand by hand</a></li>
<li><a href="https://hexo-guide.readthedocs.io/zh_CN/latest/theme/[NexT]%E9%85%8D%E7%BD%AEMathJax.html" target="_blank" rel="noopener">mathjax</a></li>
<li><a href="https://walesexcitedmei.github.io/2018/08/30/HEXO-NexT-%E4%B8%BB%E9%A2%98%E6%8F%90%E9%AB%98%E5%8D%9A%E5%AE%A2%E9%A2%9C%E5%80%BC/" target="_blank" rel="noopener">RSS</a></li>
<li><a href="https://www.npmjs.cn/getting-started/updating-global-packages/" target="_blank" rel="noopener">npm</a></li>
</ul>
]]></content>
      <tags>
        <tag>配置</tag>
      </tags>
  </entry>
  <entry>
    <title>Mathematica文档记录</title>
    <url>/others/mathematica-docs/</url>
    <content><![CDATA[<p><a href="https://reference.wolfram.com/language/tutorial/IntroductionToManipulate.html.zh?source=footer" target="_blank" rel="noopener">滑块控制变量</a></p>
]]></content>
      <tags>
        <tag>资源</tag>
        <tag>Mathematica</tag>
      </tags>
  </entry>
  <entry>
    <title>Reinforcement Learning</title>
    <url>/others/Reinforcement-learning/</url>
    <content><![CDATA[<p>Reinforcement Learning</p>
<a id="more"></a>
<h1 id="Deep-Q-Learning"><a href="#Deep-Q-Learning" class="headerlink" title="Deep Q-Learning"></a>Deep Q-Learning</h1><ul>
<li><a href="https://morvanzhou.github.io/tutorials/machine-learning/reinforcement-learning/4-1-A-DQN/" target="_blank" rel="noopener">莫烦学Python</a></li>
<li>知乎专栏入门教程<ul>
<li><a href="https://zhuanlan.zhihu.com/p/21262246?refer=intelligentunit" target="_blank" rel="noopener">DQN 从入门到放弃1 DQN与增强学习</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/21292697?refer=intelligentunit" target="_blank" rel="noopener">DQN 从入门到放弃2 增强学习与MDP</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/21340755" target="_blank" rel="noopener">DQN 从入门到放弃3 价值函数与Bellman方程</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/21378532?refer=intelligentunit" target="_blank" rel="noopener">DQN 从入门到放弃4 动态规划与Q-Learning</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/21421729?refer=intelligentunit" target="_blank" rel="noopener">DQN从入门到放弃5 深度解读DQN算法</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/21547911" target="_blank" rel="noopener">DQN从入门到放弃6 DQN的各种改进</a><br>给出了算法进一步优化的相关文章.</li>
</ul>
</li>
</ul>
<h1 id="Policy-Gradient"><a href="#Policy-Gradient" class="headerlink" title="Policy Gradient"></a>Policy Gradient</h1><ul>
<li><a href="https://morvanzhou.github.io/tutorials/machine-learning/reinforcement-learning/5-1-A-PG/" target="_blank" rel="noopener">莫烦学Python</a></li>
<li>知乎专栏<ul>
<li><a href="https://zhuanlan.zhihu.com/p/21725498" target="_blank" rel="noopener">深度增强学习之Policy Gradient方法1</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/26882898" target="_blank" rel="noopener">DRL之Policy Gradient, Deterministic Policy Gradient与Actor Critic</a></li>
</ul>
</li>
</ul>
]]></content>
      <tags>
        <tag>资源</tag>
        <tag>ML</tag>
      </tags>
  </entry>
  <entry>
    <title>学术资源整合</title>
    <url>/others/resource-academic/</url>
    <content><![CDATA[<p>学术资源整合</p>
<a id="more"></a>
<h1 id="Website"><a href="#Website" class="headerlink" title="Website"></a>Website</h1><ul>
<li><a href="http://www.feynmanlectures.caltech.edu/" target="_blank" rel="noopener">费曼物理学讲义</a></li>
<li><a href="https://sealzhang.tk/my_pages/academic-resources" target="_blank" rel="noopener">张楚珩的仓库</a>: 物理 &amp; 计算机</li>
<li><a href="https://periodictable.com/index.html" target="_blank" rel="noopener">信息很全的元素周期表</a>: 查各种同位素的信息.</li>
<li>Github: 高校资料：<ul>
<li><a href="https://github.com/QSCTech/zju-icicles" target="_blank" rel="noopener">浙江大学课程攻略共享计划</a></li>
<li><a href="https://github.com/PKUanonym/REKCARC-TSC-UHT" target="_blank" rel="noopener">清华大学计算机系课程攻略</a></li>
<li><a href="https://github.com/CoolPhilChen/SJTU-Courses" target="_blank" rel="noopener">上海交通大学课程资料分享</a></li>
</ul>
</li>
</ul>
<h1 id="一些有用的应用等"><a href="#一些有用的应用等" class="headerlink" title="一些有用的应用等"></a>一些有用的应用等</h1><h2 id="Prism8"><a href="#Prism8" class="headerlink" title="Prism8"></a>Prism8</h2><p><a href="https://www.graphpad.com/scientific-software/prism/" target="_blank" rel="noopener">https://www.graphpad.com/scientific-software/prism/</a></p>
<p>Prism 8是一款专门为科研工作者制作的专业作图和分析工具。</p>
<p>它可不仅仅像Excel 那么简单，它有8 种专业的数据图表格式。它里面还内置了很多专业的分析库。比如说非线性回归，单因子分析等等。当然各种专业图表它都可以绘制。</p>
<p>它还支持一键回归分析，直接就能显示结果和函数参数表。</p>
<p>同时还可以创建模板，以便以后使用也特别容易方便。</p>
<p>它还可以一键导出出版物的格式。</p>
<p>支持Windows 和MAC。</p>
]]></content>
      <categories>
        <category>Useful</category>
      </categories>
      <tags>
        <tag>资源</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows开机自启程序</title>
    <url>/devices/Windows-quick-run/</url>
    <content><![CDATA[<p>开机自启, 高效生活.</p>
<a id="more"></a>
<p><code>此电脑</code>右键<code>管理</code></p>
<p><img src="/devices/Windows-quick-run/manage.PNG" alt="管理"></p>
<p>对任务进行命名, 可以做备注</p>
<p><img src="/devices/Windows-quick-run/name.PNG" alt="命名"></p>
<p>可以设置每天的特定时间, 或者设置开机自启<br><img src="/devices/Windows-quick-run/time.PNG" alt="触发器"></p>
<p>操作默认即可<br><img src="/devices/Windows-quick-run/operate.PNG" alt="操作"></p>
<p>可以直接运行Python程序, 或者在浏览中启动某一软件.<br><img src="/devices/Windows-quick-run/run.PNG" alt="运行"></p>
<p>最后完成, 勾选选框, 打开任务属性, 可以做进一步配置.<br><img src="/devices/Windows-quick-run/finish.PNG" alt="完成"></p>
]]></content>
      <tags>
        <tag>配置</tag>
        <tag>效率</tag>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>WSL之Ubuntu手札</title>
    <url>/linux/wsl-ubuntu-note/</url>
    <content><![CDATA[<p>Linux with Windows</p>
<a id="more"></a>
<h1 id="1-基础命令"><a href="#1-基础命令" class="headerlink" title="1. 基础命令"></a>1. 基础命令</h1><h2 id="1-1-查询版本号"><a href="#1-1-查询版本号" class="headerlink" title="1.1. 查询版本号"></a>1.1. 查询版本号</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">muyi@MUYI-DESKTOP:~$ cat /etc/issue</span></pre></td></tr><tr><td class="code"><pre><span class="line">Ubuntu 18.04.2 LTS \n \l</span></pre></td></tr></table></figure>
<h1 id="2-报错处理记录"><a href="#2-报错处理记录" class="headerlink" title="2. 报错处理记录"></a>2. 报错处理记录</h1><h2 id="2-1-Unable-to-locate-package-python3-pip"><a href="#2-1-Unable-to-locate-package-python3-pip" class="headerlink" title="2.1. Unable to locate package python3-pip"></a>2.1. Unable to locate package python3-pip</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">muyi@MUYI-DESKTOP:~$ sudo apt install python3-pip</span></pre></td></tr><tr><td class="code"><pre><span class="line">Reading package lists... Done</span></pre></td></tr><tr><td class="code"><pre><span class="line">Building dependency tree</span></pre></td></tr><tr><td class="code"><pre><span class="line">Reading state information... Done</span></pre></td></tr><tr><td class="code"><pre><span class="line">E: Unable to locate package python3-pip</span></pre></td></tr></table></figure>
<p><a href="https://askubuntu.com/questions/1061486/unable-to-locate-package-python-pip-when-trying-to-install-from-fresh-18-04-in" target="_blank" rel="noopener">解决:</a></p>
<p>编辑<code>/etc/apt/sources.list</code>文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo nano /etc/apt/sources.list</span></pre></td></tr></table></figure>
<p>添加<code>universe</code>在每行最后, 如</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deb http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu bionic main universe</span></pre></td></tr><tr><td class="code"><pre><span class="line">deb http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu bionic-security main universe </span></pre></td></tr><tr><td class="code"><pre><span class="line">deb http:&#x2F;&#x2F;archive.ubuntu.com&#x2F;ubuntu bionic-updates main universe</span></pre></td></tr></table></figure>
<p><code>ctrl</code>+<code>C</code>后<code>enter</code>保存退出</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt update</span></pre></td></tr><tr><td class="code"><pre><span class="line">sudo apt install python3-pip</span></pre></td></tr></table></figure>
<p>成功</p>
]]></content>
      <tags>
        <tag>配置</tag>
        <tag>WSL</tag>
      </tags>
  </entry>
  <entry>
    <title>TOEFL考记</title>
    <url>/others/TOEFL-exam/</url>
    <content><![CDATA[<p>(以广外大学城考点为例)</p>
<a id="more"></a>
<p>进入实验楼前, 在门口会检查一次身份证, 然后签到, 给你一份协议书.</p>
<p>进楼后, 在一个窗口放书包, 然后领一个手环, 手环上的号码对应考点帮你保管的包包. 所以要把自己要带的东西都从书包拿出来:</p>
<ul>
<li>身份证</li>
<li>水</li>
<li>食物(最好是巧克力之类)</li>
</ul>
<p>然后进入一间课室签知情协议书. 签完后过一次安检, 上楼.</p>
<p>考场外有储物柜, 放下自己带的所有东西, 如水和食物.<br>在考场门口再一次安检, 把协议书交给门口的老师, 然后进考场.<br>进考场后先在讲台前滴身份证, 拍照, 随后老师领你到相应的座位坐下.</p>
<p>考场环境: 每两台电脑坐一人, 其间有隔板阻挡, 正常情况看不到周围人, 除非你脑袋往后方张望.<br>考场提供纸笔, 笔是一节一节的可换铅笔, 共两只, 草稿纸是三张蓝色规格可能是B5的纸. 全场考下来我还勉强够用.</p>
<p>老师示意确认屏幕上的考生信息后, 在下一个页面输入耳机上的号码, 然后等老师来输入考试密码.<br>随后试麦调音量, 然后直接可以开始考试做阅读了, 当时我还懵懵的等了几分钟, 所以后面整体会比别人晚结束交卷.  </p>
<p>reading碰到了加试, 其实从考试时间的01:20:00就看得出来了, 老老实实做吧.</p>
<p>听力结束后有10分钟的break, 可以自行离开课室出去休息(洗手间+喝水润喉), 重新进入考场需要重复安检+滴身份证+拍照.</p>
<p>关于speaking, 有人会说话很大声, 而且耳机很菜, 所以迟点开始可能比较好, 只要最后不怕全场只听到自己声音尴尬就好.</p>
<p>最后考完writing, 系统让你选择report成绩还是cancel掉. 结束后拿起纸笔交到讲台, 再给老师确认下身份证, 即可离场.</p>
<p>拿回书包后, 就会有一群机构的广告围着你, 自己看着办吧…</p>
]]></content>
  </entry>
  <entry>
    <title>Windows效率</title>
    <url>/devices/Windows-efficiency/</url>
    <content><![CDATA[<p>别浪费宝贝</p>
<a id="more"></a>
<ul>
<li><a href="https://sspai.com/post/41411" target="_blank" rel="noopener">少数派流批</a></li>
<li><p><a href="https://blog.csdn.net/shuzfan/article/details/78118612" target="_blank" rel="noopener">开机自启(管理员权限)</a></p>
</li>
<li><p>Ditto</p>
</li>
<li>Qttabbar</li>
<li>Everything</li>
<li>Wox</li>
<li>Capslock+</li>
<li>Seer</li>
<li>Snipaste</li>
<li>Listary</li>
<li>ConEmu</li>
<li>Deskpins</li>
</ul>
]]></content>
      <tags>
        <tag>配置</tag>
        <tag>效率</tag>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows安装ProjectQ</title>
    <url>/python-code/Python-ProjectQ-Install/</url>
    <content><![CDATA[<p>安装C++编译的ProjectQ的曲折之路</p>
<a id="more"></a>
<h1 id="官网指路"><a href="#官网指路" class="headerlink" title="官网指路"></a>官网指路</h1><p>根据官网的<a href="https://projectq.readthedocs.io/en/latest/tutorials.html#detailed-instructions-and-os-specific-hints" target="_blank" rel="noopener">Tutorial</a></p>
<blockquote>
<p>It is easiest to install a pre-compiled version of Python, including numpy and many more useful packages. One way to do so is using, e.g., the Python3.5 installers from python.org or ANACONDA. Installing ProjectQ right away will succeed for the (slow) Python simulator (i.e., with the –without-cppsimulator flag).<br>For a compiled version of the simulator, install the Visual C++ Build Tools and the Microsoft Windows SDK prior to doing a pip install. The built simulator will not support multi-threading due to the limited OpenMP support of msvc.<br>Should you want to run multi-threaded simulations, you can install a compiler which supports newer OpenMP versions, such as MinGW GCC and then manually build the C++ simulator with OpenMP enabled.  </p>
</blockquote>
<p>仅仅是Python的安装的话会slow, 那么还是尽可能去安装C++编译的吧.<br>根据指导安装C++编译的需要两个依赖:</p>
<ul>
<li><a href="https://go.microsoft.com/fwlink/?LinkId=691126" target="_blank" rel="noopener">Visual C++ Build Tools</a></li>
<li><a href="https://developer.microsoft.com/en-us/windows/downloads/windows-10-sdk" target="_blank" rel="noopener">Microsoft Windows SDK</a></li>
</ul>
<p>其中Microsoft Windows SDK还需要先安装VS2019</p>
<p>好的, 进过漫长的一夜后, 这两个大家伙终于装好了, 自己电脑又少了几个G的内存.  </p>
<h1 id="还会有个报错"><a href="#还会有个报错" class="headerlink" title="还会有个报错"></a>还会有个报错</h1><p>但是, 这样子再去<code>pip install projectq</code>的话还是会报错</p>
<p>其中有一条报错信息长这样</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">error: command 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\BIN\\x86_amd64\\link.exe' failed with exit status 1158</span></pre></td></tr></table></figure>
<p>相对的就搜到stackoverflow有<a href="https://stackoverflow.com/questions/43858836/python-installing-clarifai-vs14-0-link-exe-failed-with-exit-status-1158" target="_blank" rel="noopener">一条贴</a></p>
<p>还需要多做两步事情:</p>
<ol>
<li>将<code>C:\Program Files (x86)\Windows Kits\10\bin\x64</code>添加到环境变量中</li>
<li>将<code>C:\Program Files (x86)\Windows Kits\8.1\bin\x86</code>中的<code>rc.exe</code>和<code>rcdll.dll</code>复制到<code>C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\bin</code></li>
</ol>
<h1 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h1><p>重新<code>pip install projectq</code>后万事大吉</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Looking in indexes: https://pypi.tuna.tsinghua.edu.cn/simple</span></pre></td></tr><tr><td class="code"><pre><span class="line">Collecting projectq</span></pre></td></tr><tr><td class="code"><pre><span class="line">  Using cached https://pypi.tuna.tsinghua.edu.cn/packages/2a/3e/138ed37bcc17a5a6903369ce22f665481685b4c66edbfeb1217e593a6f1e/projectq-0.4.2.tar.gz</span></pre></td></tr><tr><td class="code"><pre><span class="line">Requirement already satisfied: numpy in d:\muyi program files\anaconda\lib\site-packages (from projectq) (1.14.6)</span></pre></td></tr><tr><td class="code"><pre><span class="line">Requirement already satisfied: future in d:\muyi program files\anaconda\lib\site-packages (from projectq) (0.17.1)</span></pre></td></tr><tr><td class="code"><pre><span class="line">Requirement already satisfied: pytest&gt;=3.1 in d:\muyi program files\anaconda\lib\site-packages (from projectq) (4.0.2)</span></pre></td></tr><tr><td class="code"><pre><span class="line">Requirement already satisfied: pybind11&gt;=2.2.3 in d:\muyi program files\anaconda\lib\site-packages (from projectq) (2.2.4)</span></pre></td></tr><tr><td class="code"><pre><span class="line">Requirement already satisfied: requests in d:\muyi program files\anaconda\lib\site-packages (from projectq) (2.18.4)</span></pre></td></tr><tr><td class="code"><pre><span class="line">Requirement already satisfied: scipy in d:\muyi program files\anaconda\lib\site-packages (from projectq) (1.1.0)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">Requirement already satisfied: networkx in d:\muyi program files\anaconda\lib\site-packages (from projectq) (2.2)</span></pre></td></tr><tr><td class="code"><pre><span class="line">Requirement already satisfied: py&gt;=1.5.0 in d:\muyi program files\anaconda\lib\site-packages (from pytest&gt;=3.1-&gt;projectq) (1.7.0)</span></pre></td></tr><tr><td class="code"><pre><span class="line">Requirement already satisfied: six&gt;=1.10.0 in d:\muyi program files\anaconda\lib\site-packages (from pytest&gt;=3.1-&gt;projectq) (1.12.0)</span></pre></td></tr><tr><td class="code"><pre><span class="line">Requirement already satisfied: setuptools in d:\muyi program files\anaconda\lib\site-packages (from pytest&gt;=3.1-&gt;projectq) (40.6.3)</span></pre></td></tr><tr><td class="code"><pre><span class="line">Requirement already satisfied: attrs&gt;=17.4.0 in d:\muyi program files\anaconda\lib\site-packages (from pytest&gt;=3.1-&gt;projectq) (18.2.0)</span></pre></td></tr><tr><td class="code"><pre><span class="line">Requirement already satisfied: more-itertools&gt;=4.0.0 in d:\muyi program files\anaconda\lib\site-packages (from pytest&gt;=3.1-&gt;projectq) (4.3.0)</span></pre></td></tr><tr><td class="code"><pre><span class="line">Requirement already satisfied: atomicwrites&gt;=1.0 in d:\muyi program files\anaconda\lib\site-packages (from pytest&gt;=3.1-&gt;projectq) (1.2.1)</span></pre></td></tr><tr><td class="code"><pre><span class="line">Requirement already satisfied: pluggy&gt;=0.7 in d:\muyi program files\anaconda\lib\site-packages (from pytest&gt;=3.1-&gt;projectq) (0.8.0)</span></pre></td></tr><tr><td class="code"><pre><span class="line">Requirement already satisfied: colorama in d:\muyi program files\anaconda\lib\site-packages (from pytest&gt;=3.1-&gt;projectq) (0.4.1)</span></pre></td></tr><tr><td class="code"><pre><span class="line">Requirement already satisfied: idna&lt;2.7,&gt;=2.5 in d:\muyi program files\anaconda\lib\site-packages (from requests-&gt;projectq) (2.6)</span></pre></td></tr><tr><td class="code"><pre><span class="line">Requirement already satisfied: urllib3&lt;1.23,&gt;=1.21.1 in d:\muyi program files\anaconda\lib\site-packages (from requests-&gt;projectq) (1.22)</span></pre></td></tr><tr><td class="code"><pre><span class="line">Requirement already satisfied: certifi&gt;=2017.4.17 in d:\muyi program files\anaconda\lib\site-packages (from requests-&gt;projectq) (2018.11.29)</span></pre></td></tr><tr><td class="code"><pre><span class="line">Requirement already satisfied: chardet&lt;3.1.0,&gt;=3.0.2 in d:\muyi program files\anaconda\lib\site-packages (from requests-&gt;projectq) (3.0.4)</span></pre></td></tr><tr><td class="code"><pre><span class="line">Requirement already satisfied: decorator&gt;=4.3.0 in d:\muyi program files\anaconda\lib\site-packages (from networkx-&gt;projectq) (4.3.0)</span></pre></td></tr><tr><td class="code"><pre><span class="line">Building wheels for collected packages: projectq</span></pre></td></tr><tr><td class="code"><pre><span class="line">  Running setup.py bdist_wheel for projectq ... done</span></pre></td></tr><tr><td class="code"><pre><span class="line">  Stored in directory: C:\Users\ben04\AppData\Local\pip\Cache\wheels\76\40\bc\6b50013be49578da2fc23385b6b283108407eeb6f6dbbc487b</span></pre></td></tr><tr><td class="code"><pre><span class="line">Successfully built projectq</span></pre></td></tr><tr><td class="code"><pre><span class="line">Installing collected packages: projectq</span></pre></td></tr><tr><td class="code"><pre><span class="line">Successfully installed projectq-0.4.2</span></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>配置</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>conda换回默认源</title>
    <url>/python-code/conda-source/</url>
    <content><![CDATA[<p>conda 换回默认源</p>
<a id="more"></a>
<p>报错信息:<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Collecting package metadata: failed</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">UnavailableInvalidChannel: The channel is not accessible or is invalid.</span></pre></td></tr><tr><td class="code"><pre><span class="line">  channel name: anaconda&#x2F;pkgs&#x2F;free</span></pre></td></tr><tr><td class="code"><pre><span class="line">  channel url: https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;pkgs&#x2F;free</span></pre></td></tr><tr><td class="code"><pre><span class="line">  error code: 404</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">You will need to adjust your conda configuration to proceed.</span></pre></td></tr><tr><td class="code"><pre><span class="line">Use &#96;conda config --show channels&#96; to view your configuration&#39;s current state,</span></pre></td></tr><tr><td class="code"><pre><span class="line">and use &#96;conda config --show-sources&#96; to view config file locations.</span></pre></td></tr></table></figure></p>
<p>清华镜像居然404了, 那就只好换回默认源先了.</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">conda config --remove-key channels</span></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>配置</tag>
      </tags>
  </entry>
  <entry>
    <title>Git清理瘦身</title>
    <url>/git/git-history-delete/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git gc --prune&#x3D;now</span></pre></td></tr></table></figure>
<a id="more"></a>
<p>找出最大的三个文件<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git verify-pack -v .git&#x2F;objects&#x2F;pack&#x2F;*.idx | sort -k 3 -n | tail -3</span></pre></td></tr></table></figure></p>
<p>查看大文件<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git rev-list --objects --all | grep c43a8da</span></pre></td></tr></table></figure></p>
<p>移除对大文件的引用<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git filter-branch --force --index-filter &quot;git rm --cached --ignore-unmatch &#39;data&#x2F;bigfile&#39;&quot;  --prune-empty --tag-name-filter cat -- --all</span></pre></td></tr></table></figure></p>
<p>repack<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git for-each-ref --format&#x3D;&#39;delete %(refname)&#39; refs&#x2F;original | git update-ref --stdin</span></pre></td></tr><tr><td class="code"><pre><span class="line">git reflog expire --expire&#x3D;now --all</span></pre></td></tr><tr><td class="code"><pre><span class="line">git gc --prune&#x3D;now</span></pre></td></tr></table></figure></p>
<p>查看pack的空间使用情况<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git count-objects -v</span></pre></td></tr></table></figure></p>
<p><strong>如果不止一个人使用仓库，需要其他成员删除本地库并重新 clone 远端的库，同时以上操作后不应有其他人 push 到远端，否则白忙活</strong></p>
<hr>
<p>参考资料:</p>
<ul>
<li><a href="https://juejin.im/post/5be995c25188250fa8358f9d" target="_blank" rel="noopener">https://juejin.im/post/5be995c25188250fa8358f9d</a></li>
<li><a href="https://www.zhihu.com/question/29769130" target="_blank" rel="noopener">https://www.zhihu.com/question/29769130</a></li>
<li><a href="https://www.jianshu.com/p/17e5adf47da5" target="_blank" rel="noopener">https://www.jianshu.com/p/17e5adf47da5</a></li>
<li><a href="https://git-scm.com/book/zh/v1/Git-%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86-%E7%BB%B4%E6%8A%A4%E5%8F%8A%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D" target="_blank" rel="noopener">https://git-scm.com/book/zh/v1/Git-%E5%86%85%E9%83%A8%E5%8E%9F%E7%90%86-%E7%BB%B4%E6%8A%A4%E5%8F%8A%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D</a></li>
</ul>
]]></content>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>Termux</title>
    <url>/linux/termux-note/</url>
    <content><![CDATA[<p>一些基本技能、知识的链接存储</p>
<a id="more"></a>
<h1 id="Termux-Configuration"><a href="#Termux-Configuration" class="headerlink" title="Termux Configuration"></a>Termux Configuration</h1><h2 id="SSH"><a href="#SSH" class="headerlink" title="SSH"></a>SSH</h2><h3 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">apt install openssh</span></pre></td></tr></table></figure>
<h3 id="Run"><a href="#Run" class="headerlink" title="Run"></a>Run</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sshd</span></pre></td></tr></table></figure>
<h3 id="查看手机ip地址"><a href="#查看手机ip地址" class="headerlink" title="查看手机ip地址"></a>查看手机ip地址</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ifconfig</span></pre></td></tr></table></figure>
<p>看<code>wlan0</code>下的<code>inet</code>.</p>
<p>reference:</p>
<ul>
<li><a href="https://www.cnblogs.com/abeen/p/9911987.html" target="_blank" rel="noopener">https://www.cnblogs.com/abeen/p/9911987.html</a></li>
<li><a href="http://blog.lujun9972.win/blog/2018/01/24/%E4%BD%BF%E7%94%A8termux%E6%8A%8Aandroid%E6%89%8B%E6%9C%BA%E5%8F%98%E6%88%90ssh%E6%9C%8D%E5%8A%A1%E5%99%A8/index.html" target="_blank" rel="noopener">http://blog.lujun9972.win/blog/2018/01/24/%E4%BD%BF%E7%94%A8termux%E6%8A%8Aandroid%E6%89%8B%E6%9C%BA%E5%8F%98%E6%88%90ssh%E6%9C%8D%E5%8A%A1%E5%99%A8/index.html</a></li>
</ul>
<h2 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h2><p><a href="https://wiki.termux.com/wiki/Ubuntu" target="_blank" rel="noopener">https://wiki.termux.com/wiki/Ubuntu</a></p>
<h2 id="Others"><a href="#Others" class="headerlink" title="Others"></a>Others</h2><p><a href="https://yadominjinta.github.io/2018/07/30/GUI-on-termux.html" target="_blank" rel="noopener">https://yadominjinta.github.io/2018/07/30/GUI-on-termux.html</a></p>
<p><a href="https://www.sqlsec.com/2018/05/termux.html#toc-heading-84" target="_blank" rel="noopener">https://www.sqlsec.com/2018/05/termux.html#toc-heading-84</a></p>
]]></content>
      <tags>
        <tag>配置</tag>
        <tag>Termux</tag>
      </tags>
  </entry>
  <entry>
    <title>基本知识技能传送门</title>
    <url>/others/basic-skill-url/</url>
    <content><![CDATA[<p>一些基本技能、知识的链接存储</p>
<a id="more"></a>
<ul>
<li><a href="https://www.jianshu.com/p/815788f4b01d" target="_blank" rel="noopener">Markdown</a></li>
<li>Github  <ul>
<li><a href="https://www.jianshu.com/p/ee548dfb7c45" target="_blank" rel="noopener">注册、desktop下载</a>  </li>
<li><a href="https://www.jianshu.com/p/1e45b93bd593" target="_blank" rel="noopener">desktop简单操作</a><br>  注: 该教程内使用vs code编辑器,自己操作时可以选择自己熟悉的编辑器.<br>  <strong>但还是推荐<a href="https://code.visualstudio.com/" target="_blank" rel="noopener">vs code</a>!</strong></li>
</ul>
</li>
<li><a href="https://zhuanlan.zhihu.com/p/38178015" target="_blank" rel="noopener">LaTeX + VS Code</a></li>
</ul>
]]></content>
      <tags>
        <tag>入门教程</tag>
        <tag>资源</tag>
      </tags>
  </entry>
  <entry>
    <title>一些NFSC资料</title>
    <url>/latex/NFSC-Reference/</url>
    <content><![CDATA[<p>一些NFSC资料</p>
<a id="more"></a>
<ul>
<li><a href="http://blog.sciencenet.cn/blog-69051-404572.html" target="_blank" rel="noopener">http://blog.sciencenet.cn/blog-69051-404572.html</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/36154523" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/36154523</a></li>
</ul>
]]></content>
  </entry>
  <entry>
    <title>LaTeX调用MATLAB代码</title>
    <url>/latex/LaTeX-CodeBlock-MATLAB/</url>
    <content><![CDATA[<p>使用<code>mcode</code>宏包</p>
<a id="more"></a>
<h1 id="安装宏包"><a href="#安装宏包" class="headerlink" title="安装宏包"></a>安装宏包</h1><p>从<a href="https://ww2.mathworks.cn/matlabcentral/fileexchange/8015-m-code-latex-package" target="_blank" rel="noopener">MathWorks</a>下载</p>
<p>解压并把文件夹放到<code>xxxxx\tex\latex</code>中</p>
<p>TexLive的新增宏包方法可参考<a href="https://benature.github.io/2019/03/31/TexLive-refresh-FNDB/">此文</a></p>
<h1 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h1><p>调用宏包<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\usepackage[framed,numbered,autolinebreaks,useliterate]&#123;mcode&#125;</span></pre></td></tr></table></figure></p>
<p>引用代码<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">\begin&#123;lstlisting&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        % Plot function f(x) &#x3D; 2*x^3 - x - 2</span></pre></td></tr><tr><td class="code"><pre><span class="line">	ezplot(&#39;2*x^3-x-2&#39;,[0, 2])</span></pre></td></tr><tr><td class="code"><pre><span class="line">	hold on;</span></pre></td></tr><tr><td class="code"><pre><span class="line">	plot([0,2],[0,0],&#39;r&#39;)</span></pre></td></tr><tr><td class="code"><pre><span class="line">\end&#123;lstlisting&#125;</span></pre></td></tr></table></figure></p>
<hr>
<p>参考资料:</p>
<ul>
<li><a href="https://blog.csdn.net/lqzdreamer/article/details/79908585" target="_blank" rel="noopener">https://blog.csdn.net/lqzdreamer/article/details/79908585</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/33300465" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/33300465</a></li>
</ul>
]]></content>
      <tags>
        <tag>LaTeX</tag>
        <tag>MATLAB</tag>
      </tags>
  </entry>
  <entry>
    <title>TexLive手动更新FNDB</title>
    <url>/latex/TexLive-refresh-FNDB/</url>
    <content><![CDATA[<p>Refresh FNDB</p>
<a id="more"></a>
<p>比如说从<a href="https://ww2.mathworks.cn/matlabcentral/fileexchange/8015-m-code-latex-package" target="_blank" rel="noopener">MathWorks</a>安装了一个宏包, 需要在TexLive中使用</p>
<p>首先将整个下载的文件夹放到<code>C:\texlive\2017\texmf-dist\tex\latex</code>中</p>
<p>然后在tex里面调用宏包, 会报错, 因为没有更新数据库</p>
<p>在开始菜单栏打开<code>Tex Live Manager</code><br>点击<code>操作</code>-&gt;<code>更新文件名数据库</code></p>
<p>重新编译tex, 没有报错, 成功!</p>
<hr>
<p>参考资料:</p>
<ul>
<li><a href="https://www.dickimaw-books.com/latex/novices/html/texhash.html" target="_blank" rel="noopener">https://www.dickimaw-books.com/latex/novices/html/texhash.html</a></li>
</ul>
]]></content>
      <tags>
        <tag>LaTeX</tag>
        <tag>TexLive</tag>
      </tags>
  </entry>
  <entry>
    <title>Reflection and Trasmission</title>
    <url>/others/Optics-Reflection-and-Trasmission/</url>
    <content><![CDATA[<ol>
<li>Draw out the <strong>Reflection</strong> and <strong>Trasmission</strong>.</li>
<li>Derive the <strong>phase shift</strong> in complex condition.</li>
</ol>
<a id="more"></a>
<h1 id="Before-we-begin"><a href="#Before-we-begin" class="headerlink" title="Before we begin"></a>Before we begin</h1><p>This is the first time that I write a blog in English, please forgive me if there is any wrong and tell me if you like. :)</p>
<p>Then let’s begin.</p>
<p>I suppose that we have already know those equations.</p>
<h2 id="Fresnel-Equations"><a href="#Fresnel-Equations" class="headerlink" title="Fresnel Equations"></a>Fresnel Equations</h2><script type="math/tex; mode=display">
\begin{align} 
r_{\mathrm{v}} &=\frac{n_i \cos \theta_{\mathrm{i}}-n_t \cos \theta_{\mathrm{t}}}{n_i \cos \theta_{\mathrm{i}}+n_t \cos \theta_{\mathrm{t}}} \\ 
r_{\mathrm{p}} &=\frac{n_t \cos \theta_{\mathrm{i}}-n_i \cos \theta_{\mathrm{t}}}{n_t \cos \theta_{\mathrm{i}}+n_i \cos \theta_{\mathrm{t}}} \\ 
t_{\mathrm{v}} &=\frac{2 n_i \cos \theta_{\mathrm{i}}}{n_i \cos \theta_{\mathrm{i}}+n_t \cos \theta_{\mathrm{t}}} \\ 
t_{\mathrm{p}} &=\frac{2 n_i \cos \theta_{\mathrm{i}}}{n_t \cos \theta_{\mathrm{i}}+n_i \cos \theta_{\mathrm{t}}} 
\end{align}</script><h2 id="Snell-Law"><a href="#Snell-Law" class="headerlink" title="Snell Law"></a>Snell Law</h2><script type="math/tex; mode=display">
\begin{equation}
n_{i} \sin \theta_{i}=n_{t} \sin \theta_{t}
\end{equation}</script><h1 id="Draw-r-t-and-phase-shift-by-MATLAB"><a href="#Draw-r-t-and-phase-shift-by-MATLAB" class="headerlink" title="Draw $r$, $t$, and phase shift by MATLAB"></a>Draw $r$, $t$, and <em>phase shift</em> by MATLAB</h1><p><img src="/others/Optics-Reflection-and-Trasmission/RandT.svg" alt="Reflection and Trasmission"></p>
<h1 id="More"><a href="#More" class="headerlink" title="More"></a>More</h1><h2 id="Phase-shift-formula"><a href="#Phase-shift-formula" class="headerlink" title="Phase shift formula"></a>Phase shift formula</h2><p>By <code>Snell&#39;s Law,</code> we can change in this form,</p>
<script type="math/tex; mode=display">
\begin{equation}
\sin\theta_t = \frac{n_i}{n_t} \sin\theta_i = n_{it} \sin\theta_i
\end{equation}</script><p>If $n_t<n_i (n_{it}>1)$, electromagnetic wave transport from denser medium to more loosen medium, $\sin\theta_t$ may be bigger than 1, thus $\theta_t$ extend to complex. Then consider the complex condition.</n_i></p>
<script type="math/tex; mode=display">
\cos\theta_t = \sqrt{1-\sin^2\theta_t} = i \sqrt{\sin^2\theta_t - 1} = i\sqrt{n_{it}^2\sin^2\theta_i - 1}</script><p>By Fresnel Equations,</p>
<script type="math/tex; mode=display">
\begin{align}
\begin{split}
\tilde{r}_\perp 
& = \frac{n_i \cos\theta_i - n_t \cos\theta_t}{n_i \cos\theta_i + n_t \cos\theta_t}\\ 
& = \frac{n_{it} \cos\theta_i - i \sqrt{n_{it}^2\sin^2\theta_i - 1}}{n_{it} \cos\theta_i + i \sqrt{n_{it}^2\sin^2\theta_i - 1}}\\ 
& = \frac{\cos^2\theta_i - (\sin^2\theta_i - n_{ti}^2) - i \cdot 2\cos\theta_i \sqrt{\sin^2\theta_i - n_{ti}^2}  }{1 - n_{ti}^2}
\end{split}
\end{align}</script><p>Because $\sin\theta_t$ is complex, it can change in this shape.</p>
<script type="math/tex; mode=display">
\begin{align}
\begin{split}
\tilde{r}_\perp 
& = | \tilde{r}_\perp | e^{i \varphi_\perp} \\ 
& = | \tilde{r}_\perp | ( \cos\varphi_\perp + i \sin\varphi_\perp)
\end{split}
\end{align}</script><p>Combine two forms of $\tilde{r}_\perp​$,</p>
<script type="math/tex; mode=display">
\begin{align}
\cos\varphi_\perp &= \frac{\cos^2\theta_i - (\sin^2\theta_i - n_{ti}^2)}{1 - n_{ti}^2}\\ 
\sin\varphi_\perp &= \frac{- 2\cos\theta_i \sqrt{\sin^2\theta_i - n_{ti}^2}  }{1 - n_{ti}^2}
\end{align}</script><p><del>Observe the equations above and half-angle formula</del> (After Google),</p>
<script type="math/tex; mode=display">
\begin{equation}
\tan \frac{\alpha}{2}=\frac{\sin \alpha}{1+\cos \alpha}=\frac{1-\cos \alpha}{\sin \alpha}=\pm \sqrt{\frac{1-\cos \alpha}{1+\cos \alpha}}
\end{equation}</script><p>we can find out, </p>
<script type="math/tex; mode=display">
\begin{align}\begin{split}
\tan \frac{\varphi_\perp}{2} 
& = \frac{\sin \varphi_\perp}{1+\cos \varphi_\perp} \\ 
& = -\frac{2\cos\theta_i \sqrt{\sin^2\theta_i - n_{ti}^2}  }{(1-n_{ti}^2) + \cos^2\theta_i - (\sin^2\theta_i - n_{ti}^2)}\\ 
& = -\frac{\sqrt{\sin ^{2} \theta_{i}-n^{2}_{ti}}}{\cos \theta_{i}}\label{phiv}
\end{split}
\end{align}</script><p>The same, we can derive </p>
<script type="math/tex; mode=display">
\begin{equation}
\tan \frac{\varphi_{\parallel}}{2}=-\frac{\sqrt{\sin ^{2} \theta_{i}-n^{2}_{ti}}}{n^2_{ti}\cos \theta_{i}}
\end{equation}</script><p>Thus, the Phase Shift between vertical and parallel is </p>
<script type="math/tex; mode=display">
\begin{equation}
\Delta \varphi=\varphi_{\perp}-\varphi_{\parallel}=2 \arctan \frac{\cos \theta_{i} \sqrt{\sin ^{2} \theta_{i}-n^{2}_{ti}}}{\sin ^{2} \theta_{i}}
\end{equation}</script><h3 id="Confirm"><a href="#Confirm" class="headerlink" title="Confirm"></a>Confirm</h3><p>Compare the formula derived above and the <code>angle()</code> function in MATLAB, two curve overlap (blue and red), thus confirm that the formula is correct.</p>
<p><img src="/others/Optics-Reflection-and-Trasmission/transmission.svg" alt="phase shift formula"></p>
<h3 id="Something-more"><a href="#Something-more" class="headerlink" title="Something more"></a>Something more</h3><p>At first, I plot the figure directly,</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line">phi_v =  <span class="number">2</span>*<span class="built_in">atan</span>((<span class="built_in">sin</span>(theta_i).^<span class="number">2</span> - n_ti^<span class="number">2</span>).^<span class="number">0.5</span> ./ <span class="built_in">cos</span>(theta_i));</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="built_in">plot</span>(theta_i, phi_v);</span></pre></td></tr></table></figure>
<p>but find warning that plotting complex.<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">警告: 复数 X 和&#x2F;或 Y 参数的虚部已忽略</span></pre></td></tr></table></figure></p>
<p>Go back to see the formula</p>
<script type="math/tex; mode=display">
\begin{equation}
\varphi_{\perp}= -2\arctan\frac{\sqrt{\sin ^{2} \theta_{i}-n^{2}_{ti}}}{\cos \theta_{i}}
\end{equation}</script><p>Plot $(\sin ^{2} \theta_{i}-n^{2}_{ti})​$ merely, which is yellow (or green?) curve in the figure above, before the <strong>critical angle</strong> (the zero point of the curve), it is negative. Therefore, $\varphi_\perp​$ will be a complex before the critical angle. So we should code it like this</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="built_in">plot</span>(theta_i, <span class="built_in">real</span>(phi_v));</span></pre></td></tr></table></figure>
<p>The code will be a bit more beautiful with no warning though it will not change the figure.</p>
<h2 id="Thinking"><a href="#Thinking" class="headerlink" title="Thinking"></a>Thinking</h2><ol>
<li><p>Why would the $t$ bigger than 1 when $n_i&gt;n_t$, does it still comply with <strong>conversation of energy</strong>?</p>
<blockquote>
<script type="math/tex; mode=display">
t = \frac{E_t}{E_i}>1 \quad\Rightarrow\quad E_i>E_t\\ 
u = \epsilon E^2</script><p>Maybe in the light of the <strong>Dielectric coefficient</strong> difference, $\epsilon_i &gt; \epsilon_t​$, to keep the <strong>energy density</strong> $u​$ to be constant, $E_t​$ will be smaller than $E_i​$.</p>
</blockquote>
</li>
<li><p>When $n_i&gt;n_t$, it is <strong>Total internal reflection</strong> after the <strong>critical angle</strong>, but why does $t\neq 0$ but even $t&gt;1$?</p>
<blockquote>
<p>Those equations just consider near the boundary, $t$ just go like the figure near the boundary and when it goes away from the boundary, it will decreass rapidly to 0.</p>
</blockquote>
</li>
</ol>
<p><img src="/others/Optics-Reflection-and-Trasmission/question.svg" alt="questions"></p>
<ol>
<li><p>Why use complex mode when plotting $r$ and $t$?</p>
<blockquote>
<p>Mode represent the size.</p>
</blockquote>
</li>
<li><p>Why use <code>abs()</code> when plotting phase shift?</p>
<blockquote>
<p>Actually is the difference between ‘A to B’ and ‘B to A’, and because of its periodicty, there is no difference between $\pi$ and $-\pi$.</p>
</blockquote>
</li>
</ol>
<p><em>Thanks Probfia very much for answering $Q_1$ and $Q_2$!</em></p>
<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><ul>
<li>DALAO <a href="https://github.com/Probfia" target="_blank" rel="noopener">Probfia</a></li>
<li><strong>OPTICS</strong> <em>by</em> Eugene Hecht</li>
<li><a href="https://en.wikipedia.org/wiki/Fresnel_equations" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Fresnel_equations</a></li>
<li><a href="https://en.wikipedia.org/wiki/Snell%27s_law" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Snell%27s_law</a></li>
<li><a href="https://wenku.baidu.com/view/cb9c523a3968011ca30091b0.html" target="_blank" rel="noopener">https://wenku.baidu.com/view/cb9c523a3968011ca30091b0.html</a></li>
</ul>
]]></content>
      <tags>
        <tag>MATLAB</tag>
        <tag>Physics</tag>
        <tag>Optics</tag>
      </tags>
  </entry>
  <entry>
    <title>Valgrind安装</title>
    <url>/others/Cpp-Valgrind/</url>
    <content><![CDATA[<p><a href="http://valgrind.org/" target="_blank" rel="noopener">Valgrind官网</a></p>
<a id="more"></a>
<p>本来想在Windows下安装的, 不过看了下官网首页, 似乎是不支持Windows的…</p>
<blockquote>
<p>It runs on the following platforms: X86/Linux, AMD64/Linux, ARM/Linux, ARM64/Linux, PPC32/Linux, PPC64/Linux, PPC64LE/Linux, S390X/Linux, MIPS32/Linux, MIPS64/Linux, X86/Solaris, AMD64/Solaris, ARM/Android (2.3.x and later), ARM64/Android, X86/Android (4.0 and later), MIPS32/Android, X86/Darwin and AMD64/Darwin (Mac OS X 10.12).</p>
</blockquote>
<p>Google到了一份教程, 同时看到<a href="http://valgrind.org/docs/download_docs.html" target="_blank" rel="noopener">官网</a>写到了版本号是<code>valgrind-3.14.0</code>, 于是猜测这个应该是最新版的.</p>
<p>既然不支持Windows, 那就在子系统装吧!(子系统教程<a href="https://benature.github.io/2019/02/17/Linux-in-Windows/">此处</a>)</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> wget ftp://sourceware.org/pub/valgrind/valgrind-3.14.0.tar.bz2</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> bzip2 -d valgrind-3.14.0.tar.bz2</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> tar -xf valgrind-3.14.0.tar</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> valgrind-3.14.0</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ./configure &amp;&amp; make</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo make install</span></span></pre></td></tr></table></figure>
<hr>
<p>参考资料:</p>
<ul>
<li><a href="http://valgrind.org/" target="_blank" rel="noopener">http://valgrind.org/</a></li>
<li><a href="http://senlinzhan.github.io/2017/12/31/valgrind/" target="_blank" rel="noopener">http://senlinzhan.github.io/2017/12/31/valgrind/</a></li>
</ul>
]]></content>
      <tags>
        <tag>安装</tag>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux问题 之 swap分区满</title>
    <url>/linux/Linux-problem-swap/</url>
    <content><![CDATA[<p>清它! 盘它!</p>
<a id="more"></a>
<p>常规的简单姿势是</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sync</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">echo</span> 3 &gt; /proc/sys/vm/drop_caches</span></span></pre></td></tr></table></figure>
<p>然后就叫你看是不是清了</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> free -m</span></span></pre></td></tr></table></figure>
<p>反正我不够好彩, free还是0</p>
<p>那只能找多点姿势了, 重新打开swap<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> swapoff -a</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> swapon -a</span></span></pre></td></tr></table></figure></p>
<p>可惜报错了<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">swapoff: /swap: swapoff failed: Cannot allocate memory</span></pre></td></tr></table></figure></p>
<p>只好再搜一个办法<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> dd <span class="keyword">if</span>=/dev/zero of=/home/swap bs=1024 count=512000</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> mkswap /home/swap</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> swapon /home/swap</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> free -m</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> swapoff /dev/dm-1</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> free -m</span></span></pre></td></tr></table></figure></p>
<p>很可惜在<code>swapoff</code>又报错了<br>(我感觉这里<code>swapon</code>和<code>swapoff</code>是不是反了…)</p>
<p>但是<code>free -m</code>看到<code>swap</code>的free不是0了, 也勉强算成功了(?)</p>
<p>然后吃个饭回来发现<code>free</code>又变成0了…</p>
<p>还有自己写脚本来清的, 过于硬核, 懒于研究…且留作后话</p>
<hr>
<p>参考资料:</p>
<ul>
<li><a href="https://blog.51cto.com/stuart/2087188" target="_blank" rel="noopener">https://blog.51cto.com/stuart/2087188</a></li>
<li><a href="https://blog.51cto.com/bjdong/960558" target="_blank" rel="noopener">https://blog.51cto.com/bjdong/960558</a></li>
<li><a href="https://zrj.me/archives/1295" target="_blank" rel="noopener">https://zrj.me/archives/1295</a></li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Python爬虫</title>
    <url>/python-code/Python-spider/</url>
    <content><![CDATA[<ul>
<li>BeautifulSoup的组合查找<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">soup.select(<span class="string">'.class a'</span>)</span></pre></td></tr></table></figure>
</li>
</ul>
<ul>
<li>selenium<ul>
<li><a href="https://www.jianshu.com/p/615e3c0140a5" target="_blank" rel="noopener">https://www.jianshu.com/p/615e3c0140a5</a></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Spider</tag>
      </tags>
  </entry>
  <entry>
    <title>在Windows拥有Zsh</title>
    <url>/linux/wsl-zsh-install/</url>
    <content><![CDATA[<p>在Windows拥有Zsh</p>
<a id="more"></a>
<p>首先你要先安装好Ubuntu Bash,<a href="https://benature.github.io/2019/02/17/Linux-in-Windows/">此处教程.</a></p>
<p><strong>安装zsh</strong><br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install zsh</span></span></pre></td></tr></table></figure></p>
<p><strong>启动zsh</strong><br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> zsh</span></span></pre></td></tr></table></figure><br>键入<code>2</code>创建配置文件</p>
<p>若要退出zsh回到Bash<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">exit</span></span></span></pre></td></tr></table></figure></p>
<p><strong>设置zsh默认启动</strong></p>
<p>打开配置文件<code>~/.bashrc</code><br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vim ~/.bashrc</span></span></pre></td></tr></table></figure><br>在文件中加入如下几行<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Launch Zsh</span></pre></td></tr><tr><td class="code"><pre><span class="line">if [ -t 1 ]; then</span></pre></td></tr><tr><td class="code"><pre><span class="line">exec zsh</span></pre></td></tr><tr><td class="code"><pre><span class="line">fi</span></pre></td></tr></table></figure></p>
<p><strong>安装Oh My Zsh</strong><br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> curl -L https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh | bash</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">  #</span><span class="bash"> 把 Zsh 设置为当前用户的默认 Shell</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> chsh -s /bin/zsh</span></span></pre></td></tr></table></figure></p>
<p><strong>设置主题</strong><br>编辑<code>~/.zshrc</code><br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> vim ~/.zshrc</span></span></pre></td></tr></table></figure><br>修改主题为<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ZSH_THEME&#x3D;&quot;amuse&quot;</span></pre></td></tr></table></figure><br>这个主图需要下载字体<br><a href="https://github.com/powerline/fonts/blob/master/Meslo%20Slashed/Meslo%20LG%20M%20Regular%20for%20Powerline.ttf" target="_blank" rel="noopener">其一 Meslo LG M Regular for Powerline.ttf</a><br><a href="https://github.com/powerline/fonts" target="_blank" rel="noopener">更多字体</a></p>
<p><strong>安装语法高亮插件</strong><br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-syntax-highlighting</span></span></pre></td></tr></table></figure><br>配置文件<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ vim ~&#x2F;.zshrc</span></pre></td></tr></table></figure><br>找到这行<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">plugins&#x3D;(git)</span></pre></td></tr></table></figure><br>改为<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">plugins&#x3D;(git zsh-syntax-highlighting)</span></pre></td></tr></table></figure><br>保存退出然后更新设置<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">source</span> ~/.zshrc</span></span></pre></td></tr></table></figure></p>
<p>有可能会碰到这样的报错<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[oh-my-zsh] For safety, we will not load completions from these directories until</span></pre></td></tr><tr><td class="code"><pre><span class="line">[oh-my-zsh] you fix their permissions and ownership and restart zsh.</span></pre></td></tr><tr><td class="code"><pre><span class="line">[oh-my-zsh] See the above list for directories with group or other writability.</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">[oh-my-zsh] To fix your permissions you can do so by disabling</span></pre></td></tr><tr><td class="code"><pre><span class="line">[oh-my-zsh] the write permission of &quot;group&quot; and &quot;others&quot; and making sure that the</span></pre></td></tr><tr><td class="code"><pre><span class="line">[oh-my-zsh] owner of these directories is either root or your current user.</span></pre></td></tr><tr><td class="code"><pre><span class="line">[oh-my-zsh] The following command may help:</span></pre></td></tr><tr><td class="code"><pre><span class="line">[oh-my-zsh]     compaudit | xargs chmod g-w,o-w</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">[oh-my-zsh] If the above didn&#39;t help or you want to skip the verification of</span></pre></td></tr><tr><td class="code"><pre><span class="line">[oh-my-zsh] insecure directories you can set the variable ZSH_DISABLE_COMPFIX to</span></pre></td></tr><tr><td class="code"><pre><span class="line">[oh-my-zsh] &quot;true&quot; before oh-my-zsh is sourced in your zshrc file.</span></pre></td></tr></table></figure><br>我最后选择了最次的方法<br>配置文件<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ vim ~&#x2F;.zshrc</span></pre></td></tr></table></figure><br>在<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">export ZSH&#x3D;&quot;&#x2F;home&#x2F;Benature&#x2F;.oh-my-zsh&quot;</span></pre></td></tr></table></figure><br>前加一行<br><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ZSH_DISABLE_COMPFIX&#x3D;true</span></pre></td></tr><tr><td class="code"><pre><span class="line">  export ZSH&#x3D;&quot;&#x2F;home&#x2F;Benature&#x2F;.oh-my-zsh&quot;</span></pre></td></tr></table></figure></p>
<hr>
<p>参考资料</p>
<ul>
<li><a href="https://www.howtogeek.com/258518/how-to-use-zsh-or-another-shell-in-windows-10/" target="_blank" rel="noopener">https://www.howtogeek.com/258518/how-to-use-zsh-or-another-shell-in-windows-10/</a></li>
<li><a href="https://evdokimovm.github.io/windows/zsh/shell/syntax/highlighting/ohmyzsh/hyper/terminal/2017/02/24/how-to-install-zsh-and-oh-my-zsh-on-windows-10.html" target="_blank" rel="noopener">https://evdokimovm.github.io/windows/zsh/shell/syntax/highlighting/ohmyzsh/hyper/terminal/2017/02/24/how-to-install-zsh-and-oh-my-zsh-on-windows-10.html</a></li>
<li><a href="https://benature.github.io/2019/01/18/Terminal_in_Mac_configuration/">https://benature.github.io/2019/01/18/Terminal_in_Mac_configuration/</a></li>
</ul>
]]></content>
      <tags>
        <tag>配置</tag>
        <tag>WSL</tag>
      </tags>
  </entry>
  <entry>
    <title>nano编辑器</title>
    <url>/linux/Linux-nano/</url>
    <content><![CDATA[<p>言简意赅 十分入门</p>
<a id="more"></a>
<h1 id="文件的创建-打开"><a href="#文件的创建-打开" class="headerlink" title="文件的创建/打开"></a>文件的创建/打开</h1><p>命令格式为<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nano &lt;filename&gt;</span></span></pre></td></tr></table></figure></p>
<p>若当前路径有以该<code>filename</code>命名的文件,则打开之.<br>若无,则创建新文件.</p>
<p>示例:<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nano test.txt</span></span></pre></td></tr></table></figure><br>如此则创建了一个以<code>test.txt</code>为名的文件</p>
<p><img src="/linux/Linux-nano/ctrlx.png" alt></p>
<p>因为在下方可以见到<code>[ 新文件 ]</code>的提示</p>
<h1 id="编辑器退出-文件保存"><a href="#编辑器退出-文件保存" class="headerlink" title="编辑器退出/文件保存"></a>编辑器退出/文件保存</h1><p>见到左下方有一个<code>^X 离开</code>的字样, 不过不是给你点的, 而是热键提示<br><code>^X</code>即键盘操作的<code>Ctrl + X</code> </p>
<p>如果在文件毫无改动的情况下<code>Ctrl + X</code>, 会直接跳出编辑器回到命令行.<br>如果文件有过改动,则下方会询问是否储存变更<br><img src="/linux/Linux-nano/y.png" alt></p>
<p>根据提示, 键入<code>Y</code>以保存<br><img src="/linux/Linux-nano/save.png" alt></p>
<p>一般是不会更改文件名的, 如果需要就直接更改就好了.<br>确认文件名,键入<code>Enter</code>,即回车键.<br>随后文件保存,界面回到命令行.</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows的Linux子系统(Ubuntu)安装教程</title>
    <url>/linux/Linux-in-Windows/</url>
    <content><![CDATA[<p>在Windows系统安装Ubantu子系统</p>
<a id="more"></a>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>其实对于正在使用Windows系统但是想使用Linux的同学, 我第一句建议其实是:<br><strong>“去买个MacBook吧”</strong></p>
<p>当然, 如果你也和我一样 <em>贫穷限制了购买力</em> 的话, 我们就在windows电脑里面装linux吧.</p>
<p>一般而言, 使用Linux系统有三种方法:</p>
<ul>
<li>安装双系统</li>
<li>虚拟机安装 (如VMware)</li>
<li>Windows子系统(WSL)</li>
</ul>
<p>本文主要谈论第三种方法, 前两种相对而言在网上比较常见.</p>
<h1 id="Linux子系统"><a href="#Linux子系统" class="headerlink" title="Linux子系统"></a>Linux子系统</h1><h2 id="基本认识"><a href="#基本认识" class="headerlink" title="基本认识"></a>基本认识</h2><p>子系统的最底层其实不是Linux, 而还是基于Windows的.</p>
<p>子系统的全名叫 <strong>Windows Subsystem for Linux（简称WSL）</strong><br>这大概是它与前两种方法最大的区别</p>
<p>更多详情请转wiki(懒得copy…)</p>
<h2 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h2><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><ul>
<li>自身支持和Windows系统文件交互</li>
<li>启动方便, 相对于双系统的重启启动</li>
<li>比较安全(?)<ul>
<li>陆陆续续见到一些装 <em>双系统</em> 把电脑装崩的同学</li>
<li>也有同学表示就算把 <em>虚拟机</em> 卸载了电脑也比以前慢了</li>
</ul>
</li>
</ul>
<h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><ul>
<li>图形界面?有! 但需要通过<code>mstsc</code>,且有一定的延迟性</li>
<li>有一些不知名的小bug, 就算<code>apt-get install</code>也可能有点小问题</li>
<li>…</li>
</ul>
<h2 id="安装教程"><a href="#安装教程" class="headerlink" title="安装教程"></a>安装教程</h2><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><h4 id="电脑"><a href="#电脑" class="headerlink" title="电脑"></a>电脑</h4><p>首先你要打开电脑, 而且是win10</p>
<h4 id="开发人员模式"><a href="#开发人员模式" class="headerlink" title="开发人员模式"></a>开发人员模式</h4><p>设置-&gt;更新与安全-&gt;开发人员模式<br>(设置的快捷键是<code>win+I</code>)<br><img src="/linux/Linux-in-Windows/开发者.png" alt="开发人员"></p>
<h4 id="控制面板"><a href="#控制面板" class="headerlink" title="控制面板"></a>控制面板</h4><p>控制面板-&gt;程序-&gt;启用和关闭Windows功能-&gt;框选“适用于Linux的Windows子系统”<br><img src="/linux/Linux-in-Windows/控制面板.png" alt></p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>Microsoft Store-&gt;搜索”Ubuntu”-&gt;选择第一个<br><img src="/linux/Linux-in-Windows/store.png" alt></p>
<p>安装完成后, 点击Ubuntu打开, 会提示你稍等一会</p>
<p>然后需要你设置你的<em>用户名</em><br>然后设置<em>密码</em></p>
<p><strong><em>注意:</em></strong> <strong>看不见密码 很!正!常!</strong></p>
<p>然后</p>
<p>欢迎你进入Ubuntu</p>
<h4 id="Problem"><a href="#Problem" class="headerlink" title="Problem(?)"></a>Problem(?)</h4><p>可能有些人的C盘比较小, 或者想把Ubuntu装到非系统盘的. 可以修改下Store的下载路径</p>
<p>设置-&gt;存储-&gt;更改新内容的保存位置-&gt;新的引用将保存到(D:)</p>
<p><img src="/linux/Linux-in-Windows/setting-storage.png" alt="存储"></p>
<h2 id="一些配置-操作"><a href="#一些配置-操作" class="headerlink" title="一些配置/操作"></a>一些配置/操作</h2><h3 id="查看Ubuntu版本"><a href="#查看Ubuntu版本" class="headerlink" title="查看Ubuntu版本"></a>查看Ubuntu版本</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> lsb_release -a</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">Distributor ID: Ubuntu</span></pre></td></tr><tr><td class="code"><pre><span class="line">Description:    Ubuntu 16.04.2 LTS</span></pre></td></tr><tr><td class="code"><pre><span class="line">Release:        16.04</span></pre></td></tr><tr><td class="code"><pre><span class="line">Codename:       xenial</span></pre></td></tr></table></figure>
<h3 id="更换软件源"><a href="#更换软件源" class="headerlink" title="更换软件源"></a>更换软件源</h3><p>使用国内的软件源, 速度可以快很多, 比如<a href="https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/" target="_blank" rel="noopener">清华镜像</a></p>
<p>Ubuntu 的软件源配置文件是 <code>/etc/apt/sources.list</code>。将系统自带的该文件做个备份，将该文件替换</p>
<p>以Ubuntu 16.04 LTS 为例</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial main restricted universe multiverse</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-updates main restricted universe multiverse</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-backports main restricted universe multiverse</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-security main restricted universe multiverse</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 预发布软件源，不建议启用</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ xenial-proposed main restricted universe multiverse</span></span></pre></td></tr></table></figure>
<p>命令操作如下:<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">  #</span><span class="bash"> 复制文件到/etc/apt/sources.list.bak中</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo nano /etc/apt/sources.list</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">  #</span><span class="bash"> 将上文的源右键粘贴进去，编辑完后按Ctrl+X，再按Y和回车</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> apt update &amp;&amp; apt upgrade -y <span class="comment"># 更新</span></span></span></pre></td></tr></table></figure></p>
<p>如果对上述nano编辑器的操作指引感到疑惑,可以参考<a href="https://benature.github.io/2019/02/22/Linux-nano/">这篇文章</a></p>
<h3 id="安装中文环境"><a href="#安装中文环境" class="headerlink" title="安装中文环境"></a>安装中文环境</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> apt install  language-pack-zh-han* -y</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> locale-gen zh_CN.GB18030 &amp;&amp; locale-gen zh_CN.GB2312 %% locale-gen zh_CN.UTF8</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">  #</span><span class="bash">中文字体，别忘了同意eula</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> apt install fontconfig -y</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo apt install ttf-mscorefonts-installer -y</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">  #</span><span class="bash">下面的再执行一遍以防万一</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo apt install -y --force-yes --no-install-recommends fonts-wqy-microhei</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo apt install -y --force-yes --no-install-recommends ttf-wqy-zenhei</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo dpkg-reconfigure locales</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">  #</span><span class="bash"> 选择zh_CN.UTF8回车, 下一页也是选择zh_CN.UTF8回车</span></span></pre></td></tr></table></figure>
<p>然后重新打开Ubuntu命令行</p>
<h2 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h2><h3 id="更新软件包"><a href="#更新软件包" class="headerlink" title="更新软件包"></a>更新软件包</h3><p>和Ubuntu一样</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get update</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get upgrade</span></span></pre></td></tr></table></figure>
<h3 id="更新系统"><a href="#更新系统" class="headerlink" title="更新系统"></a>更新系统</h3><p>因为有时候安装东西会有依赖项奇奇怪怪的事情, 可能还是更新下系统比较好.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo -S apt-mark hold procps strace sudo</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo -S env RELEASE_UPGRADER_NO_SCREEN=1 <span class="keyword">do</span>-release-upgrade</span></span></pre></td></tr></table></figure>
<h2 id="图形界面"><a href="#图形界面" class="headerlink" title="图形界面"></a>图形界面</h2><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><p>图形环境使用<code>xfce4</code><br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> apt install xfce4 -y</span></span></pre></td></tr></table></figure></p>
<p>如果想使用常见的Ubuntu桌面的话, 命令是<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> pt install xubuntu-desktop -y</span></span></pre></td></tr></table></figure><br>据说这个会安装的软件比较多,想轻量级的话还是选择<code>xfce4</code>吧.<br>btw, 如果成功打开了xubuntu桌面的话,请告诉我怎么做,因为我还没成功过…</p>
<h3 id="换端口"><a href="#换端口" class="headerlink" title="换端口"></a>换端口</h3><p>为了防止和你计算机本来带的远程桌面冲突,最好换一下端口.<br><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nano /etc/xrdp/xrdp.ini</span></span></pre></td></tr></table></figure><br>把<code>port=3389</code>改成别的(比如2333,好记哈哈哈)</p>
<h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><pre><code class="lang-shell">$ service xrdp restart
</code></pre>
<p>然后回到Windows系统,打开<code>运行</code>(快捷键<code>win+R</code>),输入<code>mstsc</code>,回车.</p>
<p>输入<code>localhost:&lt;刚才设置的端口&gt;</code>,以及你设置的用户名<br><img src="/linux/Linux-in-Windows/mstsc.png" alt></p>
<p>进入远程桌面后有一段时间的雪花图, 不要惊慌, 等一会就好了.</p>
<h2 id="Problems"><a href="#Problems" class="headerlink" title="Problems"></a>Problems</h2><h2 id="apt-install-依赖项"><a href="#apt-install-依赖项" class="headerlink" title="apt install 依赖项"></a>apt install 依赖项</h2><p>使用<code>aptitude</code>采取第二种解决方案</p>
<hr>
<p>参考资料:</p>
<ul>
<li><a href="https://docs.microsoft.com/en-us/windows/wsl/install-win10" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/windows/wsl/install-win10</a></li>
<li><a href="https://en.wikipedia.org/wiki/Windows_Subsystem_for_Linux" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Windows_Subsystem_for_Linux</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/39864061" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/39864061</a></li>
<li><a href="https://blog.csdn.net/qq_20464153/article/details/79682274" target="_blank" rel="noopener">https://blog.csdn.net/qq_20464153/article/details/79682274</a></li>
<li><a href="https://wsl-guide-cn.readthedocs.io/zh_CN/latest/update.html" target="_blank" rel="noopener">https://wsl-guide-cn.readthedocs.io/zh_CN/latest/update.html</a></li>
<li><a href="https://solarianprogrammer.com/2017/04/16/windows-susbsystem-for-linux-xfce-4/" target="_blank" rel="noopener">https://solarianprogrammer.com/2017/04/16/windows-susbsystem-for-linux-xfce-4/</a></li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>配置</tag>
        <tag>Linux</tag>
        <tag>安装</tag>
        <tag>入门教程</tag>
      </tags>
  </entry>
  <entry>
    <title>MXnet for GPU Install</title>
    <url>/python-code/python-mxnet/</url>
    <content><![CDATA[<p>就算是官网的教程也不要轻易相信=-=</p>
<a id="more"></a>
<p>安装的时候<a href="http://mxnet.incubator.apache.org/versions/master/install/windows_setup.html#install-with-gpus" target="_blank" rel="noopener">安装教程</a>是这样的<br>(截图留证)</p>
<p><img src="/python-code/python-mxnet/安装教程.png" alt="安装教程"></p>
<p>好的, 那我就先去安装了个全裸的VS下来.</p>
<p>第二步推荐安装9.2或者9.0版本的, 好啊, 官网推荐啥我就装啥</p>
<p>结果去<a href="https://developer.nvidia.com/cuda-downloads?target_os=Windows&amp;target_arch=x86_64&amp;target_version=81&amp;target_type=exelocal" target="_blank" rel="noopener">下载页</a>一看…<br><img src="/python-code/python-mxnet/download.png" alt="download"></p>
<p>一个版本9的都没有????<br>Linux和Mac的也看过了,更没有版本9.</p>
<p>只好去Bing一下教程, 查到的都是一些比较旧的, 说到8.0版本的<br>(可是也没有8.0版本的下载啊!!!!)</p>
<p>8.1应该差不了多少吧,于是装了8.1的.<br>不过点击download的时候感到一丝疑惑,文件名是<code>cuda_10.0.130_411.31_windows.exe</code>, 看起来是版本10.0的样子,而且点去10那一看文件名一毛一样…</p>
<p>行吧, 还是先装了8.1</p>
<p>安装好后检查版本</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nvcc -V </span></span></pre></td></tr><tr><td class="code"><pre><span class="line">nvcc: NVIDIA (R) Cuda compiler driver</span></pre></td></tr><tr><td class="code"><pre><span class="line">Copyright (c) 2005-2018 NVIDIA Corporation</span></pre></td></tr><tr><td class="code"><pre><span class="line">Built on Sat_Aug_25_21:08:04_Central_Daylight_Time_2018</span></pre></td></tr><tr><td class="code"><pre><span class="line">Cuda compilation tools, release 10.0, V10.0.130</span></pre></td></tr></table></figure>
<p>好嘛, 哪里是8.1的样子, 分明就是个10.0</p>
<p>行吧, 教程是信不过的了, 直接跳步吧, 那个<a href="https://docs.nvidia.com/deeplearning/sdk/cudnn-install/index.html#install-windows" target="_blank" rel="noopener">NVIDIA_CUDA_DNN</a>点过去一看也是无敌复杂, 心累</p>
<p>根据版本10.0安装 </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install mxnet-cu100</span></pre></td></tr></table></figure>
<p>打开Python检测</p>
<pre><code class="lang-Python">&gt;&gt;&gt; import mxnet as mx
&gt;&gt;&gt; from mxnet import nd

&gt;&gt;&gt; nd.array([1,2,3])
[1. 2. 3.]
&lt;NDArray 3 @cpu(0)&gt;

&gt;&gt;&gt; nd.array([1,2,3],ctx=mx.gpu(0))
[1. 2. 3.]
&lt;NDArray 3 @gpu(0)&gt;
</code></pre>
<p>搞定, 收工.</p>
<p>(其实还走过很多弯路, 不在赘述了, 大家能快速安装好就好了)</p>
<p>下次再也不相信官网的<strong>过时</strong>教程了</p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>安装</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>在Python调用MATLAB程序</title>
    <url>/python-code/python-Matlab_Import/</url>
    <content><![CDATA[<p>在Python调用MATLAB程序<br><a id="more"></a></p>
<p><a href="https://blog.csdn.net/qq_27262673/article/details/79635924" target="_blank" rel="noopener">https://blog.csdn.net/qq_27262673/article/details/79635924</a></p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>MATLAB</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>命令行/终端是什么 以及 为什么这么丑</title>
    <url>/others/Terminal-Introduction/</url>
    <content><![CDATA[<p>你的命令行在这儿打开<br>可他们怎么长的这么丑!!!!</p>
<a id="more"></a>
<h1 id="Mac-OX-系统"><a href="#Mac-OX-系统" class="headerlink" title="Mac OX 系统"></a>Mac OX 系统</h1><p>直接找到<code>Terminal</code>应用,点开,你就会见到传说中的命令行了.<br>也许会有人嫌弃<code>Terminal</code>的样式,你可以在配置文件调整,或者<a href="https://benature.github.io/2019/01/18/Terminal_in_Mac_configuration/">有人会向你推荐<code>iTerm2</code></a></p>
<blockquote>
<p>如果你用的是Windows然后你也表示嫌弃<code>cmd</code>或者<code>powershell</code>的样式,你可以稍微改下颜色背景什么的(如果你能改到你满意),剩下你能做的就是和我一起继续一边嫌弃一边用,或者<strong>换一台苹果电脑</strong>.</p>
</blockquote>
<h1 id="Windows-系统"><a href="#Windows-系统" class="headerlink" title="Windows 系统"></a>Windows 系统</h1><p>其实上面那段话是我瞎说的,我只是想劝你换苹果.<br>当然,如果你表示和我一样穷,那我们再一起看看Windows</p>
<h2 id="条条大路通命令行"><a href="#条条大路通命令行" class="headerlink" title="条条大路通命令行"></a>条条大路通命令行</h2><ul>
<li>文件夹打开</li>
</ul>
<p><img src="/others/Terminal-Introduction/folder.png" alt="folder"></p>
<ul>
<li>开始菜单栏</li>
</ul>
<p>在开始菜单栏中,你会见到这些看起来花里胡哨的玩意儿</p>
<p><img src="/others/Terminal-Introduction/Windows.png" alt="Windows开始"></p>
<p>这里框住了两个玩意,一个叫<code>PowerShell</code>,一个叫命令提示符 (AKA <code>cmd</code>).<br><code>cmd</code>已经老了,推荐使用<code>powershell</code>,虽然说用起来目前来说我还没感觉到有撒子区别<br>点击启动,然后你就会见到传说中的命令行了</p>
<ul>
<li><code>Win + R</code></li>
</ul>
<p><code>Win + R</code>快捷键后输入<code>powershell</code>或者<code>cmd</code>同样可以启动命令行</p>
<h2 id="好看最重要"><a href="#好看最重要" class="headerlink" title="好看最重要"></a>好看最重要</h2><p>这里再推荐些<code>cmd</code>和<code>powershell</code>的代替品,目前已知的有</p>
<ul>
<li><strong>ConEmu</strong></li>
<li>Console2</li>
<li>ColorConsole</li>
<li>PowerCmd</li>
<li>Cmder</li>
</ul>
<p><a href="http://www.cnblogs.com/bamanzi/archive/2012/06/27/windows-console-emulater.html" target="_blank" rel="noopener">前四者的对比评价</a><br><a href="https://zhuanlan.zhihu.com/p/20947499" target="_blank" rel="noopener">ConEmu强安利</a><br><a href="https://blog.csdn.net/m1mory/article/details/72591289" target="_blank" rel="noopener">ConEmu配置</a><br>Cmder还没试过不过<a href="https://jingyan.baidu.com/article/63acb44acc855461fcc17ea6.html" target="_blank" rel="noopener">看着也还不错</a><br>PowerCmd试过了,被ConEmu完虐.</p>
<hr>
<h1 id="和命令行打个招呼"><a href="#和命令行打个招呼" class="headerlink" title="和命令行打个招呼"></a>和命令行打个招呼</h1><p>首先放一碗汤在电脑上,在命令行输入</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">echo 煨汤</span></pre></td></tr></table></figure>
<p>然后命令行就会和人类一样复读机,返回<code>煨汤</code>,告诉你它真的开始煨汤了</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">echo</span> 煨汤</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">煨汤</span></pre></td></tr></table></figure>
<p>随后你在电脑打个游戏或者跑个死循环的小程序什么的,你就能获得一碗热乎乎的汤了.</p>
<h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>趁热喝哦(跑…)</p>
]]></content>
      <tags>
        <tag>Mac</tag>
        <tag>Windows</tag>
        <tag>入门教程</tag>
      </tags>
  </entry>
  <entry>
    <title>Jupyter Notebook配置</title>
    <url>/python-code/jupyter-notebook-configuration/</url>
    <content><![CDATA[<p>Jupyter 大法好!</p>
<a id="more"></a>
<p><strong>TOC</strong></p>
<!-- @import "[TOC]" {cmd="toc" depthFrom=1 depthTo=6 orderedList=false} -->
<!-- code_chunk_output -->
<ul>
<li><a href="#jupyter-notebook%e9%85%8d%e7%bd%ae">Jupyter Notebook配置</a><ul>
<li><a href="#%e6%8f%92%e4%bb%b6">插件</a><ul>
<li><a href="#install">Install</a></li>
<li><a href="#%e6%8c%91%e5%87%a0%e4%b8%aa%e9%87%8d%e7%82%b9%e5%ae%89%e5%88%a9">挑几个重点安利</a></li>
</ul>
</li>
<li><a href="#%e9%a1%b5%e9%9d%a2%e6%a0%bc%e5%bc%8f%e5%ae%9a%e5%88%b6css">页面格式定制(CSS)</a></li>
<li><a href="#%e6%9b%b4%e6%8d%a2%e4%b8%bb%e9%a2%98%e5%ad%97%e4%bd%93">更换主题/字体</a><ul>
<li><a href="#install-1">Install</a></li>
<li><a href="#%e9%85%8d%e7%bd%ae%e4%b8%bb%e9%a2%98and%e5%ad%97%e4%bd%93">配置主题and字体</a></li>
</ul>
</li>
<li><a href="#hotkey">Hotkey</a></li>
<li><a href="#%e7%94%bb%e5%9b%be">画图</a></li>
<li><a href="#%e9%85%8d%e7%bd%ae%e6%96%87%e4%bb%b6">配置文件</a></li>
<li><a href="#%e9%98%85%e8%af%bbmarkdown">阅读Markdown</a><ul>
<li><a href="#%e8%bf%90%e8%a1%8c">运行</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<!-- /code_chunk_output -->
<h1 id="Jupyter-Notebook配置"><a href="#Jupyter-Notebook配置" class="headerlink" title="Jupyter Notebook配置"></a>Jupyter Notebook配置</h1><h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><h3 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h3><ul>
<li>by <code>conda</code></li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">conda install -c conda-forge jupyter_contrib_nbextensions</span></pre></td></tr><tr><td class="code"><pre><span class="line">conda install -c conda-forge jupyter_nbextensions_configurator</span></pre></td></tr></table></figure>
<ul>
<li>by <code>pip</code></li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install jupyter_nbextensions_configurator jupyter_contrib_nbextensions</span></pre></td></tr><tr><td class="code"><pre><span class="line">jupyter contrib nbextension install --user</span></pre></td></tr><tr><td class="code"><pre><span class="line">jupyter nbextensions_configurator enable --user</span></pre></td></tr></table></figure>
<h3 id="挑几个重点安利"><a href="#挑几个重点安利" class="headerlink" title="挑几个重点安利"></a>挑几个重点安利</h3><ul>
<li>Variable Inspector: 变量监视器<br>建议勾选<code>Display window at startup</code></li>
<li>Live Markdown Preview<br>建议勾选<code>Parameters</code>里的右侧预览</li>
<li>Table of Contents(2)<br>同建议勾选自启</li>
<li>Codefolding in Editor: 缩进折叠</li>
</ul>
<h2 id="页面格式定制-CSS"><a href="#页面格式定制-CSS" class="headerlink" title="页面格式定制(CSS)"></a>页面格式定制(CSS)</h2><ul>
<li>临时</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> IPython.core.display <span class="keyword">import</span> display, HTML</span></pre></td></tr><tr><td class="code"><pre><span class="line">display(HTML(<span class="string">'''&lt;style&gt;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">.container &#123; </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">    width:80% !important; </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">    margin-left:0 !important;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&#125;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">div.prompt_container&#123;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">    width: 76px;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&#125;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">div.cell.code_cell.input_prompt&#123;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">    text-align: left !important;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&#125;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">.cm-s-ipython .CodeMirror-gutters&#123;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">    width: 27px !important;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&#125;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="string">&lt;/style&gt;'''</span>))</span></pre></td></tr></table></figure>
<ul>
<li>长久之计</li>
</ul>
<p>创建文件<code>~/.jupyter/custom/custom.css</code></p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    width: 80% !important;      // 宽度</span></pre></td></tr><tr><td class="code"><pre><span class="line">    margin-left: 0 !important;  // 居左</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-class">.prompt_container</span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="attribute">width</span>: <span class="number">76px</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-class">.cell</span><span class="selector-class">.code_cell</span><span class="selector-class">.input_prompt</span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="attribute">text-align</span>: left <span class="meta">!important</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="selector-class">.cm-s-ipython</span> <span class="selector-class">.CodeMirror-gutters</span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="attribute">width</span>: <span class="number">27px</span> <span class="meta">!important</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<blockquote>
<p>reference: <a href="https://stackoverflow.com/questions/21971449/how-do-i-increase-the-cell-width-of-the-jupyter-ipython-notebook-in-my-browser" target="_blank" rel="noopener">https://stackoverflow.com/questions/21971449/how-do-i-increase-the-cell-width-of-the-jupyter-ipython-notebook-in-my-browser</a></p>
</blockquote>
<h2 id="更换主题-字体"><a href="#更换主题-字体" class="headerlink" title="更换主题/字体"></a>更换主题/字体</h2><h3 id="Install-1"><a href="#Install-1" class="headerlink" title="Install"></a>Install</h3><ul>
<li><a href="https://www.jianshu.com/p/168a2509db79" target="_blank" rel="noopener">教程: jupyter themes</a></li>
<li><a href="https://blog.csdn.net/feilong_csdn/article/details/80186276" target="_blank" rel="noopener">教程: jupyter-themes</a></li>
</ul>
<p>没想到两者要install的库名居然差了个<code>-</code></p>
<p><img src="/python-code/jupyter-notebook-configuration/windows主题.png" alt="主题">  </p>
<h3 id="配置主题and字体"><a href="#配置主题and字体" class="headerlink" title="配置主题and字体"></a>配置主题and字体</h3><pre><code>jt -f inconsolata -t chesterish -T
</code></pre><ul>
<li><code>-f inconsolata</code>: 使用<code>inconsolata</code>等宽字体</li>
<li><code>-t chesterish</code>: 选择chesterish主题</li>
<li><code>-T</code>: 同时打开顶部的工具栏（Toolbar）</li>
<li><code>-N</code>: 显示笔记本的名字（Name）（我觉得这个鸡肋，还占用了一行空间，不如省去）</li>
</ul>
<p>暗色 theme 的 plot 加成</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> jupyterthemes <span class="keyword">import</span> jtplot</span></pre></td></tr><tr><td class="code"><pre><span class="line">jtplot.style(theme=<span class="string">'inconsolata'</span>, context=<span class="string">'notebook'</span>, ticks=<span class="literal">True</span>)<span class="comment">#, grid=False)</span></span></pre></td></tr></table></figure>
<h2 id="Hotkey"><a href="#Hotkey" class="headerlink" title="Hotkey"></a>Hotkey</h2><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">key</th>
<th style="text-align:center">key-name</th>
<th style="text-align:center">key-character</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">⌘</td>
<td style="text-align:center">command</td>
<td style="text-align:center"><code>cmd</code></td>
</tr>
<tr>
<td style="text-align:center">⌥</td>
<td style="text-align:center">option</td>
<td style="text-align:center"><code>alt</code></td>
</tr>
<tr>
<td style="text-align:center">⌃</td>
<td style="text-align:center">control</td>
<td style="text-align:center"><code>ctrl</code></td>
</tr>
<tr>
<td style="text-align:center">↩</td>
<td style="text-align:center">enter</td>
<td style="text-align:center"><code>Enter</code></td>
</tr>
<tr>
<td style="text-align:center">⇧</td>
<td style="text-align:center">shift</td>
<td style="text-align:center"><code>Shift</code></td>
</tr>
</tbody>
</table>
</div>
<p>组合键用<code>-</code>连接</p>
<h2 id="画图"><a href="#画图" class="headerlink" title="画图"></a>画图</h2><ul>
<li>在内部显示图片用<code>%matplotlib inline</code></li>
<li><a href="https://blog.csdn.net/ouyangandy/article/details/82852511" target="_blank" rel="noopener">在外部显示图片</a></li>
</ul>
<p>常见可用</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">%pylab</span></pre></td></tr><tr><td class="code"><pre><span class="line">%matplotlib qt5</span></pre></td></tr></table></figure>
<h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>生成配置文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">jupyter notebook --generate-config</span></pre></td></tr></table></figure>
<h2 id="阅读Markdown"><a href="#阅读Markdown" class="headerlink" title="阅读Markdown"></a>阅读Markdown</h2><p>安装<code>notedown</code>插件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">pip install https://github.com/mli/notedown/tarball/master</span></pre></td></tr></table></figure>
<h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><ul>
<li>方法一: 每次都加命令</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">jupyter notebook --NotebookApp.contents_manager_class='notedown.NotedownContentsManager'</span></pre></td></tr></table></figure>
<ul>
<li>方法二: 修改配置文件</li>
</ul>
<p>添加</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">c.NotebookApp.contents_manager_class = <span class="string">'notedown.NotedownContentsManager'</span></span></pre></td></tr></table></figure>
<p>然后正常运行即可</p>
<hr>
<p>reference:</p>
<ul>
<li><a href="http://www.elecfans.com/d/650252.html" target="_blank" rel="noopener">五大插件推荐</a></li>
<li><a href="https://blog.csdn.net/blmoistawinde/article/details/85009603" target="_blank" rel="noopener">slide</a></li>
</ul>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>配置</tag>
        <tag>Python</tag>
        <tag>Jupyter Notebook</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac Terminal</title>
    <url>/devices/Terminal_in_Mac/</url>
    <content><![CDATA[<p>苹果好!</p>
<a id="more"></a>
<h1 id="美化-iTerm2"><a href="#美化-iTerm2" class="headerlink" title="美化: iTerm2"></a>美化: iTerm2</h1><p><a href="https://www.cnblogs.com/xishuai/p/mac-iterm2.html" target="_blank" rel="noopener">教程</a></p>
<ul>
<li>其中需要<a href="https://jingyan.baidu.com/article/a3761b2b8484321576f9aaac.html" target="_blank" rel="noopener">安装字体</a></li>
<li>里面的隐藏户名和主机名我失败了,改用<a href="https://blog.csdn.net/z3512498/article/details/51245853" target="_blank" rel="noopener">这个教程</a></li>
<li><a href="https://www.textarea.com/mactive/shadowsocks-ji-proxychains-ng-shixian-zhongduan-iterm2-xia-daili-639/" target="_blank" rel="noopener">代理</a></li>
</ul>
<h1 id="ssh"><a href="#ssh" class="headerlink" title="ssh"></a>ssh</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh root@&lt;ip&gt; -p &lt;port&gt;</span></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Mac</tag>
        <tag>配置</tag>
      </tags>
  </entry>
  <entry>
    <title>import相对路径问题</title>
    <url>/python-code/Python-import-path/</url>
    <content><![CDATA[<p><a href="https://github.com/wweiradio/pkg-relative-import" target="_blank" rel="noopener">示例</a></p>
<a id="more"></a>
<blockquote>
<p>This is because when executing relative.py, from .. import parent, the directory pkg is no longer treated as a package. Therefore, sub is the topmost package. .. is beyond toplevel package.</p>
</blockquote>
<p>看样子应该主程序入口是不可以向上import?</p>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Ctype学习笔记</title>
    <url>/python-code/Python-Ctype-note/</url>
    <content><![CDATA[<p>关于Ctype的学习笔记<br><a id="more"></a></p>
<p><a href="https://docs.python.org/3/library/ctypes.html" target="_blank" rel="noopener">官方文档</a></p>
<h1 id="动态链接库"><a href="#动态链接库" class="headerlink" title="动态链接库"></a>动态链接库</h1><p>三种加载方式</p>
<ul>
<li><code>cdll()</code></li>
<li><code>windll()</code></li>
<li><code>oledll()</code></li>
</ul>
<h2 id="在Max-OX系统上的使用"><a href="#在Max-OX系统上的使用" class="headerlink" title="在Max OX系统上的使用"></a>在Max OX系统上的使用</h2><p><a href="https://stackoverflow.com/questions/11554355/mac-os-x-lion-python-ctype-cdll-error-lib-so-6-image-not-found" target="_blank" rel="noopener">偏偏书上没有mac系统的方法</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> ctypes <span class="keyword">import</span> *</span></pre></td></tr><tr><td class="code"><pre><span class="line">libc = CDLL(<span class="string">"libc.dylib"</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># libc = cdll.LoadLibrary('libc.dylib')</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># libc = cdll.LoadLibrary('/usr/lib/libc.dylib')</span></span></pre></td></tr></table></figure>
<p>上述三种方式都可以</p>
<ul>
<li><a href="https://stackoverflow.com/questions/37474192/python-3-5-ctypes-libc-printf-only-prints-first-byte-of-string-windows-7-10" target="_blank" rel="noopener"><code>printf</code>的坑</a></li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">message_string = <span class="string">"Hello world!\n"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">libc.printf(<span class="string">"Testing: %s"</span>, message_string)</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># 输出:</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment"># H</span></span></pre></td></tr></table></figure>
<p>没错! 只输出第一个letter! 只有在<strong>每个</strong>字符创前都加上<code>b</code>后才正常</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">message_string = <span class="string">b"Hello world!\n"</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">libc.printf(<span class="string">b"Testing: %s"</span>, message_string)</span></pre></td></tr></table></figure>
<blockquote>
<p>The small detail of the <code>b</code> prefix, which is a <strong>bytes</strong> literal, is the difference between passing an ASCII byte string <code>b&quot;Hello World!\n&quot;</code> versus a UTF-16LE encoded string</p>
</blockquote>
<h1 id="理解函数调用约定"><a href="#理解函数调用约定" class="headerlink" title="理解函数调用约定"></a>理解函数调用约定</h1>]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>matplotlib选记</title>
    <url>/python-code/Python-matplotlib-note/</url>
    <content><![CDATA[<p>matplotlib选记<br><a id="more"></a></p>
<ul>
<li>坐标轴旋转</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">plt.xticks(rotation=<span class="number">60</span>)</span></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Pandas学习笔记</title>
    <url>/python-code/Python-Pandas-note/</url>
    <content><![CDATA[<p>Pandas in Python</p>
<a id="more"></a>
<h1 id="数据筛选"><a href="#数据筛选" class="headerlink" title="数据筛选"></a>数据筛选</h1><p><a href="https://blog.csdn.net/g863402758/article/details/53488140" target="_blank" rel="noopener">https://blog.csdn.net/g863402758/article/details/53488140</a></p>
<ul>
<li>多列数据筛选的逻辑关系记得每组加上圆括号</li>
<li><a href="https://blog.csdn.net/u013243986/article/details/79739316" target="_blank" rel="noopener">unix时间戳转换</a><br>报错记录:<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data[<span class="string">"date"</span>] = pd.to_datetime(data[<span class="string">"Timestamp UTC ms"</span>],unit=<span class="string">'ms'</span>,utc=<span class="literal">True</span>).tz_convert(<span class="string">'Asia/Shanghai'</span>)</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">TypeError: index <span class="keyword">is</span> <span class="keyword">not</span> a valid DatetimeIndex <span class="keyword">or</span> PeriodIndex</span></pre></td></tr></table></figure>
关于这个查到一个issue <a href="https://github.com/pandas-dev/pandas/issues/7846" target="_blank" rel="noopener">#7846</a>, 但仍不知怎么处理<br>最后发现换到index就没报错了</li>
</ul>
<h1 id="列操作"><a href="#列操作" class="headerlink" title="列操作"></a>列操作</h1><ul>
<li><p>调整列顺序</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df = df[[<span class="string">'user_id'</span>,<span class="string">'book_id'</span>,<span class="string">'rating'</span>,<span class="string">'mark_date'</span>]] <span class="comment"># 调整列顺序为'user_id','book_id','rating','mark_date'</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">``` </span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">- 列删除</span></pre></td></tr><tr><td class="code"><pre><span class="line">  - `axis`</span></pre></td></tr><tr><td class="code"><pre><span class="line">```python</span></pre></td></tr><tr><td class="code"><pre><span class="line">data = data.drop([<span class="string">'Room'</span>,<span class="string">'Day'</span>,<span class="string">'UTC'</span>,<span class="string">'Time'</span>],axis=<span class="number">1</span>)</span></pre></td></tr></table></figure>
</li>
<li><p>字符串类型列的操作</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data.insert(<span class="number">0</span>,<span class="string">'date'</span>,data[<span class="string">'UTC'</span>].str[:<span class="number">10</span>])</span></pre></td></tr></table></figure>
</li>
<li><p>列改名<br><a href="https://www.jianshu.com/p/9e43c7bc26cb" target="_blank" rel="noopener">https://www.jianshu.com/p/9e43c7bc26cb</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data = data.rename(columns=&#123;<span class="string">'Timestamp UTC ms'</span>:<span class="string">'date'</span>&#125;)</span></pre></td></tr><tr><td class="code"><pre><span class="line">``` </span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">## 列数据类型</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">https://www.jb51.net/article/<span class="number">139630.</span>htm</span></pre></td></tr><tr><td class="code"><pre><span class="line">- 在对数据进行处理之前应该先查看加载数据的相关信息</span></pre></td></tr><tr><td class="code"><pre><span class="line">```python</span></pre></td></tr><tr><td class="code"><pre><span class="line">data.info()</span></pre></td></tr></table></figure></li>
<li>修改某一列的数据类型<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">data[<span class="string">'UTC'</span>] = data[<span class="string">'UTC'</span>].astype(<span class="string">'str'</span>)</span></pre></td></tr></table></figure>
</li>
</ul>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Comsol学习笔记</title>
    <url>/others/Comsol_notebook/</url>
    <content><![CDATA[<p>Comsol图形界面<br><a id="more"></a></p>
<h1 id="全局定义"><a href="#全局定义" class="headerlink" title="全局定义"></a>全局定义</h1><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><ul>
<li>函数<br><a href="https://wenku.baidu.com/view/f3b5dcfc2cc58bd63086bd13.html" target="_blank" rel="noopener">https://wenku.baidu.com/view/f3b5dcfc2cc58bd63086bd13.html</a></li>
</ul>
<h1 id="组建"><a href="#组建" class="headerlink" title="组建"></a>组建</h1><h2 id="几何"><a href="#几何" class="headerlink" title="几何"></a>几何</h2><ul>
<li><a href="https://cn.comsol.com/video/introduction-to-tutorial-videos-cn" target="_blank" rel="noopener">Comsol视频教程</a></li>
<li><a href="https://cn.comsol.com/model/parabolic-reflector-antenna-15937" target="_blank" rel="noopener">抛物面</a></li>
</ul>
<h2 id="网格"><a href="#网格" class="headerlink" title="网格"></a>网格</h2><ul>
<li><a href="https://cn.comsol.com/blogs/improved-capabilities-for-meshing-with-tetrahedral-elements/" target="_blank" rel="noopener">https://cn.comsol.com/blogs/improved-capabilities-for-meshing-with-tetrahedral-elements/</a></li>
<li><a href="https://cn.comsol.com/blogs/improving-your-meshing-with-partitioning/" target="_blank" rel="noopener">https://cn.comsol.com/blogs/improving-your-meshing-with-partitioning/</a></li>
</ul>
<h1 id="研究"><a href="#研究" class="headerlink" title="研究"></a>研究</h1><ul>
<li><p>计算 与 更新解 的区别  </p>
<blockquote>
<p>更新解的意思是指你通过已经得到的变量再去计算某个你自己定义的变量时，只需要更新一下就可以计算出来，假如你不使用更新解，再你已经完成计算后所定义的变量是非法的，也就是提示你未定义，这时候才需要更新解功能。<br>而它并非是让你通过方程求得的变量的值发生变化，因为方程求解得到的值只能通过再求解方程才能改变，所以你改变了参数（不管是材料属性，方程系数，几何等参数）必须要重新计算才行；<br>你设想一下，通过一个复杂方程计算才能得到的结果，怎么可能通过一个刷新功能就能重新获得呢？</p>
</blockquote>
<p>出自:<a href="http://muchong.com/t-12315330-1" target="_blank" rel="noopener">小木虫</a></p>
</li>
</ul>
<h1 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h1><h2 id="数据导出"><a href="#数据导出" class="headerlink" title="数据导出"></a>数据导出</h2><p>在结果选择要导出的物理场数据<br><img src="/others/Comsol_notebook/result.png" alt="result"><br>比如电场, 由于电场是 <strong>向量场</strong> , 需要选择<code>体箭头</code><br>右键体箭头选择<code>添加要导出的绘图数据</code>或者<code>将绘图数据复制到剪贴板</code><br>前者还需要再点击<code>导出</code>进行导出的配置, 后者自己新建一个<code>txt</code>文件copy进去就好了</p>
<p>如果是 <strong>标量场</strong> 就选择<code>体</code>就好了.</p>
]]></content>
      <tags>
        <tag>Comsol</tag>
      </tags>
  </entry>
  <entry>
    <title>FFmpeg下载安装</title>
    <url>/others/FFmpeg_Install/</url>
    <content><![CDATA[<p>为什么需要这玩意呢?<br>因为matplotlib动图保存需要它</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ani.save(<span class="string">'vedio.mp4'</span>, extra_args=[<span class="string">'-vcodec'</span>, <span class="string">'libx264'</span>])</span></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h1><p>简单粗暴一句话</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo apt-get install ffmpeg</span></pre></td></tr></table></figure>
<h1 id="Windows-amp-MacOS"><a href="#Windows-amp-MacOS" class="headerlink" title="Windows &amp; MacOS"></a>Windows &amp; MacOS</h1><p><a href="http://ffmpeg.org/" target="_blank" rel="noopener">FFmpeg官网</a></p>
<p>往下滑看到下图</p>
<p><img src="/others/FFmpeg_Install/static.png" alt="build"></p>
<p>选择<code>static and shared</code>的</p>
<p><img src="/others/FFmpeg_Install/build.png" alt="build"></p>
<p>按默认选项来就好了,直接download,然后解压<br>再把<code>bin</code>文件夹路径添加到环境变量中</p>
<h1 id="安装成功检测"><a href="#安装成功检测" class="headerlink" title="安装成功检测"></a>安装成功检测</h1><p>在命令行测试</p>
<pre><code class="lang-shell">ffmpeg -version
</code></pre>
]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>安装</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言简记</title>
    <url>/others/c-code-note/</url>
    <content><![CDATA[<p>C语言的一些基础笔记</p>
<a id="more"></a>
<h1 id="static-关键字"><a href="#static-关键字" class="headerlink" title="static 关键字"></a><code>static</code> 关键字</h1><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><h3 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h3><ul>
<li><strong>普通局部变量</strong> <ul>
<li>存储于进程栈空间，使用完毕会立即释放。</li>
</ul>
</li>
<li><strong>静态局部变量</strong><ul>
<li>即使在声明时未赋初值，编译器也会把它初始化为0。</li>
<li>存储于进程的全局数据区，<u>即使函数返回，它的值也会保持不变。</u></li>
</ul>
</li>
</ul>
<h3 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h3><ul>
<li><strong>普通全局变量</strong> <ul>
<li>对整个工程可见，其他文件可以使用<code>extern</code>外部声明后直接使用。</li>
<li>也就是说其他文件不能再定义一个与其相同名字的变量了（否则编译器会认为它们是同一个变量）。</li>
</ul>
</li>
<li><strong>静态全局变量</strong><ul>
<li>仅对当前文件可见，其他文件不可访问，其他文件可以定义与其同名的变量，两者互不影响。</li>
<li>在定义不需要与其他文件共享的全局变量时，加上static关键字能够有效地降低程序模块之间的耦合，避免不同文件同名变量的冲突，且不会误使用。</li>
</ul>
</li>
</ul>
<h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><ul>
<li>静态函数只能在声明它的文件中可见，其他文件不能引用该函数</li>
<li>不同的文件可以使用相同名字的静态函数，互不影响</li>
<li>非静态函数可以在另一个文件中直接引用，甚至不必使用<code>extern</code>声明</li>
</ul>
<blockquote>
<p>参考资料: <a href="https://blog.csdn.net/guotianqing/article/details/79828100" target="_blank" rel="noopener">https://blog.csdn.net/guotianqing/article/details/79828100</a></p>
</blockquote>
<h1 id="条件运算符"><a href="#条件运算符" class="headerlink" title="条件运算符 ?:"></a>条件运算符 <code>?:</code></h1><ul>
<li>右结合性</li>
<li><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">w&lt;x ? x+w : x&lt;y ? x : y</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// 与</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">w&lt;x ? x+w : ( x&lt;y ? x : y) <span class="comment">//等价</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">(w&lt;x ? x+w : x&lt;y) ? x : y  <span class="comment">//不等价</span></span></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="一些比较经典的报错"><a href="#一些比较经典的报错" class="headerlink" title="一些比较经典的报错"></a>一些比较经典的报错</h1><h2 id="main函数"><a href="#main函数" class="headerlink" title="main函数"></a>main函数</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;usr&#x2F;lib&#x2F;gcc&#x2F;i686-linux-gnu&#x2F;4.4.5&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;lib&#x2F;crt1.o: In function &#96;_start&#39;:</span></pre></td></tr><tr><td class="code"><pre><span class="line">(.text+0x18): undefined reference to &#96;main&#39;</span></pre></td></tr><tr><td class="code"><pre><span class="line">collect2: ld returned 1 exit status</span></pre></td></tr></table></figure>
<p>其实只是代码粗心把<code>main()</code>函数打错了, 比如<code>mian()</code></p>
<hr>
<p>reference:</p>
<ul>
<li><a href="https://blog.csdn.net/jjzhoujun2010/article/details/6525170" target="_blank" rel="noopener">https://blog.csdn.net/jjzhoujun2010/article/details/6525170</a></li>
</ul>
]]></content>
      <tags>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>代码轶闻录</title>
    <url>/others/little_stories/</url>
    <content><![CDATA[<h1 id="鱼丸-R-K-bug全集"><a href="#鱼丸-R-K-bug全集" class="headerlink" title="鱼丸(R.K.)bug全集"></a>鱼丸(R.K.)bug全集</h1><a id="more"></a>
<h2 id="1-a是什么"><a href="#1-a是什么" class="headerlink" title="1. \a是什么"></a>1. <code>\a</code>是什么</h2><p>   鱼丸今天刚把<code>cygwin</code>装上,开开心❤地打开了vscode写c代码,结果突然和我说”诶,这个vscode怎么跑不了c啊”.于是我看了下他的测试代码</p>
   <figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"\a"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"\a"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"\a"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"\a"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"\a"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"\a"</span>);</span></pre></td></tr></table></figure>
<p>   “没事你加个杠干哈呀…”<br>   然后我百度了一下<code>\a</code>,直接printf是提示音响.<br>   “你跑程序时候就没听到什么东西吗???”<br>   “我也不知道为啥加了个杠…”</p>
<h2 id="2-为什么四重循环只循环了一次"><a href="#2-为什么四重循环只循环了一次" class="headerlink" title="2. 为什么四重循环只循环了一次"></a>2. 为什么四重循环只循环了一次</h2><p>鱼丸正在赶算法课的小项目作业，突然和我说他的冒泡排序出了问题<br>我试了一下，的确，循环不对劲。<br>老套路<code>printf</code>大法好,首先在最外层循环打印循环变量<code>printf(&quot;i = %d\n&quot;,i)</code><br>结果怎么运行都只<code>printf</code>一次<br>输出结果:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">i = <span class="number">1</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// 然后就没了...</span></span></pre></td></tr></table></figure>
<p>好吧,有点蒙,然后抱着瞎猫心态在所有循环外再打印一次<code>i</code><br>输出结果:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">i = <span class="number">1</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">i = <span class="number">10</span></span></pre></td></tr></table></figure>
<p>?????嗯??????10?????<br>然后再认真看看里面几层的循环变量名<br><img src="/others/little_stories/02循环一次.png" alt="只循环一次"><br>手动微笑</p>
<h1 id="未命名"><a href="#未命名" class="headerlink" title="未命名"></a>未命名</h1><h2 id="我用pencil"><a href="#我用pencil" class="headerlink" title="我用pencil"></a>我用pencil</h2><p>“你打算用什么建模呀?”<br>“用pencil吧”<br>“???????你说什么??”<br>“pencil吧”<br>“你再说一次?????”<br>“哦哦Python”<br>“……”</p>
<blockquote>
<p>chat with 马福禄</p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>基本算法简要</title>
    <url>/algorithm/algorithm-note-2018/</url>
    <content><![CDATA[<p><em>算法知识简要大纲</em><br><a id="more"></a></p>
<!-- @import "[TOC]" {cmd="toc" depthFrom=1 depthTo=6 orderedList=false} -->
<!-- code_chunk_output -->
<ul>
<li><a href="#算法分析">算法分析</a><ul>
<li><a href="#递归简论">递归简论</a></li>
<li><a href="#时间复杂度">时间复杂度</a></li>
</ul>
</li>
<li><a href="#表-栈-队列">表、栈、队列</a><ul>
<li><a href="#表adt链表-list">表ADT(链表) List</a></li>
<li><a href="#栈adt-stack">栈ADT Stack</a></li>
<li><a href="#队列-queue">队列 Queue</a></li>
</ul>
</li>
<li><a href="#树-tree">树 Tree</a><ul>
<li><a href="#预备知识">预备知识</a></li>
<li><a href="#遍历">遍历</a></li>
<li><a href="#二叉树">二叉树</a></li>
<li><a href="#avl树-adelson-velsky-和-landis">AVL树 (Adelson-Velsky 和 Landis)</a></li>
<li><a href="#伸展树-splay-tree">伸展树 splay tree</a></li>
<li><a href="#b-树-b-tree">B-树 (B-tree)</a></li>
<li><a href="#分析树">分析树</a></li>
</ul>
</li>
<li><a href="#哈希-hash">哈希 Hash</a><ul>
<li><a href="#哈希函数">哈希函数</a></li>
<li><a href="#分离链表法拉链法">分离链表法(拉链法)</a></li>
<li><a href="#开放定址法">开放定址法</a><ul>
<li><a href="#线性探测法">线性探测法</a></li>
<li><a href="#平方散列法">平方散列法</a></li>
<li><a href="#双倍散列">双(倍)散列</a></li>
<li><a href="#再散列">再散列</a></li>
</ul>
</li>
<li><a href="#可扩散列">可扩散列</a></li>
</ul>
</li>
<li><a href="#优先队列堆-heap">优先队列（堆） Heap</a><ul>
<li><a href="#二叉堆-binary-heap">二叉堆 binary heap</a><ul>
<li><a href="#基本堆操作">基本堆操作</a></li>
<li><a href="#应用">应用</a></li>
</ul>
</li>
<li><a href="#d-堆">d-堆</a></li>
<li><a href="#左式堆">左式堆</a></li>
<li><a href="#斜堆">斜堆</a></li>
<li><a href="#二项队列">二项队列</a></li>
</ul>
</li>
<li><a href="#图论-graph">图论 Graph</a><ul>
<li><a href="#基本概念">基本概念</a><ul>
<li><a href="#基本术语">基本术语</a></li>
<li><a href="#图的分类">图的分类</a></li>
</ul>
</li>
<li><a href="#存储显示方式">存储显示方式</a><ul>
<li><a href="#邻接矩阵-adjacency-matrices">邻接矩阵 adjacency matrices</a></li>
<li><a href="#邻接表">邻接表</a></li>
<li><a href="#链接多重表">链接多重表</a></li>
</ul>
</li>
<li><a href="#操作">操作</a><ul>
<li><a href="#拓扑排序httpswwwcnblogscomen-hengp5085690html">拓扑排序</a></li>
<li><a href="#最短路径">最短路径</a></li>
<li><a href="#略">略……</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<!-- /code_chunk_output -->
<p><strong>抽象数据类型(Abstract Data Type, ADT)</strong><br>抽象数据类型的特征是 <strong>实现</strong> 与 <strong>操作</strong> 分离，从而实现 <strong>封装</strong> 。<br>抽象数据类型体现了程序设计中 <strong>问题分解</strong> 和 <strong>信息隐藏</strong> 的特征。它把问题分解为多个规模较小且容易处理的问题，然后把每个功能模块的实现为一个独立单元，通过一次或多次调用来实现整个问题。</p>
<ul>
<li>可视化网站<ul>
<li><a href="https://visualgo.net/zh" target="_blank" rel="noopener">VisuAlgo</a></li>
<li><a href="https://github.com/MisterBooo/LeetCodeAnimation" target="_blank" rel="noopener">LeetCodeAnimation</a></li>
</ul>
</li>
</ul>
<h1 id="算法分析"><a href="#算法分析" class="headerlink" title="算法分析"></a>算法分析</h1><h2 id="递归简论"><a href="#递归简论" class="headerlink" title="递归简论"></a>递归简论</h2><ol>
<li><strong>基准情况</strong>：在某一情况下无须递归就会return。</li>
<li><strong>不断推进</strong>：每一次递归都往基准推进。</li>
<li><strong>设计法则</strong>：所有递归都能调用。</li>
<li><strong>合成效益法则</strong>：在同一个问题中，勿在不同递归调用中做同一个工作</li>
</ol>
<h2 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="时间复杂度"></a>时间复杂度</h2><p>(大概是看看就好了吧)</p>
<ul>
<li>定义：如果存在正常数$𝑐$和$𝑛_0$, 使当$𝑁≥𝑛_0$时$𝑇(𝑁)≤𝑐𝑓(𝑁)$, 则记为$𝑇(𝑁)=\mathcal{O}(𝑓(𝑁))$</li>
<li>定义：如果存在正常数$𝑐$和$𝑛_0$, 使当$𝑁≥𝑛_0$时$𝑇(𝑁)≥𝑐𝑔(𝑁)$, 则记为$𝑇(𝑁)=Ω(𝑔(𝑁))$</li>
<li>定义：$𝑇(𝑁)=Θ(ℎ(𝑁)$当且仅当$𝑇(𝑁)=\mathcal{O}(ℎ(𝑁))$且$𝑇(𝑁)=Ω(ℎ(𝑁))$</li>
<li>定义：如果$𝑇(𝑁)=\mathcal{O}(𝑝(𝑁))$且$𝑇(𝑁)≠Ω(𝑝(𝑁))$, $𝑇(𝑁)=\mathcal{O}(𝑝(𝑁))$</li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">名称</th>
<th style="text-align:center">运行时间T(N)</th>
<th style="text-align:center">算法举例</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">常数时间</td>
<td style="text-align:center">$\mathcal{O}(1)$</td>
<td style="text-align:center">判断一个二进制数的奇偶</td>
</tr>
<tr>
<td style="text-align:center">对数时间</td>
<td style="text-align:center">$\mathcal{O}(log⁡N)$</td>
<td style="text-align:center">二分搜索</td>
</tr>
<tr>
<td style="text-align:center">（小于1次）幂时间</td>
<td style="text-align:center">$\mathcal{O}(N^c)$其中$0&lt;c&lt;1$</td>
<td style="text-align:center">K-d树的搜索操作</td>
</tr>
<tr>
<td style="text-align:center">线性时间</td>
<td style="text-align:center">$\mathcal{O}(N)$</td>
<td style="text-align:center">无序数组的搜索</td>
</tr>
<tr>
<td style="text-align:center">线性对数时间</td>
<td style="text-align:center">$\mathcal{O}(N\log{⁡N})$</td>
<td style="text-align:center">最快的比较排序</td>
</tr>
<tr>
<td style="text-align:center">二次时间</td>
<td style="text-align:center">$\mathcal{O}(N^2)$</td>
<td style="text-align:center">冒泡排序、插入排序</td>
</tr>
<tr>
<td style="text-align:center">三次时间</td>
<td style="text-align:center">$\mathcal{O}(N^3)$</td>
<td style="text-align:center">矩阵乘法的基本实现，计算部分相关性</td>
</tr>
<tr>
<td style="text-align:center">指数时间</td>
<td style="text-align:center">$\mathcal{O}(2^N)$</td>
<td style="text-align:center">/</td>
</tr>
</tbody>
</table>
</div>
<center><img src="/algorithm/algorithm-note-2018/时间复杂度.png" width="50%" alt="时间复杂度" align="center"></center>

<!-- ![时间复杂度](algorithm-note-2018/时间复杂度.png) -->
<ul>
<li>计算时间复杂度<ul>
<li>一层循环的时间复杂度为$𝑂(𝑁)$ </li>
<li>多层嵌套循环的时间复杂度是每层循环的时间复杂度之积$𝑂(𝑁^n)$ </li>
<li><code>if…else…</code> /<code>case…switch…</code>语句中取各个分支中<strong>最长</strong>的时间作为时间开销</li>
</ul>
</li>
</ul>
<h1 id="表、栈、队列"><a href="#表、栈、队列" class="headerlink" title="表、栈、队列"></a>表、栈、队列</h1><h2 id="表ADT-链表-List"><a href="#表ADT-链表-List" class="headerlink" title="表ADT(链表) List"></a>表ADT(链表) List</h2><p>习惯上会留出一个 <strong>标志节点</strong> , 有时称之为 <strong>表头(header)</strong> 或 <strong>哑节点(dummy node)</strong> </p>
<ul>
<li><a href="https://visualgo.net/en/list" target="_blank" rel="noopener">动画</a></li>
<li>Head File</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span> *<span class="title">PtrToNode</span>;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> PtrToNode List;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> PtrToNode Position;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> ElementType;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// series of functions</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// ......</span></span></pre></td></tr></table></figure>
<ul>
<li>结构体定义</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>&#123;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    ElementType Element;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Position Next;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="comment">// 可以加一个前置节点, 则成为双链表</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;;</span></pre></td></tr></table></figure>
<ul>
<li><p>Find 查询<br>其实就是从头遍历</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">Position <span class="title">Find</span><span class="params">( ElementType X, List L)</span></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Position P;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    P = L-&gt;Next;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">while</span>( P != <span class="literal">NULL</span> &amp;&amp; P-&gt;Element != X)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        P = P-&gt;Next;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">return</span> P;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
</li>
<li><p>FindPrevious 查询前一个节点<br>和Find类似, 区别仅在line2,3</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">Position <span class="title">FindPrevious</span><span class="params">( ElementType X, List L)</span></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Position P;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    P = L;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">while</span>(P-&gt;Next != <span class="literal">NULL</span> &amp;&amp; P-&gt;Next-&gt;Element != X)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        P = P-&gt;Next;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">return</span> P;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
</li>
<li><p>Delete 删除</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Delete</span><span class="params">( ElementType X, List L)</span></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Position P, TmpCell;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    P = FindPrevious(X, L);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">if</span> ( !IsLast( P, L) )&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        TmpCell = P-&gt;Next;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        P-&gt;Next = TmpCell-&gt;Next;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="built_in">free</span>(TmpCell); <span class="comment">// 及时释放内存空间</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
</li>
<li><p>Insert 插入 </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">( ElementType X, List L, Position P)</span></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Position TmpCell;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    TmpCell = <span class="built_in">malloc</span>( <span class="keyword">sizeof</span> (struct Node));</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">if</span> (TmpCell == <span class="literal">NULL</span>)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">// FatalError("Out of space!!!");</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="built_in">printf</span>(<span class="string">"Out of space!!!"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    TmpCell-&gt;Element = X;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    TmpCell-&gt;Next = P-&gt;Next;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    P-&gt;Next = TmpCell;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></li>
<li>其他类型<ul>
<li>双链表</li>
<li>循环链表</li>
<li>多重表</li>
</ul>
</li>
<li><a href="https://visualgo.net/zh/sorting" target="_blank" rel="noopener">基数排序(radix sort)</a><ul>
<li>低位排序LSD</li>
<li>高位排序MSD</li>
</ul>
</li>
<li>游标(cursor)实现法<br>需要链表又不能使用指针(如 BASIC 和 FORTRAN 等)</li>
</ul>
<h2 id="栈ADT-Stack"><a href="#栈ADT-Stack" class="headerlink" title="栈ADT Stack"></a>栈ADT Stack</h2><p>又名 <strong>LIFO(先进后出)表</strong><br>基本上就<code>Pop(出栈)</code>和<code>Push(进栈)</code>操作</p>
<ul>
<li><p>实现</p>
<ul>
<li>链表实现<br>主要时间花费在于分配新空间和删除弹出的结点 </li>
<li>数组实现<br>唯一潜在危害: 需要提前声明一个数组大小</li>
</ul>
</li>
<li><p>应用</p>
<ul>
<li>后缀表达式<ul>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzUyNjQxNjYyMg==&amp;mid=2247483834&amp;idx=1&amp;sn=27cbff99f10dfcdb56cb37c237d7f2bb&amp;chksm=fa0e6e3bcd79e72dc430bf81aed9dde9bd01634239dcf7820d6befa881efd323d9d58d76d90d&amp;scene=21#wechat_redirect" target="_blank" rel="noopener">逆波兰表达式</a></li>
</ul>
</li>
<li>中缀到后缀的转换</li>
<li>函数调用<ul>
<li><a href="https://www.bing.com/search?q=%E5%B0%BE%E9%80%92%E5%BD%92" target="_blank" rel="noopener">尾递归(TODO:未懂)</a><br>执行的任何递归调用是在这种情况下的最后操作,而且通过封闭递归,递归调用的返回值(若有)立即返回.<br>必须是 <strong>线性递归</strong> (递归内只调用一个新的递归)</li>
</ul>
</li>
<li>平衡符号<!-- ![平衡符号](algorithm-note-2018/平衡符号.gif) -->
</li>
</ul>
</li>
</ul>
<center><img src="/algorithm/algorithm-note-2018/平衡符号.gif" width="50%" alt="平衡符号" align="center"></center>

<h2 id="队列-Queue"><a href="#队列-Queue" class="headerlink" title="队列 Queue"></a>队列 Queue</h2><ul>
<li>基本操作<ul>
<li><code>Enqueue</code> 入队 : 在表的末端(队尾rear)插入一个元素</li>
<li><code>Dequeue</code> 出队 : 删除 / 返回 表的开头(队头front)</li>
</ul>
</li>
<li>实现<ul>
<li>链表实现 </li>
<li>数组实现(循环数组circular array实现)</li>
</ul>
</li>
<li>应用<ul>
<li>排队论(queueing theory)</li>
</ul>
</li>
</ul>
<h1 id="树-Tree"><a href="#树-Tree" class="headerlink" title="树 Tree"></a>树 Tree</h1><h2 id="预备知识"><a href="#预备知识" class="headerlink" title="预备知识"></a>预备知识</h2><ul>
<li>基本术语</li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">术语</th>
<th style="text-align:center">定义</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">根(root)</td>
<td style="text-align:center">/</td>
</tr>
<tr>
<td style="text-align:center">边(edge)</td>
<td style="text-align:center">连接节点的有向线</td>
</tr>
<tr>
<td style="text-align:center">- - -</td>
<td style="text-align:center">- - -</td>
</tr>
<tr>
<td style="text-align:center">子节点(child)</td>
<td style="text-align:center">一个节点含有的子树的根节点称为该节点的<code>子节点</code></td>
</tr>
<tr>
<td style="text-align:center">父节点(parent)</td>
<td style="text-align:center">若一个节点含有<code>子节点</code>，则这个节点称为其<code>子节点</code>的<code>父节点</code></td>
</tr>
<tr>
<td style="text-align:center">兄弟节点(sibling)</td>
<td style="text-align:center">具有相同<code>父节点</code>的节点互称为兄弟节点</td>
</tr>
<tr>
<td style="text-align:center">堂兄弟节点</td>
<td style="text-align:center">双亲在同一层的节点互为堂兄弟</td>
</tr>
<tr>
<td style="text-align:center">祖先(grandparent)</td>
<td style="text-align:center">从根到该节点所经分支上的所有节点</td>
</tr>
<tr>
<td style="text-align:center">子孙(grandchild)</td>
<td style="text-align:center">以某节点为根的子树中任一节点都称为该节点的子孙</td>
</tr>
<tr>
<td style="text-align:center">- - -</td>
<td style="text-align:center">- - -</td>
</tr>
<tr>
<td style="text-align:center">树叶(leaf)</td>
<td style="text-align:center">没有<code>子节点</code>的节点</td>
</tr>
<tr>
<td style="text-align:center">从节点$n_1$到$n_k$的路径(path)</td>
<td style="text-align:center">节点$n_1, n_2, \cdots,n_k$的一个序列</td>
</tr>
<tr>
<td style="text-align:center">路径的长(length)</td>
<td style="text-align:center">路径上边的条数</td>
</tr>
<tr>
<td style="text-align:center"><strong>深度(depth)</strong></td>
<td style="text-align:center">从根到$n_i$的位移路径的长</td>
</tr>
<tr>
<td style="text-align:center"><strong>高度(height)</strong></td>
<td style="text-align:center">从$n_i$到一片树叶的最长路径的长</td>
</tr>
<tr>
<td style="text-align:center">树的高度或深度</td>
<td style="text-align:center">树中节点的最大层次</td>
</tr>
<tr>
<td style="text-align:center">- - -</td>
<td style="text-align:center">- - -</td>
</tr>
<tr>
<td style="text-align:center">非终端节点或分支节点</td>
<td style="text-align:center">度不为0的节点</td>
</tr>
<tr>
<td style="text-align:center">节点的层次</td>
<td style="text-align:center">从根开始定义起，根为第1层，根的<code>子节点</code>为第2层，以此类推</td>
</tr>
<tr>
<td style="text-align:center">节点的度</td>
<td style="text-align:center">一个节点含有的子树的个数称为该节点的度</td>
</tr>
<tr>
<td style="text-align:center">树的度</td>
<td style="text-align:center">一棵树中，最大的节点的度称为树的度</td>
</tr>
<tr>
<td style="text-align:center">森林</td>
<td style="text-align:center">由m（m&gt;=0）棵互不相交的树的集合称为森林</td>
</tr>
</tbody>
</table>
</div>
<ul>
<li>种类<ul>
<li>无序树：树中任意节点的子结点之间没有顺序关系，这种树称为无序树,也称为自由树;</li>
</ul>
<ul>
<li>有序树：树中任意节点的子结点之间有顺序关系，这种树称为有序树；</li>
<li><strong>二叉树</strong>：每个节点最多含有两个子树的树称为二叉树；</li>
<li><strong>完全二叉树</strong></li>
<li>满二叉树</li>
<li>霍夫曼树：带权路径最短的二叉树称为哈夫曼树或最优二叉树；</li>
</ul>
</li>
</ul>
<h2 id="遍历"><a href="#遍历" class="headerlink" title="遍历"></a>遍历</h2><!--
|                       |                  | 遍历顺序   | 应用                                          | 顺序 | 动画 |
| --------------------- | ---------------- | ---------- | :-------------------------------------------- |
| [先序遍历][Preorder]  | 显示文件夹结构   | 中->左->右 | ![前序遍历](algorithm-note-2018/前序遍历.gif) |
| [后序遍历][Postorder] | 计算文件夹总大小 | 左->右->中 | ![后序遍历](algorithm-note-2018/后序遍历.gif) |
| [中序遍历][In-order]  | 表达式树         | 左->中->右 | ![中序遍历](algorithm-note-2018/中序遍历.gif) |
| [层序遍历][Sequence]  |                  |            | ![层序遍历](algorithm-note-2018/层序遍历.gif) |      |      |
-->
<div class="table-container">
<table>
<thead>
<tr>
<th>遍历顺序</th>
<th>应用</th>
<th>顺序</th>
<th style="text-align:left">动画</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://mp.weixin.qq.com/s?__biz=MzUyNjQxNjYyMg==&amp;mid=2247483843&amp;idx=1&amp;sn=994bf0d42dd9941a879a3a3ed500a4d6" target="_blank" rel="noopener">先序遍历</a></td>
<td>显示文件夹结构</td>
<td>中-&gt;左-&gt;右</td>
<td style="text-align:left">:<span><img src="/algorithm/algorithm-note-2018/前序遍历.gif" width="450px" alt="前序遍历" align="center"></span></td>
</tr>
<tr>
<td><a href="http://mp.weixin.qq.com/s?__biz=MzUyNjQxNjYyMg==&amp;mid=2247483853&amp;idx=1&amp;sn=94cd4b4ee8dc2268290a72334c6af57b" target="_blank" rel="noopener">后序遍历</a></td>
<td>计算文件夹总大小</td>
<td>左-&gt;右-&gt;中</td>
<td style="text-align:left">:<span><img src="/algorithm/algorithm-note-2018/后序遍历.gif" width="450px" alt="后序遍历" align="center"></span></td>
</tr>
<tr>
<td><a href="http://mp.weixin.qq.com/s?__biz=MzUyNjQxNjYyMg==&amp;mid=2247483853&amp;idx=1&amp;sn=94cd4b4ee8dc2268290a72334c6af57b" target="_blank" rel="noopener">中序遍历</a></td>
<td>表达式树</td>
<td>左-&gt;中-&gt;右</td>
<td style="text-align:left">:<span><img src="/algorithm/algorithm-note-2018/中序遍历.gif" width="450px" alt="中序遍历" align="center"></span></td>
</tr>
<tr>
<td><a href="http://mp.weixin.qq.com/s?__biz=MzUyNjQxNjYyMg==&amp;mid=2247483868&amp;idx=1&amp;sn=d50041789fcd13a75a2296f620b69d71" target="_blank" rel="noopener">层序遍历</a></td>
<td></td>
<td></td>
<td style="text-align:left">:<span><img src="/algorithm/algorithm-note-2018/层序遍历.gif" width="450px" alt="层序遍历" align="center"></span></td>
</tr>
</tbody>
</table>
</div>
<h2 id="二叉树"><a href="#二叉树" class="headerlink" title="二叉树"></a>二叉树</h2><p><a href="https://visualgo.net/zh/bst" target="_blank" rel="noopener">动画</a></p>
<ul>
<li>种类: 表达式树, <strong>查找树ADT——二叉查找树</strong></li>
<li><p>Head File</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">TreeNode</span>;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">TreeNode</span> *<span class="title">Position</span>;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">TreeNode</span> *<span class="title">SearchTree</span>;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> ElementType;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// series of functions</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// ......</span></span></pre></td></tr></table></figure>
</li>
<li><p>结构体定义</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">TreeNode</span>&#123;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    ElementType Element;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    SearchTree Left;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    SearchTree Right;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;;</span></pre></td></tr></table></figure>
</li>
<li><p>Find 查询</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">Position <span class="title">Find</span><span class="params">( ElementType X, SearchTree T)</span></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">if</span> (T==<span class="literal">NULL</span>)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">if</span>(X&lt;T-&gt;Element)&#123;<span class="comment">// 元素大了</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> Find(X,T-&gt;Left);<span class="comment">// 去找左边小一点的</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(X&gt;T-&gt;Element)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> Find(X,T-&gt;Right);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;<span class="keyword">else</span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> T;<span class="comment">// 返回后类型变为Position了</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
</li>
<li><p>Insert 插入</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">SearchTree <span class="title">Insert</span><span class="params">( ElementType X, SearchTree T)</span></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">if</span> (T==<span class="literal">NULL</span>)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="comment">//创建并返回一个一节点树</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        T = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct TreeNode));</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (T==<span class="literal">NULL</span>)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="built_in">printf</span>(<span class="string">"out of space!!!"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;<span class="keyword">else</span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            T-&gt;Element = X;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            T-&gt;Left = T-&gt;Right = <span class="literal">NULL</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(X &lt; T-&gt;Element)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        T-&gt;Left = Insert(X,T-&gt;Left);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(X &gt; T-&gt;Element)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        T-&gt;Right = Insert(X,T-&gt;Right);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;<span class="keyword">else</span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d is already in tree...\n"</span>,X);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">return</span> T;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
</li>
<li><p>Delete 删除节点</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//<span class="doctag">TODO:</span></span></span></pre></td></tr></table></figure>
</li>
<li><p>PrintTree 打印树</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PrintTree</span><span class="params">( SearchTree T,<span class="keyword">int</span> space,<span class="keyword">int</span> LR,<span class="keyword">int</span> *N)</span></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="comment">// LR: 标志左右节点的参数,用以打印`/`或`\`</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="comment">// *N: 打印前N个节点</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">int</span> len = <span class="number">10</span>; <span class="comment">// 每一层的打印间距(空格)</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">if</span> (T!=<span class="literal">NULL</span> &amp;&amp; (*N)&gt;<span class="number">0</span>)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        (*N)--;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        PrintTree(T-&gt;Right,space+len,<span class="number">1</span>,N);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> loop = <span class="number">0</span>;loop&lt;space; loop++)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="built_in">printf</span>(<span class="string">" "</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span>(LR==<span class="number">1</span>)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="built_in">printf</span>(<span class="string">"/"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(LR==<span class="number">0</span>)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="built_in">printf</span>(<span class="string">"\\"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="built_in">printf</span>(<span class="string">"%-6d\n"</span>,T-&gt;Element);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        PrintTree(T-&gt;Left,space+len,<span class="number">0</span>,N);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="AVL树-Adelson-Velsky-和-Landis"><a href="#AVL树-Adelson-Velsky-和-Landis" class="headerlink" title="AVL树 (Adelson-Velsky 和 Landis)"></a>AVL树 (Adelson-Velsky 和 Landis)</h2><p><a href="https://visualgo.net/zh/bst" target="_blank" rel="noopener">动画</a></p>
<ul>
<li>定义: 每个节点的左子树和有字数的高度最大相差1的二叉查找树</li>
<li>深度: $\mathcal{O}(\log{N})$</li>
<li>旋转<ul>
<li>单旋转<br>相邻子树高度相差大于等于2</li>
<li>双旋转<br>相邻子树高度相差为1<!-- ![旋转树](http://img.my.csdn.net/uploads/201210/10/1349877565_2986.png) -->
</li>
</ul>
</li>
</ul>
<h2 id="伸展树-splay-tree"><a href="#伸展树-splay-tree" class="headerlink" title="伸展树 splay tree"></a>伸展树 splay tree</h2><ul>
<li>基本想法: 当一个节点被访问后,它就要经过一系列AVL树的旋转被放到根上</li>
<li>两种情况<ul>
<li>之字形(zig-zag): AVL双旋转<!-- ![之字形](http://img.my.csdn.net/uploads/201210/10/1349877709_4105.png) --></li>
<li>一字形(zig-zig): AVL单旋转两次<!-- ![一字形](http://img.my.csdn.net/uploads/201210/10/1349877744_7090.png) -->
</li>
</ul>
</li>
</ul>
<h2 id="B-树-B-tree"><a href="#B-树-B-tree" class="headerlink" title="B-树 (B-tree)"></a>B-树 (B-tree)</h2><p>不是二叉树的查找树</p>
<ul>
<li>称呼<ul>
<li>4阶B-树 == 2-3-4树</li>
<li>3阶B-树 == 2-3树</li>
</ul>
</li>
</ul>
<p><a href="https://www.jianshu.com/p/7dedb7ebe033" target="_blank" rel="noopener">考试好像不考但是先马克这个博客吧</a></p>
<h2 id="分析树"><a href="#分析树" class="headerlink" title="分析树"></a>分析树</h2><p><em>这个好像也不考</em></p>
<h1 id="哈希-Hash"><a href="#哈希-Hash" class="headerlink" title="哈希 Hash"></a>哈希 Hash</h1><p>又名散列</p>
<h2 id="哈希函数"><a href="#哈希函数" class="headerlink" title="哈希函数"></a>哈希函数</h2><ul>
<li>简单<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">Index <span class="title">HashNormal</span><span class="params">(ElementType Key, <span class="keyword">int</span> TableSize)</span></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="keyword">return</span> Key%TableSize;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></li>
<li>优秀<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function">Index <span class="title">HashBeautifully</span><span class="params">(ElementType Key, <span class="keyword">int</span> TableSize)</span></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">ElementType * ptrKey = &amp;Key;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> HashVal = <span class="number">0</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> (*ptrKey !=<span class="string">'\0'</span>)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    HashVal = (HashVal &lt;&lt; <span class="number">5</span>) + *ptrKey++;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">return</span> HashVal % TableSize;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<h2 id="分离链表法-拉链法"><a href="#分离链表法-拉链法" class="headerlink" title="分离链表法(拉链法)"></a>分离链表法(拉链法)</h2></li>
<li><p>头文件</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span>;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span> *<span class="title">Position</span>;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">HashTbl</span>;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">HashTbl</span> *<span class="title">HashTable</span>;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> ElementType;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> Index;</span></pre></td></tr></table></figure>
</li>
<li><p>初始化</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">HashTable </span></pre></td></tr><tr><td class="code"><pre><span class="line">InitializeTable(<span class="keyword">int</span> TableSize)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  HashTable H;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="keyword">int</span> i;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="keyword">if</span> (TableSize &lt; MinTableSize)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="built_in">printf</span>(<span class="string">"Table size too small"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="keyword">return</span> <span class="literal">NULL</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="comment">// allocate table</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  H = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct HashTbl));</span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="keyword">if</span>(H == <span class="literal">NULL</span>)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="built_in">printf</span>(<span class="string">"out of sapce !!!"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="comment">// allocate list headers</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;H-&gt;TableSize; i++)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">      H-&gt;TheLists[i] = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct ListNode));</span></pre></td></tr><tr><td class="code"><pre><span class="line">      <span class="keyword">if</span> (H-&gt;TheLists[i]==<span class="literal">NULL</span>)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">          <span class="built_in">printf</span>(<span class="string">"out of space !!!"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">      &#125;<span class="keyword">else</span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">          H-&gt;TheLists[i]-&gt;Next = <span class="literal">NULL</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">      &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">  <span class="keyword">return</span> H;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></li>
<li><p>结构体定义 </p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">ListNode</span>&#123;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    ElementType Element;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Position Next;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> Position List;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">HashTbl</span>&#123;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">int</span> TableSize;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    List *TheLists;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;;</span></pre></td></tr></table></figure>
</li>
<li><p>Find</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Position </span></pre></td></tr><tr><td class="code"><pre><span class="line">Find( ElementType Key, HashTable H, Index HashNum)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Position P;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    List L;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="comment">// L = H-&gt;TheLists[Hash(Key, H-&gt;TableSize)];</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    L = H-&gt;TheLists[HashNum];</span></pre></td></tr><tr><td class="code"><pre><span class="line">    P = L-&gt;Next;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">while</span>(P!=<span class="literal">NULL</span> &amp;&amp; P-&gt;Element!=Key)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        P=P-&gt;Next;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">return</span> P;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
</li>
<li><p>Insert</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">void</span> </span></pre></td></tr><tr><td class="code"><pre><span class="line">Insert( ElementType Key, HashTable H, Index HashNum)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Position Pos, NewCell;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    List L;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Pos = Find(Key,H,HashNum);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">if</span>(Pos == <span class="literal">NULL</span>)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        NewCell = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct ListNode));</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span> (NewCell == <span class="literal">NULL</span>)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="built_in">printf</span>(<span class="string">"out of space!!!"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;<span class="keyword">else</span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            <span class="comment">// L = H-&gt;TheLists[Hash(Key,H-&gt;TableSize)];</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">            L = H-&gt;TheLists[HashNum];</span></pre></td></tr><tr><td class="code"><pre><span class="line">            NewCell-&gt;Next = L-&gt;Next;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            NewCell-&gt;Element = Key;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            L-&gt;Next = NewCell;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;<span class="keyword">else</span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="built_in">printf</span>(<span class="string">"already have it!\n"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
</li>
<li><p><strong>装填因子(load factor) $\lambda$</strong></p>
<script type="math/tex; mode=display">\lambda = \frac{\text{元素个数}}{\text{散列表大小}}</script><p>尽量让表的大小与预料的元素个数差不多,即 $\lambda\approx 1$ .</p>
</li>
</ul>
<h2 id="开放定址法"><a href="#开放定址法" class="headerlink" title="开放定址法"></a>开放定址法</h2><ul>
<li>头文件<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> Index;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> Index Position;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">HashTbl</span>;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">HashTbl</span> *<span class="title">HashTable</span>;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> ElementType;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// series of functions</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// ......</span></span></pre></td></tr></table></figure></li>
<li><p>基础声明</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MinTableSize 10</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">extern</span> <span class="keyword">int</span> Collision_Square,Collision_Liner,Collision_Double;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">enum</span> KindOfEntry&#123;Legitimate,Empty,Deleted&#125;;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">HashEntry</span>&#123;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    ElementType Element;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">enum</span> KindOfEntry Info;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">HashEntry</span> <span class="title">Cell</span>;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// 哈希表</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">HashTbl</span>&#123;</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">int</span> TableSize;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Cell *TheCells;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;;</span></pre></td></tr></table></figure>
</li>
<li><p>初始化</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">HashTable </span></pre></td></tr><tr><td class="code"><pre><span class="line">InitializeTable(<span class="keyword">int</span> TableSize)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    HashTable H;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">int</span> i;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">if</span>(TableSize&lt;MinTableSize)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="built_in">printf</span>(<span class="string">"Table Size too small"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="comment">// allocate table</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    H = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct HashTbl));</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">if</span> (H == <span class="literal">NULL</span>)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="built_in">printf</span>(<span class="string">"out of space!!!\n"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    H-&gt;TableSize = NextPrime(TableSize);</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="comment">// allocate array of cells</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    H-&gt;TheCells = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Cell) * H-&gt;TableSize);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">if</span> (H-&gt;TheCells == <span class="literal">NULL</span>)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="built_in">printf</span>(<span class="string">"out of space!!!\n"</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"></span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>;i&lt;H-&gt;TableSize;i++)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        H-&gt;TheCells[i].Info = Empty;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">return</span> H;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="线性探测法"><a href="#线性探测法" class="headerlink" title="线性探测法"></a>线性探测法</h3><script type="math/tex; mode=display">F(i) = \text{Hash}(i) + \text{冲突次数} \mod{M}</script><ul>
<li>Find<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Position </span></pre></td></tr><tr><td class="code"><pre><span class="line">FindByLiner(ElementType Key, HashTable H)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Position CurrentPos;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">int</span> CollisionNum;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    CollisionNum = <span class="number">0</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    CurrentPos = HashNormal(Key,H-&gt;TableSize);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">while</span>(H-&gt;TheCells[CurrentPos].Info != Empty &amp;&amp;  <span class="comment">// 非空</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">          H-&gt;TheCells[CurrentPos].Element != Key)&#123;  <span class="comment">// 不等于查询值</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        CurrentPos++;       </span></pre></td></tr><tr><td class="code"><pre><span class="line">        CollisionNum++;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span>(CurrentPos &gt;= H-&gt;TableSize)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            CurrentPos -= H-&gt;TableSize;             <span class="comment">// 循环查找</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;<span class="comment">// 一旦找到就跳出循环</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    Collision_Liner += CollisionNum;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">return</span> CurrentPos;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></li>
<li><p>Insert</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InsertByLiner</span><span class="params">(ElementType Key, HashTable H)</span></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Position Pos;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Pos = FindByLiner(Key,H);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">if</span>(H-&gt;TheCells[Pos].Info != Legitimate)&#123;<span class="comment">// 该位置没有数据</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        H-&gt;TheCells[Pos].Info = Legitimate;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        H-&gt;TheCells[Pos].Element = Key;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
</li>
<li><p>一次聚集(primary clustering)<br>占据的单元形成一些区块</p>
</li>
<li><p>预期探测次数</p>
<ul>
<li>插入 / 不成功的查找 <script type="math/tex">\frac{1}{2}\left(1+ \frac{1}{(1-\lambda)^2}\right)</script></li>
<li>成功的查找  <script type="math/tex">\frac{1}{2}\left(1+ \frac{1}{(1-\lambda)}\right)</script></li>
</ul>
</li>
</ul>
<h3 id="平方散列法"><a href="#平方散列法" class="headerlink" title="平方散列法"></a>平方散列法</h3><script type="math/tex; mode=display">F(i) = \text{Hash}(i) + \text{冲突次数}^2 \mod{M}</script><ul>
<li>快速公式<br><code>CurrentPos += 2 * ++CollisionNum - 1</code><script type="math/tex; mode=display">F(i) = F(i-1) + 2i -1</script></li>
<li>Find<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Position </span></pre></td></tr><tr><td class="code"><pre><span class="line">FindBySquare(ElementType Key, HashTable H)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Position CurrentPos;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">int</span> CollisionNum;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    CollisionNum = <span class="number">0</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    CurrentPos = HashNormal(Key,H-&gt;TableSize);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">while</span>(H-&gt;TheCells[CurrentPos].Info != Empty &amp;&amp;  <span class="comment">// 非空</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">          H-&gt;TheCells[CurrentPos].Element != Key)&#123;  <span class="comment">// 不等于查询值</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        CurrentPos += <span class="number">2</span> * ++CollisionNum - <span class="number">1</span>;       <span class="comment">// 平方探测 快速方法</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span>(CurrentPos &gt;= H-&gt;TableSize)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            CurrentPos -= H-&gt;TableSize;             <span class="comment">// 循环查找</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;<span class="comment">// 一旦找到就跳出循环</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    Collision_Square += CollisionNum;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">return</span> CurrentPos;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure></li>
<li>Insert<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InsertBySquare</span><span class="params">(ElementType Key, HashTable H)</span></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Position Pos;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Pos = FindBySquare(Key,H);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">if</span>(H-&gt;TheCells[Pos].Info != Legitimate)&#123;        <span class="comment">// 该位置没有数据</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        H-&gt;TheCells[Pos].Info = Legitimate;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        H-&gt;TheCells[Pos].Element = Key;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="双-倍-散列"><a href="#双-倍-散列" class="headerlink" title="双(倍)散列"></a>双(倍)散列</h3><script type="math/tex; mode=display">F(i) = \text{Hash}(i) + \text{冲突次数} \times \left(M_2 - \text{Hash}_2(i)\right) \mod{M}</script><ul>
<li><p>Find</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Position </span></pre></td></tr><tr><td class="code"><pre><span class="line">FindByDouble(ElementType Key, HashTable H)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Position CurrentPos;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">int</span> CollisionNum = <span class="number">0</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">int</span> addDouble = HashDoubel(Key,<span class="number">7</span>);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    CurrentPos = HashNormal(Key,H-&gt;TableSize);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">while</span>(H-&gt;TheCells[CurrentPos].Info != Empty &amp;&amp;  <span class="comment">// 非空</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">          H-&gt;TheCells[CurrentPos].Element != Key)&#123;  <span class="comment">// 不等于查询值</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        CurrentPos += addDouble;       </span></pre></td></tr><tr><td class="code"><pre><span class="line">        CollisionNum++;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        <span class="keyword">if</span>(CurrentPos &gt;= H-&gt;TableSize)&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">            CurrentPos -= H-&gt;TableSize;             <span class="comment">// 循环查找</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;<span class="comment">// 一旦找到就跳出循环</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">    Collision_Double += CollisionNum;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">return</span> CurrentPos;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
</li>
<li><p>Insert</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">InsertByDouble</span><span class="params">(ElementType Key, HashTable H)</span></span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Position Pos;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    Pos = FindByDouble(Key,H);</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">if</span>(H-&gt;TheCells[Pos].Info != Legitimate)&#123;        <span class="comment">// 该位置没有数据</span></span></pre></td></tr><tr><td class="code"><pre><span class="line">        H-&gt;TheCells[Pos].Info = Legitimate;</span></pre></td></tr><tr><td class="code"><pre><span class="line">        H-&gt;TheCells[Pos].Element = Key;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    &#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="再散列"><a href="#再散列" class="headerlink" title="再散列"></a>再散列</h3><p>当表有超过 <strong>70%</strong> 的单元是满的, 建立新表<br>新表大小是原表大小两倍后的第一个素数 <script type="math/tex">\text{new} = \text{PrimeNumber}(2\times\text{old})</script></p>
<ul>
<li>实现<ul>
<li>表满一半就<code>再散列</code></li>
<li>当插入失败是才<code>再散列</code></li>
<li><strong>途中(middle-of-the-road)策略</strong> : 当表达到某个装填因子时进行<code>再散列</code></li>
</ul>
</li>
</ul>
<h2 id="可扩散列"><a href="#可扩散列" class="headerlink" title="可扩散列"></a>可扩散列</h2><p>略</p>
<h1 id="优先队列（堆）-Heap"><a href="#优先队列（堆）-Heap" class="headerlink" title="优先队列（堆） Heap"></a>优先队列（堆） Heap</h1><h2 id="二叉堆-binary-heap"><a href="#二叉堆-binary-heap" class="headerlink" title="二叉堆 binary heap"></a>二叉堆 binary heap</h2><p><a href="https://visualgo.net/en/heap" target="_blank" rel="noopener">动画</a><br>堆是一刻完全二叉树(complete binary tree)</p>
<ul>
<li>堆序性 heap order<ul>
<li>最小元在根上</li>
<li>任意节点小于其所有后裔</li>
</ul>
</li>
</ul>
<h3 id="基本堆操作"><a href="#基本堆操作" class="headerlink" title="基本堆操作"></a>基本堆操作</h3><ul>
<li><p>Insert</p>
<ul>
<li><strong>上滤</strong><br>加在队尾然后向上排序</li>
<li>标记 sentinel<br>通过添加一条 哑信息(dummy piece of information) , 避免在<u>插入新的最小值</u>时每个循环都执行一次的测试</li>
</ul>
</li>
<li><p>DeleteMin</p>
<ul>
<li><strong>下滤</strong><br>删除根, 队尾换到队头, 向下排序</li>
</ul>
</li>
</ul>
<h3 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h3><ul>
<li>选择问题</li>
<li>时间模拟</li>
</ul>
<h2 id="d-堆"><a href="#d-堆" class="headerlink" title="d-堆"></a>d-堆</h2><p>略TODO:</p>
<h2 id="左式堆"><a href="#左式堆" class="headerlink" title="左式堆"></a>左式堆</h2><p>略TODO:</p>
<h2 id="斜堆"><a href="#斜堆" class="headerlink" title="斜堆"></a>斜堆</h2><p>略TODO:</p>
<h2 id="二项队列"><a href="#二项队列" class="headerlink" title="二项队列"></a>二项队列</h2><p>略TODO:</p>
<h1 id="图论-Graph"><a href="#图论-Graph" class="headerlink" title="图论 Graph"></a>图论 Graph</h1><ul>
<li><a href="https://blog.csdn.net/NoMasp/article/details/45827145" target="_blank" rel="noopener">详细总论</a></li>
<li>可视化网站<ul>
<li><a href="https://visualgo.net/zh" target="_blank" rel="noopener">算法可视化</a></li>
<li><a href="https://mrpandey.github.io/d3graphTheory/index.html" target="_blank" rel="noopener">对于图的一些基本概念的介绍和一些有趣的问题</a></li>
<li><a href="http://graph.lindongzhou.com/" target="_blank" rel="noopener">图的一些基本操作的实现的可视化</a></li>
</ul>
</li>
</ul>
<h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><ul>
<li><strong>图(Graph)</strong> 是 <strong>顶点(Vertex)</strong> 和 <strong>边(Edge)</strong> 的集合。边是对任意两个顶点的连接。<script type="math/tex">G=(V,E)</script></li>
<li><h3 id="基本术语"><a href="#基本术语" class="headerlink" title="基本术语"></a>基本术语</h3></li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">术语</th>
<th style="text-align:center">定义</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">阶（Order）</td>
<td style="text-align:center">图中顶点的个数</td>
</tr>
<tr>
<td style="text-align:center">尺寸（Size）</td>
<td style="text-align:center">图中边的个数</td>
</tr>
<tr>
<td style="text-align:center">子图（Sub-graph）</td>
<td style="text-align:center">一个图的顶点与边的子集。即，当$𝑉(𝐺’)∈𝑉(𝐺)$并且$𝐸(𝐺’ )∈𝐸(𝐺)$时，$𝐺’$是$𝐺$的一个子图</td>
</tr>
<tr>
<td style="text-align:center">生成子图（Sub-graph）</td>
<td style="text-align:center">当$𝐺’$是$𝐺$的子集，并且$𝑉(𝐺’ )=𝑉(𝐺)$时， $𝐺’$是$𝐺$的一个生成子图</td>
</tr>
<tr>
<td style="text-align:center">度（Degree）</td>
<td style="text-align:center">一个顶点𝑣的度是与它相连的边的数量，记作𝑑(𝑣)。$\sum_{\nu \in V}d(\nu)=2 \mid E \mid$</td>
</tr>
<tr>
<td style="text-align:center">出度（In-degree）</td>
<td style="text-align:center">出度为从该顶点出发的边的个数</td>
</tr>
<tr>
<td style="text-align:center">入度（Out-degree）</td>
<td style="text-align:center">入度为终点时该节点的边的个数</td>
</tr>
<tr>
<td style="text-align:center">路径（Path）</td>
<td style="text-align:center">路径经过的边数为𝑘，即路径长度为$𝑘$</td>
</tr>
<tr>
<td style="text-align:center">简单路径（simple-path）</td>
<td style="text-align:center">路径的所有顶点都不相同或只有起点$𝑣_0$和终点$𝑣_𝑘$两个顶点相同</td>
</tr>
<tr>
<td style="text-align:center">圈（cycle）</td>
<td style="text-align:center">在有向图中路径起点$𝑣_0$和终点$𝑣_𝑘$相同。若满足简单路径的条件则是一个简单圈。</td>
</tr>
<tr>
<td style="text-align:center">距离</td>
<td style="text-align:center">两个顶点之间的最短路径长度就是两点之间的距离</td>
</tr>
</tbody>
</table>
</div>
<h3 id="图的分类"><a href="#图的分类" class="headerlink" title="图的分类"></a>图的分类</h3><ul>
<li>按边</li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">类型</th>
<th style="text-align:center">定义</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">简单图（simple graph）</td>
<td style="text-align:center">既没有平行边，也没有自环</td>
</tr>
<tr>
<td style="text-align:center">多重图（multi-graph）</td>
<td style="text-align:center">有平行边的图</td>
</tr>
<tr>
<td style="text-align:center">伪图（Pseudograph）</td>
<td style="text-align:center">既有平行边的图，也有自环的图</td>
</tr>
<tr>
<td style="text-align:center">完全图</td>
<td style="text-align:center">每对顶点之间都有边的图是完全图</td>
</tr>
</tbody>
</table>
</div>
<p>有的作者也允许多重图有自环</p>
<center><img src="/algorithm/algorithm-note-2018/图论类型.png" width="50%" alt="类型" align="center"></center>

<!-- ![类型](algorithm-note-2018/图论类型.png) -->
<ul>
<li>按路径</li>
</ul>
<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">类型</th>
<th style="text-align:center">定义</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">连通图</td>
<td style="text-align:center">一个图中的每个顶点到其他顶点都有路径</td>
</tr>
<tr>
<td style="text-align:center">强连通图</td>
<td style="text-align:center">有向图满足该条件</td>
</tr>
<tr>
<td style="text-align:center">弱连通图</td>
<td style="text-align:center">有向图不连通，但是它的基础图连通</td>
</tr>
</tbody>
</table>
</div>
<p>基础图: 边去掉方向的图</p>
<ul>
<li>按方向<center><img src="/algorithm/algorithm-note-2018/有向图与无向图.png" width="50%" alt="有向图与无向图" align="center"></center>

</li>
</ul>
<!-- ![有向图与无向图](algorithm-note-2018/有向图与无向图.png) -->
<ul>
<li>按权重<center><img src="/algorithm/algorithm-note-2018/有权图与无权图.png" width="50%" alt="有权图与无权图" align="center"></center>

</li>
</ul>
<!-- ![有权图与无权图](algorithm-note-2018/有权图与无权图.png) -->
<h2 id="存储显示方式"><a href="#存储显示方式" class="headerlink" title="存储显示方式"></a>存储显示方式</h2><h3 id="邻接矩阵-adjacency-matrices"><a href="#邻接矩阵-adjacency-matrices" class="headerlink" title="邻接矩阵 adjacency matrices"></a>邻接矩阵 adjacency matrices</h3><p>邻接矩阵使用$|V|∗|V|$的二维数组来表示图。$g[i][j]$表示的是顶点$i$和顶点$j$的关系。</p>
<ul>
<li>无向图<br>只需要知道顶点$i$和顶点$j$是否是相连的，因此我们只需要将$g[i][j]$和$g[j][j]$设置为1或是0表示相连或不相连即可。<br><img src="/algorithm/algorithm-note-2018/邻接矩阵.png" alt="邻接矩阵"></li>
<li>有向图<br>只需要知道是否有从顶点$i$到顶点$j$的边，因此如果顶点$i$有一条指向顶点$j$的边，那么$g[i][j]$就设为1，否则设为0。有向图与无向图不同，并不需要满足$g[i][j]=g[j][i]$<br><img src="/algorithm/algorithm-note-2018/邻接矩阵2.png" alt="邻接矩阵"></li>
<li><p>有权图<br>在带权值的图中，g[i][j]表示的是顶点i到顶点j的边的权值。由于在边不存在的情况下，如果将g[i][j]设为0，就无法和权值为0的情况区分开来，因此选取适当的较大的常数INF（只要能和普通的权值区别开来就可以了），然后令g[i][j]=INF就好了。当然，在无向图中还是要保持g[i][j]=g[j][i]。在一条边上有多种不带权值的情况下，定义多个同样的|V|∗|V|数组，或者是使用结构体或类作为数组的元素，就可以和原来一样对图进行处理了。<br><img src="/algorithm/algorithm-note-2018/邻接矩阵3.png" alt="邻接矩阵"></p>
</li>
<li><p>优点<br>很方便地判断任意两个顶点之间是否有边以及确定顶点的度 <script type="math/tex">\text{度}_i = \sum_{j=0}^{n-1} g[i][j]</script></p>
</li>
<li>缺点<br>在这种表示法中扫描所有边至少需要O(n2)时间，因为必须检查矩阵中的n2−n个元素才能确定图中边的条数（邻接矩阵对角线上的n个元素都是0，因此不用检查。又因为无向图的邻接矩阵是对称的，实际只需检查邻接矩阵的一半元素）。<br>通常把边很少的图成为稀疏图（sparse graphs）。如果用邻接矩阵表示稀疏图就会浪费大量内存空间</li>
</ul>
<h3 id="邻接表"><a href="#邻接表" class="headerlink" title="邻接表"></a>邻接表</h3><ul>
<li>优点: 只需$\mathcal{O}(|V|+|E|)$的内存空间<br><img src="/algorithm/algorithm-note-2018/邻接表.png" alt="邻接表"><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_VERTICES 50 </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span> *<span class="title">node</span>-<span class="title">pointer</span>;</span> </span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span> </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">int</span> vertex; </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span> *<span class="title">link</span>;</span> </span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;; </span></pre></td></tr><tr><td class="code"><pre><span class="line">node_pointer graph[MAX_VERTICES]; </span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">int</span> n=<span class="number">0</span>;</span></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="链接多重表"><a href="#链接多重表" class="headerlink" title="链接多重表"></a>链接多重表</h3><p>在无向图的邻接表存储表示中，每一条边$(v_i，v_j)$<br>都表示为两项：一项在顶点vi 的邻接表中，而另一项在顶点 $v_j$ 的邻接表中。在多重表中，各链表中的结点可以被几个链表共享，此时图中的每一条边只对应于一个结点，而这个结点出现在该边所关联的两个顶点的每个邻接链表中。<br><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">edge</span> *<span class="title">edge</span>-<span class="title">pointer</span> </span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="class"><span class="title">typedef</span> <span class="title">struct</span> <span class="title">edge</span> &#123;</span> </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">short</span> <span class="keyword">int</span> marked; </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">int</span> vertex1; </span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="keyword">int</span> vertex2; </span></pre></td></tr><tr><td class="code"><pre><span class="line">    edge_pointer path1; </span></pre></td></tr><tr><td class="code"><pre><span class="line">    edge_pointer path2; </span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;;</span></pre></td></tr></table></figure></p>
<h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><h3 id="拓扑排序"><a href="#拓扑排序" class="headerlink" title="拓扑排序"></a><a href="https://www.cnblogs.com/en-heng/p/5085690.html" target="_blank" rel="noopener">拓扑排序</a></h3><ul>
<li><a href="https://www.cs.usfca.edu/~galles/visualization/TopoSortIndegree.html" target="_blank" rel="noopener">入度表可视化</a></li>
<li><a href="https://www.cs.usfca.edu/~galles/visualization/TopoSortDFS.html" target="_blank" rel="noopener">拓扑DFS可视化</a></li>
</ul>
<h3 id="最短路径"><a href="#最短路径" class="headerlink" title="最短路径"></a>最短路径</h3><h3 id="略……"><a href="#略……" class="headerlink" title="略……"></a>略……</h3><hr>
<blockquote>
<p>参考资料：  </p>
<ul>
<li>《数据结构与算法——C语言描述》  </li>
<li>动画: <a href="https://github.com/MisterBooo/LeetCodeAnimation" target="_blank" rel="noopener">https://github.com/MisterBooo/LeetCodeAnimation</a></li>
<li>排序: <a href="https://www.cnblogs.com/onepixel/articles/7674659.html" target="_blank" rel="noopener">https://www.cnblogs.com/onepixel/articles/7674659.html</a></li>
<li>图论: <a href="https://blog.csdn.net/NoMasp/article/details/45827145" target="_blank" rel="noopener">https://blog.csdn.net/NoMasp/article/details/45827145</a></li>
</ul>
</blockquote>
]]></content>
      <tags>
        <tag>Algorithm</tag>
        <tag>C</tag>
      </tags>
  </entry>
  <entry>
    <title>编程入门——抬脚第一步</title>
    <url>/others/code-intro/</url>
    <content><![CDATA[<p>适合准备成为编程小白的编程小透明食用<br><a id="more"></a></p>
<h1 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h1><h2 id="Python环境"><a href="#Python环境" class="headerlink" title="Python环境"></a>Python环境</h2><h3 id="下载-推荐Anaconda"><a href="#下载-推荐Anaconda" class="headerlink" title="下载(推荐Anaconda)"></a>下载(推荐<code>Anaconda</code>)</h3><ul>
<li>下载地址(选择一个)<ul>
<li>Python官网下载</li>
<li><a href="https://www.anaconda.com/download/" target="_blank" rel="noopener">Anaconda官网下载</a><br>  耐心足够的童鞋可以从这里下</li>
<li><strong>[推荐]</strong> <a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/" target="_blank" rel="noopener">清华镜像下载</a><br>  急性子同学建议在这里下 <ul>
<li><strong>[建议]</strong> <a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/Anaconda3-5.2.0-Windows-x86_64.exe" target="_blank" rel="noopener">python3.6版本下载链接</a> </li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="Anaconda之Jupyter-Notebook"><a href="#Anaconda之Jupyter-Notebook" class="headerlink" title="Anaconda之Jupyter Notebook"></a>Anaconda之Jupyter Notebook</h3><ul>
<li><a href="https://blog.csdn.net/u014552678/article/details/62046638" target="_blank" rel="noopener">修改工作路径教程</a></li>
</ul>
<h2 id="C环境-gcc"><a href="#C环境-gcc" class="headerlink" title="C环境(gcc)"></a>C环境(gcc)</h2><p>当然,如果你已经安装了<code>Visual Studio</code>,并且不追求在命令行中操作C相关的命令,可以跳过这部分内容.<br>不过我还是建议安装,虽然步骤有点繁琐.</p>
<h3 id="OS-Windows"><a href="#OS-Windows" class="headerlink" title="OS: Windows"></a>OS: Windows</h3><p>选择一个编译器</p>
<ol>
<li><strong>cygwin</strong>: 百度<code>cygwin下载</code>,跟着其中一个教程走即可(安装的操作比较复杂请小心哦)</li>
<li><strong>Clang+MinGW</strong>: <a href="https://www.zhihu.com/question/30315894/answer/154979413" target="_blank" rel="noopener">教程</a></li>
<li>……</li>
</ol>
<blockquote>
<ol>
<li>下载安装包的时候似乎有个选择64位系统还是32位系统的问题,一般现在电脑都是64位的,心里没底的可以自己查下电脑,<a href="https://jingyan.baidu.com/article/b907e62784f08446e7891cdc.html" target="_blank" rel="noopener">不知道怎么查的出门右拐百度经验</a></li>
<li>下载的是安装包,请记得双击运行安装程序=-= 不要以为下载下来就好了</li>
</ol>
</blockquote>
<h1 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h1><p><strong>强推<code>VS Code</code>!!!</strong></p>
<p><a href="https://code.visualstudio.com/" target="_blank" rel="noopener">下载地址</a></p>
<p>安装过程中,这里的选项建议<strong>全选</strong><br><img src="/others/code-intro/vscode.png" alt="vscode"> </p>
]]></content>
      <tags>
        <tag>入门教程</tag>
      </tags>
  </entry>
  <entry>
    <title>前端笔记</title>
    <url>/web/web-note/</url>
    <content><![CDATA[<p>HTML5 &amp; JavaScript &amp; CSS<br><a id="more"></a></p>
<ul>
<li><a href="https://github.com/gulpjs/gulp/blob/master/docs/getting-started/1-quick-start.md" target="_blank" rel="noopener">服务器初始化</a></li>
<li><a href="https://www.jianshu.com/p/7636d5c60a8d" target="_blank" rel="noopener">文件上传</a></li>
</ul>
<h1 id="节点属性操作"><a href="#节点属性操作" class="headerlink" title="节点属性操作"></a>节点属性操作</h1><ul>
<li>修改节点某个style</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="string">'#test'</span>).css(<span class="string">'display'</span>, <span class="string">'block'</span>);</span></pre></td></tr></table></figure>
<ul>
<li>删除节点某个style</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="string">'#test'</span>).css(<span class="string">'display'</span>, <span class="string">''</span>);</span></pre></td></tr></table></figure>
<ul>
<li>删除节点所有sytle</li>
</ul>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$(<span class="string">'#test'</span>).removeAttr(<span class="string">"style"</span>)</span></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>LaTeX字典</title>
    <url>/latex/LaTeX-dict/</url>
    <content><![CDATA[<p>一些基础的latex代码<br><a id="more"></a></p>
<h1 id="Greek-Letters"><a href="#Greek-Letters" class="headerlink" title="Greek Letters"></a>Greek Letters</h1><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">希腊</th>
<th style="text-align:center"></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">α A</td>
<td style="text-align:center">\alpha A</td>
</tr>
<tr>
<td style="text-align:center">μ N</td>
<td style="text-align:center">\mu N</td>
</tr>
<tr>
<td style="text-align:center">β B</td>
<td style="text-align:center">\beta B</td>
</tr>
<tr>
<td style="text-align:center">ξ Ξ</td>
<td style="text-align:center">\xi \Xi</td>
</tr>
<tr>
<td style="text-align:center">γ Γ</td>
<td style="text-align:center">\gamma \Gamma</td>
</tr>
<tr>
<td style="text-align:center">o O</td>
<td style="text-align:center">o O</td>
</tr>
<tr>
<td style="text-align:center">δ Δ</td>
<td style="text-align:center">\delta \ Delta</td>
</tr>
<tr>
<td style="text-align:center">π Π</td>
<td style="text-align:center">\pi \Pi</td>
</tr>
<tr>
<td style="text-align:center">ϵ ε E</td>
<td style="text-align:center">\epsilon \varepsilon   E</td>
</tr>
<tr>
<td style="text-align:center">ρ ϱ P</td>
<td style="text-align:center">\rho \varrho P</td>
</tr>
<tr>
<td style="text-align:center">ζ Z</td>
<td style="text-align:center">\zeta Z</td>
</tr>
<tr>
<td style="text-align:center">σ Σ</td>
<td style="text-align:center">\sigma \Sigma</td>
</tr>
<tr>
<td style="text-align:center">η H</td>
<td style="text-align:center">\eta H</td>
</tr>
<tr>
<td style="text-align:center">τ T</td>
<td style="text-align:center">\tau T</td>
</tr>
<tr>
<td style="text-align:center">θ ϑ Θ</td>
<td style="text-align:center">\theta \vartheta \Theta</td>
</tr>
<tr>
<td style="text-align:center">υ Υ</td>
<td style="text-align:center">\upsilon \Upsilon</td>
</tr>
<tr>
<td style="text-align:center">ι I</td>
<td style="text-align:center">\iota I</td>
</tr>
<tr>
<td style="text-align:center">ϕ φ Φ</td>
<td style="text-align:center">\phi \varphi \Phi</td>
</tr>
<tr>
<td style="text-align:center">κ K</td>
<td style="text-align:center">\kappa K</td>
</tr>
<tr>
<td style="text-align:center">χ X</td>
<td style="text-align:center">\chi X</td>
</tr>
<tr>
<td style="text-align:center">λ Λ</td>
<td style="text-align:center">\lambda \Lambda</td>
</tr>
<tr>
<td style="text-align:center">ψ Ψ</td>
<td style="text-align:center">\psi \Psi</td>
</tr>
<tr>
<td style="text-align:center">μ M</td>
<td style="text-align:center">\mu M</td>
</tr>
<tr>
<td style="text-align:center">ω Ω</td>
<td style="text-align:center">\omega \Omega</td>
</tr>
</tbody>
</table>
</div>
<hr>
<h1 id="Operators"><a href="#Operators" class="headerlink" title="Operators"></a>Operators</h1><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">Operator</th>
<th style="text-align:center">语法</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">cos</td>
<td style="text-align:center">\cos</td>
</tr>
<tr>
<td style="text-align:center">sin</td>
<td style="text-align:center">\sin</td>
</tr>
<tr>
<td style="text-align:center">lim</td>
<td style="text-align:center">\lim</td>
</tr>
<tr>
<td style="text-align:center">exp</td>
<td style="text-align:center">\exp</td>
</tr>
<tr>
<td style="text-align:center">→</td>
<td style="text-align:center">\to</td>
</tr>
<tr>
<td style="text-align:center">∞</td>
<td style="text-align:center">\infty</td>
</tr>
<tr>
<td style="text-align:center">≡</td>
<td style="text-align:center">\equiv</td>
</tr>
<tr>
<td style="text-align:center">mod</td>
<td style="text-align:center">\bmod</td>
</tr>
<tr>
<td style="text-align:center">×</td>
<td style="text-align:center">\times</td>
</tr>
</tbody>
</table>
</div>
<hr>
<h1 id="Power-and-Indices"><a href="#Power-and-Indices" class="headerlink" title="Power and Indices"></a>Power and Indices</h1><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">符号</th>
<th style="text-align:center">语法</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1. $k_{n+1}$</td>
<td style="text-align:center">k_{n+1}</td>
</tr>
<tr>
<td style="text-align:center">2. $n^2$</td>
<td style="text-align:center">n^2</td>
</tr>
<tr>
<td style="text-align:center">3. $k_n^2$</td>
<td style="text-align:center">k_n^2</td>
</tr>
</tbody>
</table>
</div>
<hr>
<h1 id="Fractions-and-Binomials"><a href="#Fractions-and-Binomials" class="headerlink" title="Fractions and Binomials"></a>Fractions and Binomials</h1><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">符号</th>
<th style="text-align:center">语法</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1. $\frac{n!}{k!(n-k)!}$</td>
<td style="text-align:center">\frac{n!}{k!(n-k)!}</td>
</tr>
<tr>
<td style="text-align:center">2. $\binom{n}{k}$</td>
<td style="text-align:center">\binom{n}{k}</td>
</tr>
<tr>
<td style="text-align:center">3. $\frac{\frac{x}{1}}{x - y}$</td>
<td style="text-align:center">\frac{\frac{x}{1}}{x - y}</td>
</tr>
<tr>
<td style="text-align:center">4. $^3/_7$</td>
<td style="text-align:center">^3/_7</td>
</tr>
</tbody>
</table>
</div>
<hr>
<h1 id="Roots"><a href="#Roots" class="headerlink" title="Roots"></a>Roots</h1><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">符号</th>
<th style="text-align:center">语法</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1. $\sqrt{k}$</td>
<td style="text-align:center">\sqrt{k}</td>
</tr>
<tr>
<td style="text-align:center">2. $\sqrt[n]{k}$</td>
<td style="text-align:center">\sqrt[n]{k}</td>
</tr>
</tbody>
</table>
</div>
<hr>
<h1 id="Sums-and-Integrals"><a href="#Sums-and-Integrals" class="headerlink" title="Sums and Integrals"></a>Sums and Integrals</h1><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">符号</th>
<th style="text-align:center">LaTeX</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1. $\sum_{i=1}^{10} t_i$</td>
<td style="text-align:center">\sum_{i=1}^{10} t_i</td>
</tr>
<tr>
<td style="text-align:center">2. $\int_0^\infty\mathrm{e}^{-x}\,\mathrm{d}x$</td>
<td style="text-align:center">\int_0^\infty \mathrm{e}^{-x}\,\mathrm{d}x</td>
</tr>
<tr>
<td style="text-align:center">4. $\sum$</td>
<td style="text-align:center">\sum</td>
</tr>
<tr>
<td style="text-align:center">5. $\prod$</td>
<td style="text-align:center">\prod</td>
</tr>
<tr>
<td style="text-align:center">6. $\coprod$</td>
<td style="text-align:center">\coprod</td>
</tr>
<tr>
<td style="text-align:center">7. $\bigoplus$</td>
<td style="text-align:center">\bigoplus</td>
</tr>
<tr>
<td style="text-align:center">8. $\bigotimes$</td>
<td style="text-align:center">\bigotimes</td>
</tr>
<tr>
<td style="text-align:center">9. $\bigodot$</td>
<td style="text-align:center">\bigodot</td>
</tr>
<tr>
<td style="text-align:center">10. $\bigcup$</td>
<td style="text-align:center">\bigcup</td>
</tr>
<tr>
<td style="text-align:center">11. $\bigcap$</td>
<td style="text-align:center">\bigcap</td>
</tr>
<tr>
<td style="text-align:center">12. $\biguplus$</td>
<td style="text-align:center">\biguplus</td>
</tr>
<tr>
<td style="text-align:center">13. $\bigsqcup$</td>
<td style="text-align:center">\bigsqcup</td>
</tr>
<tr>
<td style="text-align:center">14. $\bigvee$</td>
<td style="text-align:center">\bigvee</td>
</tr>
<tr>
<td style="text-align:center">15. $\bigwedge$</td>
<td style="text-align:center">\bigwedge</td>
</tr>
<tr>
<td style="text-align:center">16. $\int$</td>
<td style="text-align:center">\int</td>
</tr>
<tr>
<td style="text-align:center">17. $\oint$</td>
<td style="text-align:center">\oint</td>
</tr>
<tr>
<td style="text-align:center">18. $\iint$</td>
<td style="text-align:center">\iint</td>
</tr>
<tr>
<td style="text-align:center">19. $\iiint$</td>
<td style="text-align:center">\iiint</td>
</tr>
<tr>
<td style="text-align:center">20. $\idotsint$</td>
<td style="text-align:center">\idotsint</td>
</tr>
<tr>
<td style="text-align:center">21. $\sum_{\substack{0&lt;i&lt;m \0&lt;j&lt;n}} P(i, j)$</td>
<td style="text-align:center">\sum{\substack{0&lt;i&lt;m\0&lt;j&lt;n}} P(i, j)</td>
</tr>
<tr>
<td style="text-align:center">22. $\dots$</td>
<td style="text-align:center">\dots</td>
</tr>
<tr>
<td style="text-align:center">23. $\int\limits_a^b$</td>
<td style="text-align:center">\int\limits_a^b</td>
</tr>
<tr>
<td style="text-align:center">24. $a’$</td>
<td style="text-align:center">a`</td>
</tr>
<tr>
<td style="text-align:center">25. $a^{\prime}$</td>
<td style="text-align:center">a^{\prime}</td>
</tr>
<tr>
<td style="text-align:center">25. $a’’$</td>
<td style="text-align:center">a’’</td>
</tr>
<tr>
<td style="text-align:center">26. $\int y\, \mathrm{d}x$</td>
<td style="text-align:center">\int y\, \mathrm{d}x</td>
</tr>
<tr>
<td style="text-align:center">27. $\hat{a}$</td>
<td style="text-align:center">hat{a}</td>
</tr>
<tr>
<td style="text-align:center">28. $\bar{a}$</td>
<td style="text-align:center">\bar{a}</td>
</tr>
<tr>
<td style="text-align:center">29. $\grave{a}$</td>
<td style="text-align:center">\grave{a}</td>
</tr>
<tr>
<td style="text-align:center">30. $\acute{a}$</td>
<td style="text-align:center">\acute{a}</td>
</tr>
<tr>
<td style="text-align:center">31. $\dot{a}$</td>
<td style="text-align:center">\dot{a}</td>
</tr>
<tr>
<td style="text-align:center">32. $\ddot{a}$</td>
<td style="text-align:center">\ddot{a}</td>
</tr>
<tr>
<td style="text-align:center">33. $\not{a}$</td>
<td style="text-align:center">\not{a}</td>
</tr>
<tr>
<td style="text-align:center">34. $\mathring{a}$</td>
<td style="text-align:center">\mathring{a}</td>
</tr>
<tr>
<td style="text-align:center">35. $\overrightarrow{AB}$</td>
<td style="text-align:center">\overrightarrow{AB}</td>
</tr>
<tr>
<td style="text-align:center">36. $\overleftarrow{AB}$</td>
<td style="text-align:center">\overleftarrow{AB}</td>
</tr>
<tr>
<td style="text-align:center">37. $a’’’$</td>
<td style="text-align:center">a’’’</td>
</tr>
<tr>
<td style="text-align:center">38. $\overline{aaa}$</td>
<td style="text-align:center">\overline{aaa}</td>
</tr>
<tr>
<td style="text-align:center">39. $\check{a}$</td>
<td style="text-align:center">\check{a}</td>
</tr>
<tr>
<td style="text-align:center">40. $\vec{a}$</td>
<td style="text-align:center">\vec{a}</td>
</tr>
<tr>
<td style="text-align:center">41. $\underline{a}$</td>
<td style="text-align:center">\underline{a}</td>
</tr>
<tr>
<td style="text-align:center">42. $\color{red}x$</td>
<td style="text-align:center">\color{red}x</td>
</tr>
<tr>
<td style="text-align:center">43. $\pm$</td>
<td style="text-align:center">\pm</td>
</tr>
<tr>
<td style="text-align:center">44. $\mp$</td>
<td style="text-align:center">\mp</td>
</tr>
<tr>
<td style="text-align:center">45. $\int y \mathrm{d}x$</td>
<td style="text-align:center">\int y \mathrm{d}x</td>
</tr>
<tr>
<td style="text-align:center">49. $!$</td>
<td style="text-align:center">!</td>
</tr>
<tr>
<td style="text-align:center">50. $\ddots$</td>
<td style="text-align:center">\ddots</td>
</tr>
<tr>
<td style="text-align:center">51. $\vdots$</td>
<td style="text-align:center">\vdots</td>
</tr>
<tr>
<td style="text-align:center">52. $\ldots$</td>
<td style="text-align:center">\ldots</td>
</tr>
<tr>
<td style="text-align:center">53. $\cdots$</td>
<td style="text-align:center">\cdots</td>
</tr>
<tr>
<td style="text-align:center">54. $\therefore$</td>
<td style="text-align:center">\therefore</td>
</tr>
<tr>
<td style="text-align:center">55. $\because$</td>
<td style="text-align:center">\because</td>
</tr>
</tbody>
</table>
</div>
<hr>
<h1 id="Brackets-etc"><a href="#Brackets-etc" class="headerlink" title="Brackets etc"></a>Brackets etc</h1><div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">符号</th>
<th style="text-align:center">LaTeX</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1. $(a)$</td>
<td style="text-align:center">(a)</td>
</tr>
<tr>
<td style="text-align:center">2. $[a]$</td>
<td style="text-align:center">[a]</td>
</tr>
<tr>
<td style="text-align:center">3. ${a}$</td>
<td style="text-align:center">{a}</td>
</tr>
<tr>
<td style="text-align:center">4. $\langle f \rangle$</td>
<td style="text-align:center">\langle f \rangle</td>
</tr>
<tr>
<td style="text-align:center">5. $\lfloor f \rfloor$</td>
<td style="text-align:center">\lfloor f \rfloor</td>
</tr>
<tr>
<td style="text-align:center">6. $\lceil f \rceil$</td>
<td style="text-align:center">\lceil f \rceil</td>
</tr>
<tr>
<td style="text-align:center">7. $\ulcorner f \urcorner$</td>
<td style="text-align:center">\ulcorner f \urcorner</td>
</tr>
</tbody>
</table>
</div>
]]></content>
      <tags>
        <tag>LaTeX</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo Sooooo Cool</title>
    <url>/web/Hexo-Configuration-NSConflict-%E6%9C%A8%E4%B8%80-mac10.15.1/</url>
    <content><![CDATA[<h1 id="1-常用命令"><a href="#1-常用命令" class="headerlink" title="1. 常用命令"></a>1. 常用命令</h1><ul>
<li>更新博客</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo d -g</span></pre></td></tr></table></figure>
<ul>
<li>调试模式</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo s –debug</span></pre></td></tr></table></figure>
<ul>
<li>清理</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo clean</span></pre></td></tr></table></figure>
<a id="more"></a>
<p><strong>目录</strong><br><!-- @import "[TOC]" {cmd="toc" depthFrom=1 depthTo=6 orderedList=false} --></p>
<!-- code_chunk_output -->
<ul>
<li><a href="#1-常用命令">1. 常用命令</a></li>
<li><a href="#2-hexo-安装">2. Hexo 安装</a></li>
<li><a href="#3-hexo-配置">3. Hexo 配置</a><ul>
<li><a href="#31-next主题个性化设置教程httpssegmentfaultcoma1190000009544924articleheader2">3.1. NexT主题个性化设置教程</a></li>
<li><a href="#32-设置背景透明度">3.2. 设置背景透明度</a></li>
<li><a href="#33-icon设置httpswwwjianshucomp7519c71c8ea9">3.3. icon设置</a></li>
<li><a href="#34-添加tags和categorieshttpswwwjianshucomp3d2e7b3ec182">3.4. 添加tags和categories</a></li>
<li><a href="#35-markdown插入图片">3.5. Markdown插入图片</a></li>
<li><a href="#36-子博客">3.6. 子博客</a></li>
</ul>
</li>
<li><a href="#4-报错记录">4. 报错记录</a><ul>
<li><a href="#41-网页加载缓慢已修复">4.1. 网页加载缓慢(已修复)</a></li>
<li><a href="#42-2018-3-31">4.2. 2018-3-31</a></li>
</ul>
</li>
</ul>
<!-- /code_chunk_output -->
<h1 id="2-Hexo-安装"><a href="#2-Hexo-安装" class="headerlink" title="2. Hexo 安装"></a>2. Hexo 安装</h1><p><a href="https://blog.csdn.net/gdutxiaoxu/article/details/53576018" target="_blank" rel="noopener">安装教程</a><br><em>更改主题部分的实例是旧版的,新版Github<a href="https://github.com/theme-next" target="_blank" rel="noopener">地址</a></em></p>
<h1 id="3-Hexo-配置"><a href="#3-Hexo-配置" class="headerlink" title="3. Hexo 配置"></a>3. Hexo 配置</h1><h2 id="3-1-NexT主题个性化设置教程"><a href="#3-1-NexT主题个性化设置教程" class="headerlink" title="3.1. NexT主题个性化设置教程"></a>3.1. <a href="https://segmentfault.com/a/1190000009544924#articleHeader2" target="_blank" rel="noopener">NexT主题个性化设置教程</a></h2><h2 id="3-2-设置背景透明度"><a href="#3-2-设置背景透明度" class="headerlink" title="3.2. 设置背景透明度"></a>3.2. 设置背景透明度</h2><p>修改<code>themes\next\source\css\_custom\custom.styl</code><br>增加以下几行</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.header-inner</span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="attribute">opacity</span>: <span class="number">0.8</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="selector-class">.main-inner</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="attribute">opacity</span>: <span class="number">0.8</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<h2 id="3-3-icon设置"><a href="#3-3-icon设置" class="headerlink" title="3.3. icon设置"></a>3.3. <a href="https://www.jianshu.com/p/7519c71c8ea9" target="_blank" rel="noopener">icon设置</a></h2><ul>
<li><h2 id="3-4-添加tags和categories"><a href="#3-4-添加tags和categories" class="headerlink" title="3.4. 添加tags和categories"></a>3.4. <a href="https://www.jianshu.com/p/3d2e7b3ec182" target="_blank" rel="noopener">添加tags和categories</a></h2></li>
</ul>
<h2 id="3-4-Markdown插入图片"><a href="#3-4-Markdown插入图片" class="headerlink" title="3.4. Markdown插入图片"></a>3.4. Markdown插入图片</h2><p>安装插件<code>hexo-asset-image</code>, 注意一定要在博客的根目录运行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install https://github.com/CodeFalling/hexo-asset-image --save</span></pre></td></tr></table></figure>
<p>有时候安装完后不一定显示图片成功, 需要修改下代码.<br>加载图片失败的原因一般是路径错误.<br>在<code>/node_modules/hexo-asset-image/index.js</code>有一段代码如下</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> beginPos = getPosition(link, <span class="string">'/'</span>, <span class="number">3</span>) + <span class="number">1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// In hexo 3.1.1, the permalink of "about" page is like ".../about/index.html".</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> endPos = link.lastIndexOf(<span class="string">'/'</span>) + <span class="number">1</span>;</span></pre></td></tr></table></figure>
<p>此处是按照<code>/</code>的位置截取url,按照需求调整选择第几个<code>/</code>就好了</p>
<p><strong><em>注意:</em></strong> 如果想使代码生效, 需要更改下博客的内容才能让这些代码运行.</p>
<h2 id="3-5-MathJax-数学公式"><a href="#3-5-MathJax-数学公式" class="headerlink" title="3.5. MathJax 数学公式"></a>3.5. MathJax 数学公式</h2><ul>
<li><a href="http://palanceli.com/2018/03/08/2018/0308HexoLatex/" target="_blank" rel="noopener">http://palanceli.com/2018/03/08/2018/0308HexoLatex/</a></li>
<li><a href="https://2young.2simple.top/article/Hexo%E9%85%8D%E7%BD%AE%E9%97%AE%E9%A2%98-Pandoc.html" target="_blank" rel="noopener">https://2young.2simple.top/article/Hexo%E9%85%8D%E7%BD%AE%E9%97%AE%E9%A2%98-Pandoc.html</a></li>
<li><a href="https://blog.csdn.net/wgshun616/article/details/81019687" target="_blank" rel="noopener">https://blog.csdn.net/wgshun616/article/details/81019687</a></li>
</ul>
<h2 id="3-6-子博客"><a href="#3-6-子博客" class="headerlink" title="3.6. 子博客"></a>3.6. 子博客</h2><p>github库名不同于用户名时,即子网页博客,博客的文章点进去会404  </p>
<p><strong>解决:</strong>  </p>
<ol>
<li>创建<code>CNAME</code>文件,内容写入父网页域名(没有http://)</li>
<li>文件保存在hexo站点文件夹的<code>public</code>和<code>source</code>里(因为当初百度的时候有人说这个有人说那个,反正我都装了就对了orz)</li>
<li>站点配置文件<code>_config.yml</code>中修改,如下</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> URL</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line">url: https://benature.github.io/child.github.io/</span></pre></td></tr><tr><td class="code"><pre><span class="line">root: /child.github.io/</span></pre></td></tr></table></figure>
<ol>
<li><code>hexo d -g</code> .bingo~</li>
</ol>
<h1 id="4-报错记录"><a href="#4-报错记录" class="headerlink" title="4. 报错记录"></a>4. 报错记录</h1><h2 id="4-1-网页加载缓慢-已修复"><a href="#4-1-网页加载缓慢-已修复" class="headerlink" title="4.1. 网页加载缓慢(已修复)"></a>4.1. 网页加载缓慢(已修复)</h2><p>console报错记录是</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET https:&#x2F;&#x2F;benature.github.io&#x2F;lib&#x2F;three&#x2F;three.min.js net::ERR_ABORTED 404</span></pre></td></tr><tr><td class="code"><pre><span class="line">GET https:&#x2F;&#x2F;benature.github.io&#x2F;lib&#x2F;three&#x2F;canvas_lines.min.js net::ERR_ABORTED 404</span></pre></td></tr></table></figure>
<p>显然报错原因是路径错误.<br>通过搜索在<code>\themes\next\layout\_scripts\vendors.swig</code>内有相关设置<br>再看主题配置文件,有一栏就是<code>vendors</code>,把里面需要的网址反注释出来就好了</p>
<h2 id="4-2-2018-3-31"><a href="#4-2-2018-3-31" class="headerlink" title="4.2. 2018-3-31"></a>4.2. 2018-3-31</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Error: Connection reset by 13.250.177.223 port 22</span></pre></td></tr><tr><td class="code"><pre><span class="line">fatal: sha1 file &#39;&lt;stdout&gt;&#39; write error: Broken pipe</span></pre></td></tr><tr><td class="code"><pre><span class="line">fatal: The remote end hung up unexpectedly</span></pre></td></tr></table></figure>
<h2 id="4-3-hexo-4-0-0-會給-a-標簽-添加-target-”-blank”"><a href="#4-3-hexo-4-0-0-會給-a-標簽-添加-target-”-blank”" class="headerlink" title="4.3. hexo 4.0.0 會給 a 標簽 添加 target=”_blank”"></a>4.3. hexo 4.0.0 會給 a 標簽 添加 target=”_blank”</h2><p><a href="https://github.com/hexojs/hexo/issues/3796" target="_blank" rel="noopener">https://github.com/hexojs/hexo/issues/3796</a></p>
<hr>
<p>参考资料:</p>
<ul>
<li>插入图片: <a href="https://blog.csdn.net/xjm850552586/article/details/84101345" target="_blank" rel="noopener">https://blog.csdn.net/xjm850552586/article/details/84101345</a></li>
</ul>
]]></content>
      <tags>
        <tag>配置</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo Sooooo Cool</title>
    <url>/web/Hexo-Configuration/</url>
    <content><![CDATA[<h1 id="1-常用命令"><a href="#1-常用命令" class="headerlink" title="1. 常用命令"></a>1. 常用命令</h1><ul>
<li>更新博客</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo d -g</span></pre></td></tr></table></figure>
<ul>
<li>调试模式</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo s –debug</span></pre></td></tr></table></figure>
<ul>
<li>清理</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo clean</span></pre></td></tr></table></figure>
<a id="more"></a>
<p><strong>目录</strong><br><!-- @import "[TOC]" {cmd="toc" depthFrom=1 depthTo=6 orderedList=false} --></p>
<!-- code_chunk_output -->
<ul>
<li><a href="#1-常用命令">1. 常用命令</a></li>
<li><a href="#2-hexo-安装">2. Hexo 安装</a></li>
<li><a href="#3-hexo-配置">3. Hexo 配置</a><ul>
<li><a href="#31-next主题个性化设置教程httpssegmentfaultcoma1190000009544924articleheader2">3.1. NexT主题个性化设置教程</a></li>
<li><a href="#32-设置背景透明度">3.2. 设置背景透明度</a></li>
<li><a href="#33-icon设置httpswwwjianshucomp7519c71c8ea9">3.3. icon设置</a></li>
<li><a href="#34-添加tags和categorieshttpswwwjianshucomp3d2e7b3ec182">3.4. 添加tags和categories</a></li>
<li><a href="#35-markdown插入图片">3.5. Markdown插入图片</a></li>
<li><a href="#36-子博客">3.6. 子博客</a></li>
</ul>
</li>
<li><a href="#4-报错记录">4. 报错记录</a><ul>
<li><a href="#41-网页加载缓慢已修复">4.1. 网页加载缓慢(已修复)</a></li>
<li><a href="#42-2018-3-31">4.2. 2018-3-31</a></li>
</ul>
</li>
</ul>
<!-- /code_chunk_output -->
<h1 id="2-Hexo-安装"><a href="#2-Hexo-安装" class="headerlink" title="2. Hexo 安装"></a>2. Hexo 安装</h1><p><a href="https://blog.csdn.net/gdutxiaoxu/article/details/53576018" target="_blank" rel="noopener">安装教程</a><br><em>更改主题部分的实例是旧版的,新版Github<a href="https://github.com/theme-next" target="_blank" rel="noopener">地址</a></em></p>
<h1 id="3-Hexo-配置"><a href="#3-Hexo-配置" class="headerlink" title="3. Hexo 配置"></a>3. Hexo 配置</h1><h2 id="3-1-NexT主题个性化设置教程"><a href="#3-1-NexT主题个性化设置教程" class="headerlink" title="3.1. NexT主题个性化设置教程"></a>3.1. <a href="https://segmentfault.com/a/1190000009544924#articleHeader2" target="_blank" rel="noopener">NexT主题个性化设置教程</a></h2><h2 id="3-2-设置背景透明度"><a href="#3-2-设置背景透明度" class="headerlink" title="3.2. 设置背景透明度"></a>3.2. 设置背景透明度</h2><p>修改<code>themes\next\source\css\_custom\custom.styl</code><br>增加以下几行</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.header-inner</span>&#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="attribute">opacity</span>: <span class="number">0.8</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="selector-class">.main-inner</span> &#123;</span></pre></td></tr><tr><td class="code"><pre><span class="line">    <span class="attribute">opacity</span>: <span class="number">0.8</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line">&#125;</span></pre></td></tr></table></figure>
<h2 id="3-3-icon设置"><a href="#3-3-icon设置" class="headerlink" title="3.3. icon设置"></a>3.3. <a href="https://www.jianshu.com/p/7519c71c8ea9" target="_blank" rel="noopener">icon设置</a></h2><ul>
<li><h2 id="3-4-添加tags和categories"><a href="#3-4-添加tags和categories" class="headerlink" title="3.4. 添加tags和categories"></a>3.4. <a href="https://www.jianshu.com/p/3d2e7b3ec182" target="_blank" rel="noopener">添加tags和categories</a></h2></li>
</ul>
<h2 id="3-5-Markdown插入图片"><a href="#3-5-Markdown插入图片" class="headerlink" title="3.5. Markdown插入图片"></a>3.5. Markdown插入图片</h2><p>安装插件<code>hexo-asset-image</code>, 注意一定要在博客的根目录运行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install https://github.com/CodeFalling/hexo-asset-image --save</span></pre></td></tr></table></figure>
<p>有时候安装完后不一定显示图片成功, 需要修改下代码.<br>加载图片失败的原因一般是路径错误.<br>在<code>/node_modules/hexo-asset-image/index.js</code>有一段代码如下</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> beginPos = getPosition(link, <span class="string">'/'</span>, <span class="number">3</span>) + <span class="number">1</span>;</span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="comment">// In hexo 3.1.1, the permalink of "about" page is like ".../about/index.html".</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> endPos = link.lastIndexOf(<span class="string">'/'</span>) + <span class="number">1</span>;</span></pre></td></tr></table></figure>
<p>此处是按照<code>/</code>的位置截取url,按照需求调整选择第几个<code>/</code>就好了</p>
<p><strong><em>注意:</em></strong> 如果想使代码生效, 需要更改下博客的内容才能让这些代码运行.</p>
<h2 id="3-6-MathJax-数学公式"><a href="#3-6-MathJax-数学公式" class="headerlink" title="3.6. MathJax 数学公式"></a>3.6. MathJax 数学公式</h2><ul>
<li><a href="http://palanceli.com/2018/03/08/2018/0308HexoLatex/" target="_blank" rel="noopener">http://palanceli.com/2018/03/08/2018/0308HexoLatex/</a></li>
<li><a href="https://2young.2simple.top/article/Hexo%E9%85%8D%E7%BD%AE%E9%97%AE%E9%A2%98-Pandoc.html" target="_blank" rel="noopener">https://2young.2simple.top/article/Hexo%E9%85%8D%E7%BD%AE%E9%97%AE%E9%A2%98-Pandoc.html</a></li>
<li><a href="https://blog.csdn.net/wgshun616/article/details/81019687" target="_blank" rel="noopener">https://blog.csdn.net/wgshun616/article/details/81019687</a></li>
</ul>
<h2 id="3-7-子博客"><a href="#3-7-子博客" class="headerlink" title="3.7. 子博客"></a>3.7. 子博客</h2><p>github库名不同于用户名时,即子网页博客,博客的文章点进去会404  </p>
<p><strong>解决:</strong>  </p>
<ol>
<li>创建<code>CNAME</code>文件,内容写入父网页域名(没有http://)</li>
<li>文件保存在hexo站点文件夹的<code>public</code>和<code>source</code>里(因为当初百度的时候有人说这个有人说那个,反正我都装了就对了orz)</li>
<li>站点配置文件<code>_config.yml</code>中修改,如下</li>
</ol>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> URL</span></span></pre></td></tr><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span></span></pre></td></tr><tr><td class="code"><pre><span class="line">url: https://benature.github.io/child.github.io/</span></pre></td></tr><tr><td class="code"><pre><span class="line">root: /child.github.io/</span></pre></td></tr></table></figure>
<ol>
<li><code>hexo d -g</code> .bingo~</li>
</ol>
<h1 id="4-报错记录"><a href="#4-报错记录" class="headerlink" title="4. 报错记录"></a>4. 报错记录</h1><h2 id="4-1-网页加载缓慢-已修复"><a href="#4-1-网页加载缓慢-已修复" class="headerlink" title="4.1. 网页加载缓慢(已修复)"></a>4.1. 网页加载缓慢(已修复)</h2><p>console报错记录是</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET https:&#x2F;&#x2F;benature.github.io&#x2F;lib&#x2F;three&#x2F;three.min.js net::ERR_ABORTED 404</span></pre></td></tr><tr><td class="code"><pre><span class="line">GET https:&#x2F;&#x2F;benature.github.io&#x2F;lib&#x2F;three&#x2F;canvas_lines.min.js net::ERR_ABORTED 404</span></pre></td></tr></table></figure>
<p>显然报错原因是路径错误.<br>通过搜索在<code>\themes\next\layout\_scripts\vendors.swig</code>内有相关设置<br>再看主题配置文件,有一栏就是<code>vendors</code>,把里面需要的网址反注释出来就好了</p>
<h2 id="4-2-2018-3-31"><a href="#4-2-2018-3-31" class="headerlink" title="4.2. 2018-3-31"></a>4.2. 2018-3-31</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Error: Connection reset by 13.250.177.223 port 22</span></pre></td></tr><tr><td class="code"><pre><span class="line">fatal: sha1 file &#39;&lt;stdout&gt;&#39; write error: Broken pipe</span></pre></td></tr><tr><td class="code"><pre><span class="line">fatal: The remote end hung up unexpectedly</span></pre></td></tr></table></figure>
<hr>
<p>参考资料:</p>
<ul>
<li>插入图片: <a href="https://blog.csdn.net/xjm850552586/article/details/84101345" target="_blank" rel="noopener">https://blog.csdn.net/xjm850552586/article/details/84101345</a></li>
</ul>
]]></content>
      <tags>
        <tag>配置</tag>
      </tags>
  </entry>
</search>
